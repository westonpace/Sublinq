// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: selection.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Substrait.Protobuf {

  /// <summary>Holder for reflection information generated from selection.proto</summary>
  public static partial class SelectionReflection {

    #region Descriptor
    /// <summary>File descriptor for selection.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SelectionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9zZWxlY3Rpb24ucHJvdG8SDGlvLnN1YnN0cmFpdCKJBgoQUmVmZXJlbmNl",
            "U2VnbWVudBI4CgdtYXBfa2V5GAEgASgLMiUuaW8uc3Vic3RyYWl0LlJlZmVy",
            "ZW5jZVNlZ21lbnQuTWFwS2V5SAASRQoKZXhwcmVzc2lvbhgCIAEoCzIvLmlv",
            "LnN1YnN0cmFpdC5SZWZlcmVuY2VTZWdtZW50Lk1hcEtleUV4cHJlc3Npb25I",
            "ABJCCgxzdHJ1Y3RfZmllbGQYAyABKAsyKi5pby5zdWJzdHJhaXQuUmVmZXJl",
            "bmNlU2VnbWVudC5TdHJ1Y3RGaWVsZEgAEkIKDGxpc3RfZWxlbWVudBgEIAEo",
            "CzIqLmlvLnN1YnN0cmFpdC5SZWZlcmVuY2VTZWdtZW50Lkxpc3RFbGVtZW50",
            "SAASPgoKbGlzdF9yYW5nZRgFIAEoCzIoLmlvLnN1YnN0cmFpdC5SZWZlcmVu",
            "Y2VTZWdtZW50Lkxpc3RSYW5nZUgAGkgKBk1hcEtleRIPCgdtYXBfa2V5GAEg",
            "ASgJEi0KBWNoaWxkGAIgASgLMh4uaW8uc3Vic3RyYWl0LlJlZmVyZW5jZVNl",
            "Z21lbnQaXQoQTWFwS2V5RXhwcmVzc2lvbhIaChJtYXBfa2V5X2V4cHJlc3Np",
            "b24YASABKAkSLQoFY2hpbGQYAiABKAsyHi5pby5zdWJzdHJhaXQuUmVmZXJl",
            "bmNlU2VnbWVudBpLCgtTdHJ1Y3RGaWVsZBINCgVmaWVsZBgBIAEoBRItCgVj",
            "aGlsZBgCIAEoCzIeLmlvLnN1YnN0cmFpdC5SZWZlcmVuY2VTZWdtZW50GkwK",
            "C0xpc3RFbGVtZW50Eg4KBm9mZnNldBgBIAEoBRItCgVjaGlsZBgCIAEoCzIe",
            "LmlvLnN1YnN0cmFpdC5SZWZlcmVuY2VTZWdtZW50GlYKCUxpc3RSYW5nZRIN",
            "CgVzdGFydBgBIAEoBRILCgNlbmQYAiABKAUSLQoFY2hpbGQYAyABKAsyHi5p",
            "by5zdWJzdHJhaXQuUmVmZXJlbmNlU2VnbWVudEIQCg5yZWZlcmVuY2VfdHlw",
            "ZSKICQoOTWFza0V4cHJlc3Npb24SOQoGc2VsZWN0GAEgASgLMikuaW8uc3Vi",
            "c3RyYWl0Lk1hc2tFeHByZXNzaW9uLlN0cnVjdFNlbGVjdBIgChhtYWludGFp",
            "bl9zaW5ndWxhcl9zdHJ1Y3QYAiABKAgavQEKBlNlbGVjdBI7CgZzdHJ1Y3QY",
            "ASABKAsyKS5pby5zdWJzdHJhaXQuTWFza0V4cHJlc3Npb24uU3RydWN0U2Vs",
            "ZWN0SAASNwoEbGlzdBgCIAEoCzInLmlvLnN1YnN0cmFpdC5NYXNrRXhwcmVz",
            "c2lvbi5MaXN0U2VsZWN0SAASNQoDbWFwGAMgASgLMiYuaW8uc3Vic3RyYWl0",
            "Lk1hc2tFeHByZXNzaW9uLk1hcFNlbGVjdEgAQgYKBHR5cGUaTQoMU3RydWN0",
            "U2VsZWN0Ej0KDHN0cnVjdF9pdGVtcxgBIAMoCzInLmlvLnN1YnN0cmFpdC5N",
            "YXNrRXhwcmVzc2lvbi5TdHJ1Y3RJdGVtGk8KClN0cnVjdEl0ZW0SDQoFZmll",
            "bGQYASABKAUSMgoFY2hpbGQYAiABKAsyIy5pby5zdWJzdHJhaXQuTWFza0V4",
            "cHJlc3Npb24uU2VsZWN0GpQDCgpMaXN0U2VsZWN0EkkKCXNlbGVjdGlvbhgB",
            "IAMoCzI2LmlvLnN1YnN0cmFpdC5NYXNrRXhwcmVzc2lvbi5MaXN0U2VsZWN0",
            "Lkxpc3RTZWxlY3RJdGVtEjIKBWNoaWxkGAIgASgLMiMuaW8uc3Vic3RyYWl0",
            "Lk1hc2tFeHByZXNzaW9uLlNlbGVjdBqGAgoOTGlzdFNlbGVjdEl0ZW0SUgoE",
            "aXRlbRgBIAEoCzJCLmlvLnN1YnN0cmFpdC5NYXNrRXhwcmVzc2lvbi5MaXN0",
            "U2VsZWN0Lkxpc3RTZWxlY3RJdGVtLkxpc3RFbGVtZW50SAASUQoFc2xpY2UY",
            "AiABKAsyQC5pby5zdWJzdHJhaXQuTWFza0V4cHJlc3Npb24uTGlzdFNlbGVj",
            "dC5MaXN0U2VsZWN0SXRlbS5MaXN0U2xpY2VIABocCgtMaXN0RWxlbWVudBIN",
            "CgVmaWVsZBgBIAEoBRonCglMaXN0U2xpY2USDQoFc3RhcnQYASABKAUSCwoD",
            "ZW5kGAIgASgFQgYKBHR5cGUaoQIKCU1hcFNlbGVjdBI8CgNrZXkYASABKAsy",
            "LS5pby5zdWJzdHJhaXQuTWFza0V4cHJlc3Npb24uTWFwU2VsZWN0Lk1hcEtl",
            "eUgAEk0KCmV4cHJlc3Npb24YAiABKAsyNy5pby5zdWJzdHJhaXQuTWFza0V4",
            "cHJlc3Npb24uTWFwU2VsZWN0Lk1hcEtleUV4cHJlc3Npb25IABIyCgVjaGls",
            "ZBgDIAEoCzIjLmlvLnN1YnN0cmFpdC5NYXNrRXhwcmVzc2lvbi5TZWxlY3Qa",
            "GQoGTWFwS2V5Eg8KB21hcF9rZXkYASABKAkaLgoQTWFwS2V5RXhwcmVzc2lv",
            "bhIaChJtYXBfa2V5X2V4cHJlc3Npb24YASABKAlCCAoGc2VsZWN0IpgBCg5G",
            "aWVsZFJlZmVyZW5jZRI6ChBkaXJlY3RfcmVmZXJlbmNlGAEgASgLMh4uaW8u",
            "c3Vic3RyYWl0LlJlZmVyZW5jZVNlZ21lbnRIABI4ChBtYXNrZWRfcmVmZXJl",
            "bmNlGAIgASgLMhwuaW8uc3Vic3RyYWl0Lk1hc2tFeHByZXNzaW9uSABCEAoO",
            "cmVmZXJlbmNlX3R5cGVCF1ABqgISU3Vic3RyYWl0LlByb3RvYnVmYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.ReferenceSegment), global::Substrait.Protobuf.ReferenceSegment.Parser, new[]{ "MapKey", "Expression", "StructField", "ListElement", "ListRange" }, new[]{ "ReferenceType" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.ReferenceSegment.Types.MapKey), global::Substrait.Protobuf.ReferenceSegment.Types.MapKey.Parser, new[]{ "MapKey_", "Child" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.ReferenceSegment.Types.MapKeyExpression), global::Substrait.Protobuf.ReferenceSegment.Types.MapKeyExpression.Parser, new[]{ "MapKeyExpression_", "Child" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.ReferenceSegment.Types.StructField), global::Substrait.Protobuf.ReferenceSegment.Types.StructField.Parser, new[]{ "Field", "Child" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.ReferenceSegment.Types.ListElement), global::Substrait.Protobuf.ReferenceSegment.Types.ListElement.Parser, new[]{ "Offset", "Child" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.ReferenceSegment.Types.ListRange), global::Substrait.Protobuf.ReferenceSegment.Types.ListRange.Parser, new[]{ "Start", "End", "Child" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.MaskExpression), global::Substrait.Protobuf.MaskExpression.Parser, new[]{ "Select", "MaintainSingularStruct" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.MaskExpression.Types.Select), global::Substrait.Protobuf.MaskExpression.Types.Select.Parser, new[]{ "Struct", "List", "Map" }, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.MaskExpression.Types.StructSelect), global::Substrait.Protobuf.MaskExpression.Types.StructSelect.Parser, new[]{ "StructItems" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.MaskExpression.Types.StructItem), global::Substrait.Protobuf.MaskExpression.Types.StructItem.Parser, new[]{ "Field", "Child" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.MaskExpression.Types.ListSelect), global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Parser, new[]{ "Selection", "Child" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem), global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem.Parser, new[]{ "Item", "Slice" }, new[]{ "Type" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem.Types.ListElement), global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem.Types.ListElement.Parser, new[]{ "Field" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem.Types.ListSlice), global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem.Types.ListSlice.Parser, new[]{ "Start", "End" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.MaskExpression.Types.MapSelect), global::Substrait.Protobuf.MaskExpression.Types.MapSelect.Parser, new[]{ "Key", "Expression", "Child" }, new[]{ "Select" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.MaskExpression.Types.MapSelect.Types.MapKey), global::Substrait.Protobuf.MaskExpression.Types.MapSelect.Types.MapKey.Parser, new[]{ "MapKey_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.MaskExpression.Types.MapSelect.Types.MapKeyExpression), global::Substrait.Protobuf.MaskExpression.Types.MapSelect.Types.MapKeyExpression.Parser, new[]{ "MapKeyExpression_" }, null, null, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.FieldReference), global::Substrait.Protobuf.FieldReference.Parser, new[]{ "DirectReference", "MaskedReference" }, new[]{ "ReferenceType" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ReferenceSegment : pb::IMessage<ReferenceSegment>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReferenceSegment> _parser = new pb::MessageParser<ReferenceSegment>(() => new ReferenceSegment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReferenceSegment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Substrait.Protobuf.SelectionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReferenceSegment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReferenceSegment(ReferenceSegment other) : this() {
      switch (other.ReferenceTypeCase) {
        case ReferenceTypeOneofCase.MapKey:
          MapKey = other.MapKey.Clone();
          break;
        case ReferenceTypeOneofCase.Expression:
          Expression = other.Expression.Clone();
          break;
        case ReferenceTypeOneofCase.StructField:
          StructField = other.StructField.Clone();
          break;
        case ReferenceTypeOneofCase.ListElement:
          ListElement = other.ListElement.Clone();
          break;
        case ReferenceTypeOneofCase.ListRange:
          ListRange = other.ListRange.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReferenceSegment Clone() {
      return new ReferenceSegment(this);
    }

    /// <summary>Field number for the "map_key" field.</summary>
    public const int MapKeyFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.ReferenceSegment.Types.MapKey MapKey {
      get { return referenceTypeCase_ == ReferenceTypeOneofCase.MapKey ? (global::Substrait.Protobuf.ReferenceSegment.Types.MapKey) referenceType_ : null; }
      set {
        referenceType_ = value;
        referenceTypeCase_ = value == null ? ReferenceTypeOneofCase.None : ReferenceTypeOneofCase.MapKey;
      }
    }

    /// <summary>Field number for the "expression" field.</summary>
    public const int ExpressionFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.ReferenceSegment.Types.MapKeyExpression Expression {
      get { return referenceTypeCase_ == ReferenceTypeOneofCase.Expression ? (global::Substrait.Protobuf.ReferenceSegment.Types.MapKeyExpression) referenceType_ : null; }
      set {
        referenceType_ = value;
        referenceTypeCase_ = value == null ? ReferenceTypeOneofCase.None : ReferenceTypeOneofCase.Expression;
      }
    }

    /// <summary>Field number for the "struct_field" field.</summary>
    public const int StructFieldFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.ReferenceSegment.Types.StructField StructField {
      get { return referenceTypeCase_ == ReferenceTypeOneofCase.StructField ? (global::Substrait.Protobuf.ReferenceSegment.Types.StructField) referenceType_ : null; }
      set {
        referenceType_ = value;
        referenceTypeCase_ = value == null ? ReferenceTypeOneofCase.None : ReferenceTypeOneofCase.StructField;
      }
    }

    /// <summary>Field number for the "list_element" field.</summary>
    public const int ListElementFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.ReferenceSegment.Types.ListElement ListElement {
      get { return referenceTypeCase_ == ReferenceTypeOneofCase.ListElement ? (global::Substrait.Protobuf.ReferenceSegment.Types.ListElement) referenceType_ : null; }
      set {
        referenceType_ = value;
        referenceTypeCase_ = value == null ? ReferenceTypeOneofCase.None : ReferenceTypeOneofCase.ListElement;
      }
    }

    /// <summary>Field number for the "list_range" field.</summary>
    public const int ListRangeFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.ReferenceSegment.Types.ListRange ListRange {
      get { return referenceTypeCase_ == ReferenceTypeOneofCase.ListRange ? (global::Substrait.Protobuf.ReferenceSegment.Types.ListRange) referenceType_ : null; }
      set {
        referenceType_ = value;
        referenceTypeCase_ = value == null ? ReferenceTypeOneofCase.None : ReferenceTypeOneofCase.ListRange;
      }
    }

    private object referenceType_;
    /// <summary>Enum of possible cases for the "reference_type" oneof.</summary>
    public enum ReferenceTypeOneofCase {
      None = 0,
      MapKey = 1,
      Expression = 2,
      StructField = 3,
      ListElement = 4,
      ListRange = 5,
    }
    private ReferenceTypeOneofCase referenceTypeCase_ = ReferenceTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReferenceTypeOneofCase ReferenceTypeCase {
      get { return referenceTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReferenceType() {
      referenceTypeCase_ = ReferenceTypeOneofCase.None;
      referenceType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReferenceSegment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReferenceSegment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MapKey, other.MapKey)) return false;
      if (!object.Equals(Expression, other.Expression)) return false;
      if (!object.Equals(StructField, other.StructField)) return false;
      if (!object.Equals(ListElement, other.ListElement)) return false;
      if (!object.Equals(ListRange, other.ListRange)) return false;
      if (ReferenceTypeCase != other.ReferenceTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (referenceTypeCase_ == ReferenceTypeOneofCase.MapKey) hash ^= MapKey.GetHashCode();
      if (referenceTypeCase_ == ReferenceTypeOneofCase.Expression) hash ^= Expression.GetHashCode();
      if (referenceTypeCase_ == ReferenceTypeOneofCase.StructField) hash ^= StructField.GetHashCode();
      if (referenceTypeCase_ == ReferenceTypeOneofCase.ListElement) hash ^= ListElement.GetHashCode();
      if (referenceTypeCase_ == ReferenceTypeOneofCase.ListRange) hash ^= ListRange.GetHashCode();
      hash ^= (int) referenceTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (referenceTypeCase_ == ReferenceTypeOneofCase.MapKey) {
        output.WriteRawTag(10);
        output.WriteMessage(MapKey);
      }
      if (referenceTypeCase_ == ReferenceTypeOneofCase.Expression) {
        output.WriteRawTag(18);
        output.WriteMessage(Expression);
      }
      if (referenceTypeCase_ == ReferenceTypeOneofCase.StructField) {
        output.WriteRawTag(26);
        output.WriteMessage(StructField);
      }
      if (referenceTypeCase_ == ReferenceTypeOneofCase.ListElement) {
        output.WriteRawTag(34);
        output.WriteMessage(ListElement);
      }
      if (referenceTypeCase_ == ReferenceTypeOneofCase.ListRange) {
        output.WriteRawTag(42);
        output.WriteMessage(ListRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (referenceTypeCase_ == ReferenceTypeOneofCase.MapKey) {
        output.WriteRawTag(10);
        output.WriteMessage(MapKey);
      }
      if (referenceTypeCase_ == ReferenceTypeOneofCase.Expression) {
        output.WriteRawTag(18);
        output.WriteMessage(Expression);
      }
      if (referenceTypeCase_ == ReferenceTypeOneofCase.StructField) {
        output.WriteRawTag(26);
        output.WriteMessage(StructField);
      }
      if (referenceTypeCase_ == ReferenceTypeOneofCase.ListElement) {
        output.WriteRawTag(34);
        output.WriteMessage(ListElement);
      }
      if (referenceTypeCase_ == ReferenceTypeOneofCase.ListRange) {
        output.WriteRawTag(42);
        output.WriteMessage(ListRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (referenceTypeCase_ == ReferenceTypeOneofCase.MapKey) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MapKey);
      }
      if (referenceTypeCase_ == ReferenceTypeOneofCase.Expression) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Expression);
      }
      if (referenceTypeCase_ == ReferenceTypeOneofCase.StructField) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StructField);
      }
      if (referenceTypeCase_ == ReferenceTypeOneofCase.ListElement) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ListElement);
      }
      if (referenceTypeCase_ == ReferenceTypeOneofCase.ListRange) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ListRange);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReferenceSegment other) {
      if (other == null) {
        return;
      }
      switch (other.ReferenceTypeCase) {
        case ReferenceTypeOneofCase.MapKey:
          if (MapKey == null) {
            MapKey = new global::Substrait.Protobuf.ReferenceSegment.Types.MapKey();
          }
          MapKey.MergeFrom(other.MapKey);
          break;
        case ReferenceTypeOneofCase.Expression:
          if (Expression == null) {
            Expression = new global::Substrait.Protobuf.ReferenceSegment.Types.MapKeyExpression();
          }
          Expression.MergeFrom(other.Expression);
          break;
        case ReferenceTypeOneofCase.StructField:
          if (StructField == null) {
            StructField = new global::Substrait.Protobuf.ReferenceSegment.Types.StructField();
          }
          StructField.MergeFrom(other.StructField);
          break;
        case ReferenceTypeOneofCase.ListElement:
          if (ListElement == null) {
            ListElement = new global::Substrait.Protobuf.ReferenceSegment.Types.ListElement();
          }
          ListElement.MergeFrom(other.ListElement);
          break;
        case ReferenceTypeOneofCase.ListRange:
          if (ListRange == null) {
            ListRange = new global::Substrait.Protobuf.ReferenceSegment.Types.ListRange();
          }
          ListRange.MergeFrom(other.ListRange);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Substrait.Protobuf.ReferenceSegment.Types.MapKey subBuilder = new global::Substrait.Protobuf.ReferenceSegment.Types.MapKey();
            if (referenceTypeCase_ == ReferenceTypeOneofCase.MapKey) {
              subBuilder.MergeFrom(MapKey);
            }
            input.ReadMessage(subBuilder);
            MapKey = subBuilder;
            break;
          }
          case 18: {
            global::Substrait.Protobuf.ReferenceSegment.Types.MapKeyExpression subBuilder = new global::Substrait.Protobuf.ReferenceSegment.Types.MapKeyExpression();
            if (referenceTypeCase_ == ReferenceTypeOneofCase.Expression) {
              subBuilder.MergeFrom(Expression);
            }
            input.ReadMessage(subBuilder);
            Expression = subBuilder;
            break;
          }
          case 26: {
            global::Substrait.Protobuf.ReferenceSegment.Types.StructField subBuilder = new global::Substrait.Protobuf.ReferenceSegment.Types.StructField();
            if (referenceTypeCase_ == ReferenceTypeOneofCase.StructField) {
              subBuilder.MergeFrom(StructField);
            }
            input.ReadMessage(subBuilder);
            StructField = subBuilder;
            break;
          }
          case 34: {
            global::Substrait.Protobuf.ReferenceSegment.Types.ListElement subBuilder = new global::Substrait.Protobuf.ReferenceSegment.Types.ListElement();
            if (referenceTypeCase_ == ReferenceTypeOneofCase.ListElement) {
              subBuilder.MergeFrom(ListElement);
            }
            input.ReadMessage(subBuilder);
            ListElement = subBuilder;
            break;
          }
          case 42: {
            global::Substrait.Protobuf.ReferenceSegment.Types.ListRange subBuilder = new global::Substrait.Protobuf.ReferenceSegment.Types.ListRange();
            if (referenceTypeCase_ == ReferenceTypeOneofCase.ListRange) {
              subBuilder.MergeFrom(ListRange);
            }
            input.ReadMessage(subBuilder);
            ListRange = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Substrait.Protobuf.ReferenceSegment.Types.MapKey subBuilder = new global::Substrait.Protobuf.ReferenceSegment.Types.MapKey();
            if (referenceTypeCase_ == ReferenceTypeOneofCase.MapKey) {
              subBuilder.MergeFrom(MapKey);
            }
            input.ReadMessage(subBuilder);
            MapKey = subBuilder;
            break;
          }
          case 18: {
            global::Substrait.Protobuf.ReferenceSegment.Types.MapKeyExpression subBuilder = new global::Substrait.Protobuf.ReferenceSegment.Types.MapKeyExpression();
            if (referenceTypeCase_ == ReferenceTypeOneofCase.Expression) {
              subBuilder.MergeFrom(Expression);
            }
            input.ReadMessage(subBuilder);
            Expression = subBuilder;
            break;
          }
          case 26: {
            global::Substrait.Protobuf.ReferenceSegment.Types.StructField subBuilder = new global::Substrait.Protobuf.ReferenceSegment.Types.StructField();
            if (referenceTypeCase_ == ReferenceTypeOneofCase.StructField) {
              subBuilder.MergeFrom(StructField);
            }
            input.ReadMessage(subBuilder);
            StructField = subBuilder;
            break;
          }
          case 34: {
            global::Substrait.Protobuf.ReferenceSegment.Types.ListElement subBuilder = new global::Substrait.Protobuf.ReferenceSegment.Types.ListElement();
            if (referenceTypeCase_ == ReferenceTypeOneofCase.ListElement) {
              subBuilder.MergeFrom(ListElement);
            }
            input.ReadMessage(subBuilder);
            ListElement = subBuilder;
            break;
          }
          case 42: {
            global::Substrait.Protobuf.ReferenceSegment.Types.ListRange subBuilder = new global::Substrait.Protobuf.ReferenceSegment.Types.ListRange();
            if (referenceTypeCase_ == ReferenceTypeOneofCase.ListRange) {
              subBuilder.MergeFrom(ListRange);
            }
            input.ReadMessage(subBuilder);
            ListRange = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ReferenceSegment message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class MapKey : pb::IMessage<MapKey>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MapKey> _parser = new pb::MessageParser<MapKey>(() => new MapKey());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MapKey> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.ReferenceSegment.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MapKey() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MapKey(MapKey other) : this() {
          mapKey_ = other.mapKey_;
          child_ = other.child_ != null ? other.child_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MapKey Clone() {
          return new MapKey(this);
        }

        /// <summary>Field number for the "map_key" field.</summary>
        public const int MapKey_FieldNumber = 1;
        private string mapKey_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string MapKey_ {
          get { return mapKey_; }
          set {
            mapKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "child" field.</summary>
        public const int ChildFieldNumber = 2;
        private global::Substrait.Protobuf.ReferenceSegment child_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.ReferenceSegment Child {
          get { return child_; }
          set {
            child_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MapKey);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MapKey other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MapKey_ != other.MapKey_) return false;
          if (!object.Equals(Child, other.Child)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (MapKey_.Length != 0) hash ^= MapKey_.GetHashCode();
          if (child_ != null) hash ^= Child.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (MapKey_.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(MapKey_);
          }
          if (child_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Child);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (MapKey_.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(MapKey_);
          }
          if (child_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Child);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (MapKey_.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MapKey_);
          }
          if (child_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Child);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MapKey other) {
          if (other == null) {
            return;
          }
          if (other.MapKey_.Length != 0) {
            MapKey_ = other.MapKey_;
          }
          if (other.child_ != null) {
            if (child_ == null) {
              Child = new global::Substrait.Protobuf.ReferenceSegment();
            }
            Child.MergeFrom(other.Child);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                MapKey_ = input.ReadString();
                break;
              }
              case 18: {
                if (child_ == null) {
                  Child = new global::Substrait.Protobuf.ReferenceSegment();
                }
                input.ReadMessage(Child);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                MapKey_ = input.ReadString();
                break;
              }
              case 18: {
                if (child_ == null) {
                  Child = new global::Substrait.Protobuf.ReferenceSegment();
                }
                input.ReadMessage(Child);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class MapKeyExpression : pb::IMessage<MapKeyExpression>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MapKeyExpression> _parser = new pb::MessageParser<MapKeyExpression>(() => new MapKeyExpression());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MapKeyExpression> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.ReferenceSegment.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MapKeyExpression() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MapKeyExpression(MapKeyExpression other) : this() {
          mapKeyExpression_ = other.mapKeyExpression_;
          child_ = other.child_ != null ? other.child_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MapKeyExpression Clone() {
          return new MapKeyExpression(this);
        }

        /// <summary>Field number for the "map_key_expression" field.</summary>
        public const int MapKeyExpression_FieldNumber = 1;
        private string mapKeyExpression_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string MapKeyExpression_ {
          get { return mapKeyExpression_; }
          set {
            mapKeyExpression_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "child" field.</summary>
        public const int ChildFieldNumber = 2;
        private global::Substrait.Protobuf.ReferenceSegment child_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.ReferenceSegment Child {
          get { return child_; }
          set {
            child_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MapKeyExpression);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MapKeyExpression other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (MapKeyExpression_ != other.MapKeyExpression_) return false;
          if (!object.Equals(Child, other.Child)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (MapKeyExpression_.Length != 0) hash ^= MapKeyExpression_.GetHashCode();
          if (child_ != null) hash ^= Child.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (MapKeyExpression_.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(MapKeyExpression_);
          }
          if (child_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Child);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (MapKeyExpression_.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(MapKeyExpression_);
          }
          if (child_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Child);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (MapKeyExpression_.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(MapKeyExpression_);
          }
          if (child_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Child);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MapKeyExpression other) {
          if (other == null) {
            return;
          }
          if (other.MapKeyExpression_.Length != 0) {
            MapKeyExpression_ = other.MapKeyExpression_;
          }
          if (other.child_ != null) {
            if (child_ == null) {
              Child = new global::Substrait.Protobuf.ReferenceSegment();
            }
            Child.MergeFrom(other.Child);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                MapKeyExpression_ = input.ReadString();
                break;
              }
              case 18: {
                if (child_ == null) {
                  Child = new global::Substrait.Protobuf.ReferenceSegment();
                }
                input.ReadMessage(Child);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                MapKeyExpression_ = input.ReadString();
                break;
              }
              case 18: {
                if (child_ == null) {
                  Child = new global::Substrait.Protobuf.ReferenceSegment();
                }
                input.ReadMessage(Child);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class StructField : pb::IMessage<StructField>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<StructField> _parser = new pb::MessageParser<StructField>(() => new StructField());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<StructField> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.ReferenceSegment.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StructField() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StructField(StructField other) : this() {
          field_ = other.field_;
          child_ = other.child_ != null ? other.child_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StructField Clone() {
          return new StructField(this);
        }

        /// <summary>Field number for the "field" field.</summary>
        public const int FieldFieldNumber = 1;
        private int field_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Field {
          get { return field_; }
          set {
            field_ = value;
          }
        }

        /// <summary>Field number for the "child" field.</summary>
        public const int ChildFieldNumber = 2;
        private global::Substrait.Protobuf.ReferenceSegment child_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.ReferenceSegment Child {
          get { return child_; }
          set {
            child_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as StructField);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(StructField other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Field != other.Field) return false;
          if (!object.Equals(Child, other.Child)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Field != 0) hash ^= Field.GetHashCode();
          if (child_ != null) hash ^= Child.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Field != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Field);
          }
          if (child_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Child);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Field != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Field);
          }
          if (child_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Child);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Field != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Field);
          }
          if (child_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Child);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(StructField other) {
          if (other == null) {
            return;
          }
          if (other.Field != 0) {
            Field = other.Field;
          }
          if (other.child_ != null) {
            if (child_ == null) {
              Child = new global::Substrait.Protobuf.ReferenceSegment();
            }
            Child.MergeFrom(other.Child);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Field = input.ReadInt32();
                break;
              }
              case 18: {
                if (child_ == null) {
                  Child = new global::Substrait.Protobuf.ReferenceSegment();
                }
                input.ReadMessage(Child);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Field = input.ReadInt32();
                break;
              }
              case 18: {
                if (child_ == null) {
                  Child = new global::Substrait.Protobuf.ReferenceSegment();
                }
                input.ReadMessage(Child);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class ListElement : pb::IMessage<ListElement>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ListElement> _parser = new pb::MessageParser<ListElement>(() => new ListElement());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ListElement> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.ReferenceSegment.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ListElement() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ListElement(ListElement other) : this() {
          offset_ = other.offset_;
          child_ = other.child_ != null ? other.child_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ListElement Clone() {
          return new ListElement(this);
        }

        /// <summary>Field number for the "offset" field.</summary>
        public const int OffsetFieldNumber = 1;
        private int offset_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Offset {
          get { return offset_; }
          set {
            offset_ = value;
          }
        }

        /// <summary>Field number for the "child" field.</summary>
        public const int ChildFieldNumber = 2;
        private global::Substrait.Protobuf.ReferenceSegment child_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.ReferenceSegment Child {
          get { return child_; }
          set {
            child_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ListElement);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ListElement other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Offset != other.Offset) return false;
          if (!object.Equals(Child, other.Child)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Offset != 0) hash ^= Offset.GetHashCode();
          if (child_ != null) hash ^= Child.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Offset != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Offset);
          }
          if (child_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Child);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Offset != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Offset);
          }
          if (child_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Child);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Offset != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
          }
          if (child_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Child);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ListElement other) {
          if (other == null) {
            return;
          }
          if (other.Offset != 0) {
            Offset = other.Offset;
          }
          if (other.child_ != null) {
            if (child_ == null) {
              Child = new global::Substrait.Protobuf.ReferenceSegment();
            }
            Child.MergeFrom(other.Child);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Offset = input.ReadInt32();
                break;
              }
              case 18: {
                if (child_ == null) {
                  Child = new global::Substrait.Protobuf.ReferenceSegment();
                }
                input.ReadMessage(Child);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Offset = input.ReadInt32();
                break;
              }
              case 18: {
                if (child_ == null) {
                  Child = new global::Substrait.Protobuf.ReferenceSegment();
                }
                input.ReadMessage(Child);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class ListRange : pb::IMessage<ListRange>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ListRange> _parser = new pb::MessageParser<ListRange>(() => new ListRange());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ListRange> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.ReferenceSegment.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ListRange() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ListRange(ListRange other) : this() {
          start_ = other.start_;
          end_ = other.end_;
          child_ = other.child_ != null ? other.child_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ListRange Clone() {
          return new ListRange(this);
        }

        /// <summary>Field number for the "start" field.</summary>
        public const int StartFieldNumber = 1;
        private int start_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Start {
          get { return start_; }
          set {
            start_ = value;
          }
        }

        /// <summary>Field number for the "end" field.</summary>
        public const int EndFieldNumber = 2;
        private int end_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int End {
          get { return end_; }
          set {
            end_ = value;
          }
        }

        /// <summary>Field number for the "child" field.</summary>
        public const int ChildFieldNumber = 3;
        private global::Substrait.Protobuf.ReferenceSegment child_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.ReferenceSegment Child {
          get { return child_; }
          set {
            child_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ListRange);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ListRange other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Start != other.Start) return false;
          if (End != other.End) return false;
          if (!object.Equals(Child, other.Child)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Start != 0) hash ^= Start.GetHashCode();
          if (End != 0) hash ^= End.GetHashCode();
          if (child_ != null) hash ^= Child.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Start != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Start);
          }
          if (End != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(End);
          }
          if (child_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Child);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Start != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Start);
          }
          if (End != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(End);
          }
          if (child_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Child);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Start != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Start);
          }
          if (End != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(End);
          }
          if (child_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Child);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ListRange other) {
          if (other == null) {
            return;
          }
          if (other.Start != 0) {
            Start = other.Start;
          }
          if (other.End != 0) {
            End = other.End;
          }
          if (other.child_ != null) {
            if (child_ == null) {
              Child = new global::Substrait.Protobuf.ReferenceSegment();
            }
            Child.MergeFrom(other.Child);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Start = input.ReadInt32();
                break;
              }
              case 16: {
                End = input.ReadInt32();
                break;
              }
              case 26: {
                if (child_ == null) {
                  Child = new global::Substrait.Protobuf.ReferenceSegment();
                }
                input.ReadMessage(Child);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Start = input.ReadInt32();
                break;
              }
              case 16: {
                End = input.ReadInt32();
                break;
              }
              case 26: {
                if (child_ == null) {
                  Child = new global::Substrait.Protobuf.ReferenceSegment();
                }
                input.ReadMessage(Child);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class MaskExpression : pb::IMessage<MaskExpression>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MaskExpression> _parser = new pb::MessageParser<MaskExpression>(() => new MaskExpression());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MaskExpression> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Substrait.Protobuf.SelectionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaskExpression() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaskExpression(MaskExpression other) : this() {
      select_ = other.select_ != null ? other.select_.Clone() : null;
      maintainSingularStruct_ = other.maintainSingularStruct_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MaskExpression Clone() {
      return new MaskExpression(this);
    }

    /// <summary>Field number for the "select" field.</summary>
    public const int SelectFieldNumber = 1;
    private global::Substrait.Protobuf.MaskExpression.Types.StructSelect select_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.MaskExpression.Types.StructSelect Select {
      get { return select_; }
      set {
        select_ = value;
      }
    }

    /// <summary>Field number for the "maintain_singular_struct" field.</summary>
    public const int MaintainSingularStructFieldNumber = 2;
    private bool maintainSingularStruct_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool MaintainSingularStruct {
      get { return maintainSingularStruct_; }
      set {
        maintainSingularStruct_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MaskExpression);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MaskExpression other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Select, other.Select)) return false;
      if (MaintainSingularStruct != other.MaintainSingularStruct) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (select_ != null) hash ^= Select.GetHashCode();
      if (MaintainSingularStruct != false) hash ^= MaintainSingularStruct.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (select_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Select);
      }
      if (MaintainSingularStruct != false) {
        output.WriteRawTag(16);
        output.WriteBool(MaintainSingularStruct);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (select_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Select);
      }
      if (MaintainSingularStruct != false) {
        output.WriteRawTag(16);
        output.WriteBool(MaintainSingularStruct);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (select_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Select);
      }
      if (MaintainSingularStruct != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MaskExpression other) {
      if (other == null) {
        return;
      }
      if (other.select_ != null) {
        if (select_ == null) {
          Select = new global::Substrait.Protobuf.MaskExpression.Types.StructSelect();
        }
        Select.MergeFrom(other.Select);
      }
      if (other.MaintainSingularStruct != false) {
        MaintainSingularStruct = other.MaintainSingularStruct;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (select_ == null) {
              Select = new global::Substrait.Protobuf.MaskExpression.Types.StructSelect();
            }
            input.ReadMessage(Select);
            break;
          }
          case 16: {
            MaintainSingularStruct = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (select_ == null) {
              Select = new global::Substrait.Protobuf.MaskExpression.Types.StructSelect();
            }
            input.ReadMessage(Select);
            break;
          }
          case 16: {
            MaintainSingularStruct = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the MaskExpression message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Select : pb::IMessage<Select>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Select> _parser = new pb::MessageParser<Select>(() => new Select());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Select> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.MaskExpression.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Select() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Select(Select other) : this() {
          switch (other.TypeCase) {
            case TypeOneofCase.Struct:
              Struct = other.Struct.Clone();
              break;
            case TypeOneofCase.List:
              List = other.List.Clone();
              break;
            case TypeOneofCase.Map:
              Map = other.Map.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Select Clone() {
          return new Select(this);
        }

        /// <summary>Field number for the "struct" field.</summary>
        public const int StructFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.MaskExpression.Types.StructSelect Struct {
          get { return typeCase_ == TypeOneofCase.Struct ? (global::Substrait.Protobuf.MaskExpression.Types.StructSelect) type_ : null; }
          set {
            type_ = value;
            typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Struct;
          }
        }

        /// <summary>Field number for the "list" field.</summary>
        public const int ListFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.MaskExpression.Types.ListSelect List {
          get { return typeCase_ == TypeOneofCase.List ? (global::Substrait.Protobuf.MaskExpression.Types.ListSelect) type_ : null; }
          set {
            type_ = value;
            typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.List;
          }
        }

        /// <summary>Field number for the "map" field.</summary>
        public const int MapFieldNumber = 3;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.MaskExpression.Types.MapSelect Map {
          get { return typeCase_ == TypeOneofCase.Map ? (global::Substrait.Protobuf.MaskExpression.Types.MapSelect) type_ : null; }
          set {
            type_ = value;
            typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Map;
          }
        }

        private object type_;
        /// <summary>Enum of possible cases for the "type" oneof.</summary>
        public enum TypeOneofCase {
          None = 0,
          Struct = 1,
          List = 2,
          Map = 3,
        }
        private TypeOneofCase typeCase_ = TypeOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TypeOneofCase TypeCase {
          get { return typeCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearType() {
          typeCase_ = TypeOneofCase.None;
          type_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Select);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Select other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Struct, other.Struct)) return false;
          if (!object.Equals(List, other.List)) return false;
          if (!object.Equals(Map, other.Map)) return false;
          if (TypeCase != other.TypeCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (typeCase_ == TypeOneofCase.Struct) hash ^= Struct.GetHashCode();
          if (typeCase_ == TypeOneofCase.List) hash ^= List.GetHashCode();
          if (typeCase_ == TypeOneofCase.Map) hash ^= Map.GetHashCode();
          hash ^= (int) typeCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (typeCase_ == TypeOneofCase.Struct) {
            output.WriteRawTag(10);
            output.WriteMessage(Struct);
          }
          if (typeCase_ == TypeOneofCase.List) {
            output.WriteRawTag(18);
            output.WriteMessage(List);
          }
          if (typeCase_ == TypeOneofCase.Map) {
            output.WriteRawTag(26);
            output.WriteMessage(Map);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (typeCase_ == TypeOneofCase.Struct) {
            output.WriteRawTag(10);
            output.WriteMessage(Struct);
          }
          if (typeCase_ == TypeOneofCase.List) {
            output.WriteRawTag(18);
            output.WriteMessage(List);
          }
          if (typeCase_ == TypeOneofCase.Map) {
            output.WriteRawTag(26);
            output.WriteMessage(Map);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (typeCase_ == TypeOneofCase.Struct) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Struct);
          }
          if (typeCase_ == TypeOneofCase.List) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(List);
          }
          if (typeCase_ == TypeOneofCase.Map) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Map);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Select other) {
          if (other == null) {
            return;
          }
          switch (other.TypeCase) {
            case TypeOneofCase.Struct:
              if (Struct == null) {
                Struct = new global::Substrait.Protobuf.MaskExpression.Types.StructSelect();
              }
              Struct.MergeFrom(other.Struct);
              break;
            case TypeOneofCase.List:
              if (List == null) {
                List = new global::Substrait.Protobuf.MaskExpression.Types.ListSelect();
              }
              List.MergeFrom(other.List);
              break;
            case TypeOneofCase.Map:
              if (Map == null) {
                Map = new global::Substrait.Protobuf.MaskExpression.Types.MapSelect();
              }
              Map.MergeFrom(other.Map);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Substrait.Protobuf.MaskExpression.Types.StructSelect subBuilder = new global::Substrait.Protobuf.MaskExpression.Types.StructSelect();
                if (typeCase_ == TypeOneofCase.Struct) {
                  subBuilder.MergeFrom(Struct);
                }
                input.ReadMessage(subBuilder);
                Struct = subBuilder;
                break;
              }
              case 18: {
                global::Substrait.Protobuf.MaskExpression.Types.ListSelect subBuilder = new global::Substrait.Protobuf.MaskExpression.Types.ListSelect();
                if (typeCase_ == TypeOneofCase.List) {
                  subBuilder.MergeFrom(List);
                }
                input.ReadMessage(subBuilder);
                List = subBuilder;
                break;
              }
              case 26: {
                global::Substrait.Protobuf.MaskExpression.Types.MapSelect subBuilder = new global::Substrait.Protobuf.MaskExpression.Types.MapSelect();
                if (typeCase_ == TypeOneofCase.Map) {
                  subBuilder.MergeFrom(Map);
                }
                input.ReadMessage(subBuilder);
                Map = subBuilder;
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                global::Substrait.Protobuf.MaskExpression.Types.StructSelect subBuilder = new global::Substrait.Protobuf.MaskExpression.Types.StructSelect();
                if (typeCase_ == TypeOneofCase.Struct) {
                  subBuilder.MergeFrom(Struct);
                }
                input.ReadMessage(subBuilder);
                Struct = subBuilder;
                break;
              }
              case 18: {
                global::Substrait.Protobuf.MaskExpression.Types.ListSelect subBuilder = new global::Substrait.Protobuf.MaskExpression.Types.ListSelect();
                if (typeCase_ == TypeOneofCase.List) {
                  subBuilder.MergeFrom(List);
                }
                input.ReadMessage(subBuilder);
                List = subBuilder;
                break;
              }
              case 26: {
                global::Substrait.Protobuf.MaskExpression.Types.MapSelect subBuilder = new global::Substrait.Protobuf.MaskExpression.Types.MapSelect();
                if (typeCase_ == TypeOneofCase.Map) {
                  subBuilder.MergeFrom(Map);
                }
                input.ReadMessage(subBuilder);
                Map = subBuilder;
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class StructSelect : pb::IMessage<StructSelect>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<StructSelect> _parser = new pb::MessageParser<StructSelect>(() => new StructSelect());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<StructSelect> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.MaskExpression.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StructSelect() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StructSelect(StructSelect other) : this() {
          structItems_ = other.structItems_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StructSelect Clone() {
          return new StructSelect(this);
        }

        /// <summary>Field number for the "struct_items" field.</summary>
        public const int StructItemsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Substrait.Protobuf.MaskExpression.Types.StructItem> _repeated_structItems_codec
            = pb::FieldCodec.ForMessage(10, global::Substrait.Protobuf.MaskExpression.Types.StructItem.Parser);
        private readonly pbc::RepeatedField<global::Substrait.Protobuf.MaskExpression.Types.StructItem> structItems_ = new pbc::RepeatedField<global::Substrait.Protobuf.MaskExpression.Types.StructItem>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Substrait.Protobuf.MaskExpression.Types.StructItem> StructItems {
          get { return structItems_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as StructSelect);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(StructSelect other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!structItems_.Equals(other.structItems_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= structItems_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          structItems_.WriteTo(output, _repeated_structItems_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          structItems_.WriteTo(ref output, _repeated_structItems_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += structItems_.CalculateSize(_repeated_structItems_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(StructSelect other) {
          if (other == null) {
            return;
          }
          structItems_.Add(other.structItems_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                structItems_.AddEntriesFrom(input, _repeated_structItems_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                structItems_.AddEntriesFrom(ref input, _repeated_structItems_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class StructItem : pb::IMessage<StructItem>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<StructItem> _parser = new pb::MessageParser<StructItem>(() => new StructItem());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<StructItem> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.MaskExpression.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StructItem() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StructItem(StructItem other) : this() {
          field_ = other.field_;
          child_ = other.child_ != null ? other.child_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StructItem Clone() {
          return new StructItem(this);
        }

        /// <summary>Field number for the "field" field.</summary>
        public const int FieldFieldNumber = 1;
        private int field_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Field {
          get { return field_; }
          set {
            field_ = value;
          }
        }

        /// <summary>Field number for the "child" field.</summary>
        public const int ChildFieldNumber = 2;
        private global::Substrait.Protobuf.MaskExpression.Types.Select child_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.MaskExpression.Types.Select Child {
          get { return child_; }
          set {
            child_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as StructItem);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(StructItem other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Field != other.Field) return false;
          if (!object.Equals(Child, other.Child)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Field != 0) hash ^= Field.GetHashCode();
          if (child_ != null) hash ^= Child.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Field != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Field);
          }
          if (child_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Child);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Field != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Field);
          }
          if (child_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Child);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Field != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Field);
          }
          if (child_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Child);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(StructItem other) {
          if (other == null) {
            return;
          }
          if (other.Field != 0) {
            Field = other.Field;
          }
          if (other.child_ != null) {
            if (child_ == null) {
              Child = new global::Substrait.Protobuf.MaskExpression.Types.Select();
            }
            Child.MergeFrom(other.Child);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Field = input.ReadInt32();
                break;
              }
              case 18: {
                if (child_ == null) {
                  Child = new global::Substrait.Protobuf.MaskExpression.Types.Select();
                }
                input.ReadMessage(Child);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Field = input.ReadInt32();
                break;
              }
              case 18: {
                if (child_ == null) {
                  Child = new global::Substrait.Protobuf.MaskExpression.Types.Select();
                }
                input.ReadMessage(Child);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class ListSelect : pb::IMessage<ListSelect>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ListSelect> _parser = new pb::MessageParser<ListSelect>(() => new ListSelect());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ListSelect> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.MaskExpression.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ListSelect() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ListSelect(ListSelect other) : this() {
          selection_ = other.selection_.Clone();
          child_ = other.child_ != null ? other.child_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ListSelect Clone() {
          return new ListSelect(this);
        }

        /// <summary>Field number for the "selection" field.</summary>
        public const int SelectionFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem> _repeated_selection_codec
            = pb::FieldCodec.ForMessage(10, global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem.Parser);
        private readonly pbc::RepeatedField<global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem> selection_ = new pbc::RepeatedField<global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem> Selection {
          get { return selection_; }
        }

        /// <summary>Field number for the "child" field.</summary>
        public const int ChildFieldNumber = 2;
        private global::Substrait.Protobuf.MaskExpression.Types.Select child_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.MaskExpression.Types.Select Child {
          get { return child_; }
          set {
            child_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ListSelect);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ListSelect other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!selection_.Equals(other.selection_)) return false;
          if (!object.Equals(Child, other.Child)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= selection_.GetHashCode();
          if (child_ != null) hash ^= Child.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          selection_.WriteTo(output, _repeated_selection_codec);
          if (child_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Child);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          selection_.WriteTo(ref output, _repeated_selection_codec);
          if (child_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Child);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += selection_.CalculateSize(_repeated_selection_codec);
          if (child_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Child);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ListSelect other) {
          if (other == null) {
            return;
          }
          selection_.Add(other.selection_);
          if (other.child_ != null) {
            if (child_ == null) {
              Child = new global::Substrait.Protobuf.MaskExpression.Types.Select();
            }
            Child.MergeFrom(other.Child);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                selection_.AddEntriesFrom(input, _repeated_selection_codec);
                break;
              }
              case 18: {
                if (child_ == null) {
                  Child = new global::Substrait.Protobuf.MaskExpression.Types.Select();
                }
                input.ReadMessage(Child);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                selection_.AddEntriesFrom(ref input, _repeated_selection_codec);
                break;
              }
              case 18: {
                if (child_ == null) {
                  Child = new global::Substrait.Protobuf.MaskExpression.Types.Select();
                }
                input.ReadMessage(Child);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the ListSelect message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class ListSelectItem : pb::IMessage<ListSelectItem>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<ListSelectItem> _parser = new pb::MessageParser<ListSelectItem>(() => new ListSelectItem());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ListSelectItem> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ListSelectItem() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ListSelectItem(ListSelectItem other) : this() {
              switch (other.TypeCase) {
                case TypeOneofCase.Item:
                  Item = other.Item.Clone();
                  break;
                case TypeOneofCase.Slice:
                  Slice = other.Slice.Clone();
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ListSelectItem Clone() {
              return new ListSelectItem(this);
            }

            /// <summary>Field number for the "item" field.</summary>
            public const int ItemFieldNumber = 1;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem.Types.ListElement Item {
              get { return typeCase_ == TypeOneofCase.Item ? (global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem.Types.ListElement) type_ : null; }
              set {
                type_ = value;
                typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Item;
              }
            }

            /// <summary>Field number for the "slice" field.</summary>
            public const int SliceFieldNumber = 2;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem.Types.ListSlice Slice {
              get { return typeCase_ == TypeOneofCase.Slice ? (global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem.Types.ListSlice) type_ : null; }
              set {
                type_ = value;
                typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.Slice;
              }
            }

            private object type_;
            /// <summary>Enum of possible cases for the "type" oneof.</summary>
            public enum TypeOneofCase {
              None = 0,
              Item = 1,
              Slice = 2,
            }
            private TypeOneofCase typeCase_ = TypeOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public TypeOneofCase TypeCase {
              get { return typeCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearType() {
              typeCase_ = TypeOneofCase.None;
              type_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ListSelectItem);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ListSelectItem other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!object.Equals(Item, other.Item)) return false;
              if (!object.Equals(Slice, other.Slice)) return false;
              if (TypeCase != other.TypeCase) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (typeCase_ == TypeOneofCase.Item) hash ^= Item.GetHashCode();
              if (typeCase_ == TypeOneofCase.Slice) hash ^= Slice.GetHashCode();
              hash ^= (int) typeCase_;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (typeCase_ == TypeOneofCase.Item) {
                output.WriteRawTag(10);
                output.WriteMessage(Item);
              }
              if (typeCase_ == TypeOneofCase.Slice) {
                output.WriteRawTag(18);
                output.WriteMessage(Slice);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (typeCase_ == TypeOneofCase.Item) {
                output.WriteRawTag(10);
                output.WriteMessage(Item);
              }
              if (typeCase_ == TypeOneofCase.Slice) {
                output.WriteRawTag(18);
                output.WriteMessage(Slice);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (typeCase_ == TypeOneofCase.Item) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
              }
              if (typeCase_ == TypeOneofCase.Slice) {
                size += 1 + pb::CodedOutputStream.ComputeMessageSize(Slice);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ListSelectItem other) {
              if (other == null) {
                return;
              }
              switch (other.TypeCase) {
                case TypeOneofCase.Item:
                  if (Item == null) {
                    Item = new global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem.Types.ListElement();
                  }
                  Item.MergeFrom(other.Item);
                  break;
                case TypeOneofCase.Slice:
                  if (Slice == null) {
                    Slice = new global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem.Types.ListSlice();
                  }
                  Slice.MergeFrom(other.Slice);
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem.Types.ListElement subBuilder = new global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem.Types.ListElement();
                    if (typeCase_ == TypeOneofCase.Item) {
                      subBuilder.MergeFrom(Item);
                    }
                    input.ReadMessage(subBuilder);
                    Item = subBuilder;
                    break;
                  }
                  case 18: {
                    global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem.Types.ListSlice subBuilder = new global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem.Types.ListSlice();
                    if (typeCase_ == TypeOneofCase.Slice) {
                      subBuilder.MergeFrom(Slice);
                    }
                    input.ReadMessage(subBuilder);
                    Slice = subBuilder;
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem.Types.ListElement subBuilder = new global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem.Types.ListElement();
                    if (typeCase_ == TypeOneofCase.Item) {
                      subBuilder.MergeFrom(Item);
                    }
                    input.ReadMessage(subBuilder);
                    Item = subBuilder;
                    break;
                  }
                  case 18: {
                    global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem.Types.ListSlice subBuilder = new global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem.Types.ListSlice();
                    if (typeCase_ == TypeOneofCase.Slice) {
                      subBuilder.MergeFrom(Slice);
                    }
                    input.ReadMessage(subBuilder);
                    Slice = subBuilder;
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the ListSelectItem message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public sealed partial class ListElement : pb::IMessage<ListElement>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<ListElement> _parser = new pb::MessageParser<ListElement>(() => new ListElement());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<ListElement> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ListElement() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ListElement(ListElement other) : this() {
                  field_ = other.field_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ListElement Clone() {
                  return new ListElement(this);
                }

                /// <summary>Field number for the "field" field.</summary>
                public const int FieldFieldNumber = 1;
                private int field_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int Field {
                  get { return field_; }
                  set {
                    field_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as ListElement);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(ListElement other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (Field != other.Field) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (Field != 0) hash ^= Field.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (Field != 0) {
                    output.WriteRawTag(8);
                    output.WriteInt32(Field);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (Field != 0) {
                    output.WriteRawTag(8);
                    output.WriteInt32(Field);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (Field != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeInt32Size(Field);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(ListElement other) {
                  if (other == null) {
                    return;
                  }
                  if (other.Field != 0) {
                    Field = other.Field;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        Field = input.ReadInt32();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 8: {
                        Field = input.ReadInt32();
                        break;
                      }
                    }
                  }
                }
                #endif

              }

              public sealed partial class ListSlice : pb::IMessage<ListSlice>
              #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  , pb::IBufferMessage
              #endif
              {
                private static readonly pb::MessageParser<ListSlice> _parser = new pb::MessageParser<ListSlice>(() => new ListSlice());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<ListSlice> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Substrait.Protobuf.MaskExpression.Types.ListSelect.Types.ListSelectItem.Descriptor.NestedTypes[1]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ListSlice() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ListSlice(ListSlice other) : this() {
                  start_ = other.start_;
                  end_ = other.end_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public ListSlice Clone() {
                  return new ListSlice(this);
                }

                /// <summary>Field number for the "start" field.</summary>
                public const int StartFieldNumber = 1;
                private int start_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int Start {
                  get { return start_; }
                  set {
                    start_ = value;
                  }
                }

                /// <summary>Field number for the "end" field.</summary>
                public const int EndFieldNumber = 2;
                private int end_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int End {
                  get { return end_; }
                  set {
                    end_ = value;
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as ListSlice);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(ListSlice other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (Start != other.Start) return false;
                  if (End != other.End) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (Start != 0) hash ^= Start.GetHashCode();
                  if (End != 0) hash ^= End.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  output.WriteRawMessage(this);
                #else
                  if (Start != 0) {
                    output.WriteRawTag(8);
                    output.WriteInt32(Start);
                  }
                  if (End != 0) {
                    output.WriteRawTag(16);
                    output.WriteInt32(End);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
                  if (Start != 0) {
                    output.WriteRawTag(8);
                    output.WriteInt32(Start);
                  }
                  if (End != 0) {
                    output.WriteRawTag(16);
                    output.WriteInt32(End);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(ref output);
                  }
                }
                #endif

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (Start != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeInt32Size(Start);
                  }
                  if (End != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeInt32Size(End);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(ListSlice other) {
                  if (other == null) {
                    return;
                  }
                  if (other.Start != 0) {
                    Start = other.Start;
                  }
                  if (other.End != 0) {
                    End = other.End;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                  input.ReadRawMessage(this);
                #else
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        Start = input.ReadInt32();
                        break;
                      }
                      case 16: {
                        End = input.ReadInt32();
                        break;
                      }
                    }
                  }
                #endif
                }

                #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                        break;
                      case 8: {
                        Start = input.ReadInt32();
                        break;
                      }
                      case 16: {
                        End = input.ReadInt32();
                        break;
                      }
                    }
                  }
                }
                #endif

              }

            }
            #endregion

          }

        }
        #endregion

      }

      public sealed partial class MapSelect : pb::IMessage<MapSelect>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<MapSelect> _parser = new pb::MessageParser<MapSelect>(() => new MapSelect());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<MapSelect> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.MaskExpression.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MapSelect() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MapSelect(MapSelect other) : this() {
          child_ = other.child_ != null ? other.child_.Clone() : null;
          switch (other.SelectCase) {
            case SelectOneofCase.Key:
              Key = other.Key.Clone();
              break;
            case SelectOneofCase.Expression:
              Expression = other.Expression.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public MapSelect Clone() {
          return new MapSelect(this);
        }

        /// <summary>Field number for the "key" field.</summary>
        public const int KeyFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.MaskExpression.Types.MapSelect.Types.MapKey Key {
          get { return selectCase_ == SelectOneofCase.Key ? (global::Substrait.Protobuf.MaskExpression.Types.MapSelect.Types.MapKey) select_ : null; }
          set {
            select_ = value;
            selectCase_ = value == null ? SelectOneofCase.None : SelectOneofCase.Key;
          }
        }

        /// <summary>Field number for the "expression" field.</summary>
        public const int ExpressionFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.MaskExpression.Types.MapSelect.Types.MapKeyExpression Expression {
          get { return selectCase_ == SelectOneofCase.Expression ? (global::Substrait.Protobuf.MaskExpression.Types.MapSelect.Types.MapKeyExpression) select_ : null; }
          set {
            select_ = value;
            selectCase_ = value == null ? SelectOneofCase.None : SelectOneofCase.Expression;
          }
        }

        /// <summary>Field number for the "child" field.</summary>
        public const int ChildFieldNumber = 3;
        private global::Substrait.Protobuf.MaskExpression.Types.Select child_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.MaskExpression.Types.Select Child {
          get { return child_; }
          set {
            child_ = value;
          }
        }

        private object select_;
        /// <summary>Enum of possible cases for the "select" oneof.</summary>
        public enum SelectOneofCase {
          None = 0,
          Key = 1,
          Expression = 2,
        }
        private SelectOneofCase selectCase_ = SelectOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SelectOneofCase SelectCase {
          get { return selectCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearSelect() {
          selectCase_ = SelectOneofCase.None;
          select_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as MapSelect);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(MapSelect other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Key, other.Key)) return false;
          if (!object.Equals(Expression, other.Expression)) return false;
          if (!object.Equals(Child, other.Child)) return false;
          if (SelectCase != other.SelectCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (selectCase_ == SelectOneofCase.Key) hash ^= Key.GetHashCode();
          if (selectCase_ == SelectOneofCase.Expression) hash ^= Expression.GetHashCode();
          if (child_ != null) hash ^= Child.GetHashCode();
          hash ^= (int) selectCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (selectCase_ == SelectOneofCase.Key) {
            output.WriteRawTag(10);
            output.WriteMessage(Key);
          }
          if (selectCase_ == SelectOneofCase.Expression) {
            output.WriteRawTag(18);
            output.WriteMessage(Expression);
          }
          if (child_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Child);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (selectCase_ == SelectOneofCase.Key) {
            output.WriteRawTag(10);
            output.WriteMessage(Key);
          }
          if (selectCase_ == SelectOneofCase.Expression) {
            output.WriteRawTag(18);
            output.WriteMessage(Expression);
          }
          if (child_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Child);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (selectCase_ == SelectOneofCase.Key) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
          }
          if (selectCase_ == SelectOneofCase.Expression) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Expression);
          }
          if (child_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Child);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(MapSelect other) {
          if (other == null) {
            return;
          }
          if (other.child_ != null) {
            if (child_ == null) {
              Child = new global::Substrait.Protobuf.MaskExpression.Types.Select();
            }
            Child.MergeFrom(other.Child);
          }
          switch (other.SelectCase) {
            case SelectOneofCase.Key:
              if (Key == null) {
                Key = new global::Substrait.Protobuf.MaskExpression.Types.MapSelect.Types.MapKey();
              }
              Key.MergeFrom(other.Key);
              break;
            case SelectOneofCase.Expression:
              if (Expression == null) {
                Expression = new global::Substrait.Protobuf.MaskExpression.Types.MapSelect.Types.MapKeyExpression();
              }
              Expression.MergeFrom(other.Expression);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Substrait.Protobuf.MaskExpression.Types.MapSelect.Types.MapKey subBuilder = new global::Substrait.Protobuf.MaskExpression.Types.MapSelect.Types.MapKey();
                if (selectCase_ == SelectOneofCase.Key) {
                  subBuilder.MergeFrom(Key);
                }
                input.ReadMessage(subBuilder);
                Key = subBuilder;
                break;
              }
              case 18: {
                global::Substrait.Protobuf.MaskExpression.Types.MapSelect.Types.MapKeyExpression subBuilder = new global::Substrait.Protobuf.MaskExpression.Types.MapSelect.Types.MapKeyExpression();
                if (selectCase_ == SelectOneofCase.Expression) {
                  subBuilder.MergeFrom(Expression);
                }
                input.ReadMessage(subBuilder);
                Expression = subBuilder;
                break;
              }
              case 26: {
                if (child_ == null) {
                  Child = new global::Substrait.Protobuf.MaskExpression.Types.Select();
                }
                input.ReadMessage(Child);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                global::Substrait.Protobuf.MaskExpression.Types.MapSelect.Types.MapKey subBuilder = new global::Substrait.Protobuf.MaskExpression.Types.MapSelect.Types.MapKey();
                if (selectCase_ == SelectOneofCase.Key) {
                  subBuilder.MergeFrom(Key);
                }
                input.ReadMessage(subBuilder);
                Key = subBuilder;
                break;
              }
              case 18: {
                global::Substrait.Protobuf.MaskExpression.Types.MapSelect.Types.MapKeyExpression subBuilder = new global::Substrait.Protobuf.MaskExpression.Types.MapSelect.Types.MapKeyExpression();
                if (selectCase_ == SelectOneofCase.Expression) {
                  subBuilder.MergeFrom(Expression);
                }
                input.ReadMessage(subBuilder);
                Expression = subBuilder;
                break;
              }
              case 26: {
                if (child_ == null) {
                  Child = new global::Substrait.Protobuf.MaskExpression.Types.Select();
                }
                input.ReadMessage(Child);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the MapSelect message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class MapKey : pb::IMessage<MapKey>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<MapKey> _parser = new pb::MessageParser<MapKey>(() => new MapKey());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<MapKey> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Substrait.Protobuf.MaskExpression.Types.MapSelect.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public MapKey() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public MapKey(MapKey other) : this() {
              mapKey_ = other.mapKey_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public MapKey Clone() {
              return new MapKey(this);
            }

            /// <summary>Field number for the "map_key" field.</summary>
            public const int MapKey_FieldNumber = 1;
            private string mapKey_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string MapKey_ {
              get { return mapKey_; }
              set {
                mapKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as MapKey);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(MapKey other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (MapKey_ != other.MapKey_) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (MapKey_.Length != 0) hash ^= MapKey_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (MapKey_.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(MapKey_);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (MapKey_.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(MapKey_);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (MapKey_.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(MapKey_);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(MapKey other) {
              if (other == null) {
                return;
              }
              if (other.MapKey_.Length != 0) {
                MapKey_ = other.MapKey_;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    MapKey_ = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    MapKey_ = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class MapKeyExpression : pb::IMessage<MapKeyExpression>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<MapKeyExpression> _parser = new pb::MessageParser<MapKeyExpression>(() => new MapKeyExpression());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<MapKeyExpression> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Substrait.Protobuf.MaskExpression.Types.MapSelect.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public MapKeyExpression() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public MapKeyExpression(MapKeyExpression other) : this() {
              mapKeyExpression_ = other.mapKeyExpression_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public MapKeyExpression Clone() {
              return new MapKeyExpression(this);
            }

            /// <summary>Field number for the "map_key_expression" field.</summary>
            public const int MapKeyExpression_FieldNumber = 1;
            private string mapKeyExpression_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string MapKeyExpression_ {
              get { return mapKeyExpression_; }
              set {
                mapKeyExpression_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as MapKeyExpression);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(MapKeyExpression other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (MapKeyExpression_ != other.MapKeyExpression_) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (MapKeyExpression_.Length != 0) hash ^= MapKeyExpression_.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (MapKeyExpression_.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(MapKeyExpression_);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (MapKeyExpression_.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(MapKeyExpression_);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (MapKeyExpression_.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(MapKeyExpression_);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(MapKeyExpression other) {
              if (other == null) {
                return;
              }
              if (other.MapKeyExpression_.Length != 0) {
                MapKeyExpression_ = other.MapKeyExpression_;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    MapKeyExpression_ = input.ReadString();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    MapKeyExpression_ = input.ReadString();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

    }
    #endregion

  }

  public sealed partial class FieldReference : pb::IMessage<FieldReference>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FieldReference> _parser = new pb::MessageParser<FieldReference>(() => new FieldReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FieldReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Substrait.Protobuf.SelectionReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FieldReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FieldReference(FieldReference other) : this() {
      switch (other.ReferenceTypeCase) {
        case ReferenceTypeOneofCase.DirectReference:
          DirectReference = other.DirectReference.Clone();
          break;
        case ReferenceTypeOneofCase.MaskedReference:
          MaskedReference = other.MaskedReference.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FieldReference Clone() {
      return new FieldReference(this);
    }

    /// <summary>Field number for the "direct_reference" field.</summary>
    public const int DirectReferenceFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.ReferenceSegment DirectReference {
      get { return referenceTypeCase_ == ReferenceTypeOneofCase.DirectReference ? (global::Substrait.Protobuf.ReferenceSegment) referenceType_ : null; }
      set {
        referenceType_ = value;
        referenceTypeCase_ = value == null ? ReferenceTypeOneofCase.None : ReferenceTypeOneofCase.DirectReference;
      }
    }

    /// <summary>Field number for the "masked_reference" field.</summary>
    public const int MaskedReferenceFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.MaskExpression MaskedReference {
      get { return referenceTypeCase_ == ReferenceTypeOneofCase.MaskedReference ? (global::Substrait.Protobuf.MaskExpression) referenceType_ : null; }
      set {
        referenceType_ = value;
        referenceTypeCase_ = value == null ? ReferenceTypeOneofCase.None : ReferenceTypeOneofCase.MaskedReference;
      }
    }

    private object referenceType_;
    /// <summary>Enum of possible cases for the "reference_type" oneof.</summary>
    public enum ReferenceTypeOneofCase {
      None = 0,
      DirectReference = 1,
      MaskedReference = 2,
    }
    private ReferenceTypeOneofCase referenceTypeCase_ = ReferenceTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReferenceTypeOneofCase ReferenceTypeCase {
      get { return referenceTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReferenceType() {
      referenceTypeCase_ = ReferenceTypeOneofCase.None;
      referenceType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FieldReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FieldReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DirectReference, other.DirectReference)) return false;
      if (!object.Equals(MaskedReference, other.MaskedReference)) return false;
      if (ReferenceTypeCase != other.ReferenceTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (referenceTypeCase_ == ReferenceTypeOneofCase.DirectReference) hash ^= DirectReference.GetHashCode();
      if (referenceTypeCase_ == ReferenceTypeOneofCase.MaskedReference) hash ^= MaskedReference.GetHashCode();
      hash ^= (int) referenceTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (referenceTypeCase_ == ReferenceTypeOneofCase.DirectReference) {
        output.WriteRawTag(10);
        output.WriteMessage(DirectReference);
      }
      if (referenceTypeCase_ == ReferenceTypeOneofCase.MaskedReference) {
        output.WriteRawTag(18);
        output.WriteMessage(MaskedReference);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (referenceTypeCase_ == ReferenceTypeOneofCase.DirectReference) {
        output.WriteRawTag(10);
        output.WriteMessage(DirectReference);
      }
      if (referenceTypeCase_ == ReferenceTypeOneofCase.MaskedReference) {
        output.WriteRawTag(18);
        output.WriteMessage(MaskedReference);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (referenceTypeCase_ == ReferenceTypeOneofCase.DirectReference) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DirectReference);
      }
      if (referenceTypeCase_ == ReferenceTypeOneofCase.MaskedReference) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MaskedReference);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FieldReference other) {
      if (other == null) {
        return;
      }
      switch (other.ReferenceTypeCase) {
        case ReferenceTypeOneofCase.DirectReference:
          if (DirectReference == null) {
            DirectReference = new global::Substrait.Protobuf.ReferenceSegment();
          }
          DirectReference.MergeFrom(other.DirectReference);
          break;
        case ReferenceTypeOneofCase.MaskedReference:
          if (MaskedReference == null) {
            MaskedReference = new global::Substrait.Protobuf.MaskExpression();
          }
          MaskedReference.MergeFrom(other.MaskedReference);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Substrait.Protobuf.ReferenceSegment subBuilder = new global::Substrait.Protobuf.ReferenceSegment();
            if (referenceTypeCase_ == ReferenceTypeOneofCase.DirectReference) {
              subBuilder.MergeFrom(DirectReference);
            }
            input.ReadMessage(subBuilder);
            DirectReference = subBuilder;
            break;
          }
          case 18: {
            global::Substrait.Protobuf.MaskExpression subBuilder = new global::Substrait.Protobuf.MaskExpression();
            if (referenceTypeCase_ == ReferenceTypeOneofCase.MaskedReference) {
              subBuilder.MergeFrom(MaskedReference);
            }
            input.ReadMessage(subBuilder);
            MaskedReference = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Substrait.Protobuf.ReferenceSegment subBuilder = new global::Substrait.Protobuf.ReferenceSegment();
            if (referenceTypeCase_ == ReferenceTypeOneofCase.DirectReference) {
              subBuilder.MergeFrom(DirectReference);
            }
            input.ReadMessage(subBuilder);
            DirectReference = subBuilder;
            break;
          }
          case 18: {
            global::Substrait.Protobuf.MaskExpression subBuilder = new global::Substrait.Protobuf.MaskExpression();
            if (referenceTypeCase_ == ReferenceTypeOneofCase.MaskedReference) {
              subBuilder.MergeFrom(MaskedReference);
            }
            input.ReadMessage(subBuilder);
            MaskedReference = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
