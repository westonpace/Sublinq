// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: relations.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Substrait.Protobuf {

  /// <summary>Holder for reflection information generated from relations.proto</summary>
  public static partial class RelationsReflection {

    #region Descriptor
    /// <summary>File descriptor for relations.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RelationsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9yZWxhdGlvbnMucHJvdG8SDGlvLnN1YnN0cmFpdBoKdHlwZS5wcm90bxoQ",
            "ZXhwcmVzc2lvbi5wcm90bxoPc2VsZWN0aW9uLnByb3RvIvoDCglSZWxDb21t",
            "b24SMAoGZGlyZWN0GAEgASgLMh4uaW8uc3Vic3RyYWl0LlJlbENvbW1vbi5E",
            "aXJlY3RIABIsCgRlbWl0GAIgASgLMhwuaW8uc3Vic3RyYWl0LlJlbENvbW1v",
            "bi5FbWl0SAASKgoEaGludBgDIAEoCzIcLmlvLnN1YnN0cmFpdC5SZWxDb21t",
            "b24uSGludBI9Cgpjb25zdHJhaW50GAQgASgLMikuaW8uc3Vic3RyYWl0LlJl",
            "bENvbW1vbi5SdW50aW1lQ29uc3RyYWludBoICgZEaXJlY3QaHgoERW1pdBIW",
            "Cg5vdXRwdXRfbWFwcGluZxgBIAMoBRraAQoESGludBJCCg9oaW50X2tleV92",
            "YWx1ZXMYASADKAsyKS5pby5zdWJzdHJhaXQuUmVsQ29tbW9uLkhpbnQuSGlu",
            "dEtleVZhbHVlEjEKBXN0YXRzGAIgASgLMiIuaW8uc3Vic3RyYWl0LlJlbENv",
            "bW1vbi5IaW50LlN0YXRzGi8KBVN0YXRzEhEKCXJvd19jb3VudBgBIAEoARIT",
            "CgtyZWNvcmRfc2l6ZRgCIAEoARoqCgxIaW50S2V5VmFsdWUSCwoDa2V5GAEg",
            "ASgJEg0KBXZhbHVlGAIgASgMGhMKEVJ1bnRpbWVDb25zdHJhaW50QgYKBGtp",
            "bmQi5AUKB1JlYWRSZWwSJwoGY29tbW9uGAEgASgLMhcuaW8uc3Vic3RyYWl0",
            "LlJlbENvbW1vbhIzCgtiYXNlX3NjaGVtYRgCIAEoCzIeLmlvLnN1YnN0cmFp",
            "dC5UeXBlLk5hbWVkU3RydWN0EigKBmZpbHRlchgDIAEoCzIYLmlvLnN1YnN0",
            "cmFpdC5FeHByZXNzaW9uEjAKCnByb2plY3Rpb24YBCABKAsyHC5pby5zdWJz",
            "dHJhaXQuTWFza0V4cHJlc3Npb24SOwoNdmlydHVhbF90YWJsZRgFIAEoCzIi",
            "LmlvLnN1YnN0cmFpdC5SZWFkUmVsLlZpcnR1YWxUYWJsZUgAEjcKC2xvY2Fs",
            "X2ZpbGVzGAYgASgLMiAuaW8uc3Vic3RyYWl0LlJlYWRSZWwuTG9jYWxGaWxl",
            "c0gAEjcKC25hbWVkX3RhYmxlGAcgASgLMiAuaW8uc3Vic3RyYWl0LlJlYWRS",
            "ZWwuTmFtZWRUYWJsZUgAGhsKCk5hbWVkVGFibGUSDQoFbmFtZXMYASADKAka",
            "RwoMVmlydHVhbFRhYmxlEjcKBnZhbHVlcxgBIAMoCzInLmlvLnN1YnN0cmFp",
            "dC5FeHByZXNzaW9uLkxpdGVyYWwuU3RydWN0GvwBCgpMb2NhbEZpbGVzEjsK",
            "BWl0ZW1zGAEgAygLMiwuaW8uc3Vic3RyYWl0LlJlYWRSZWwuTG9jYWxGaWxl",
            "cy5GaWxlT3JGaWxlcxqwAQoLRmlsZU9yRmlsZXMSEgoIdXJpX3BhdGgYASAB",
            "KAlIABIXCg11cmlfcGF0aF9nbG9iGAIgASgJSAASQwoGZm9ybWF0GAMgASgO",
            "MjMuaW8uc3Vic3RyYWl0LlJlYWRSZWwuTG9jYWxGaWxlcy5GaWxlT3JGaWxl",
            "cy5Gb3JtYXQiIgoGRm9ybWF0EgsKB1VOS05PV04QABILCgdQQVJRVUVUEAFC",
            "CwoJcGF0aF90eXBlQgsKCXJlYWRfdHlwZSKGAQoKUHJvamVjdFJlbBInCgZj",
            "b21tb24YASABKAsyFy5pby5zdWJzdHJhaXQuUmVsQ29tbW9uEiAKBWlucHV0",
            "GAIgASgLMhEuaW8uc3Vic3RyYWl0LlJlbBItCgtleHByZXNzaW9ucxgDIAMo",
            "CzIYLmlvLnN1YnN0cmFpdC5FeHByZXNzaW9uIpsCCgdKb2luUmVsEicKBmNv",
            "bW1vbhgBIAEoCzIXLmlvLnN1YnN0cmFpdC5SZWxDb21tb24SHwoEbGVmdBgC",
            "IAEoCzIRLmlvLnN1YnN0cmFpdC5SZWwSIAoFcmlnaHQYAyABKAsyES5pby5z",
            "dWJzdHJhaXQuUmVsEiwKCmV4cHJlc3Npb24YBCABKAsyGC5pby5zdWJzdHJh",
            "aXQuRXhwcmVzc2lvbhIyChBwb3N0X2pvaW5fZmlsdGVyGAUgASgLMhguaW8u",
            "c3Vic3RyYWl0LkV4cHJlc3Npb24iQgoISm9pblR5cGUSCwoHVU5LTk9XThAA",
            "EgkKBUlOTkVSEAESCQoFT1VURVIQAhIICgRMRUZUEAMSCQoFUklHSFQQBCJ0",
            "CghGZXRjaFJlbBInCgZjb21tb24YASABKAsyFy5pby5zdWJzdHJhaXQuUmVs",
            "Q29tbW9uEiAKBWlucHV0GAIgASgLMhEuaW8uc3Vic3RyYWl0LlJlbBIOCgZv",
            "ZmZzZXQYAyABKAMSDQoFY291bnQYBCABKAMi6wIKDEFnZ3JlZ2F0ZVJlbBIn",
            "CgZjb21tb24YASABKAsyFy5pby5zdWJzdHJhaXQuUmVsQ29tbW9uEiAKBWlu",
            "cHV0GAIgASgLMhEuaW8uc3Vic3RyYWl0LlJlbBI2Cglncm91cGluZ3MYAyAD",
            "KAsyIy5pby5zdWJzdHJhaXQuQWdncmVnYXRlUmVsLkdyb3VwaW5nEjQKCG1l",
            "YXN1cmVzGAQgAygLMiIuaW8uc3Vic3RyYWl0LkFnZ3JlZ2F0ZVJlbC5NZWFz",
            "dXJlEjgKBXBoYXNlGAUgASgOMikuaW8uc3Vic3RyYWl0LkV4cHJlc3Npb24u",
            "QWdncmVnYXRpb25QaGFzZRogCghHcm91cGluZxIUCgxpbnB1dF9maWVsZHMY",
            "ASADKAUaRgoHTWVhc3VyZRI7CgdtZWFzdXJlGAEgASgLMiouaW8uc3Vic3Ry",
            "YWl0LkV4cHJlc3Npb24uQWdncmVnYXRlRnVuY3Rpb24ihwEKB1NvcnRSZWwS",
            "JwoGY29tbW9uGAEgASgLMhcuaW8uc3Vic3RyYWl0LlJlbENvbW1vbhIgCgVp",
            "bnB1dBgCIAEoCzIRLmlvLnN1YnN0cmFpdC5SZWwSMQoFc29ydHMYAyADKAsy",
            "Ii5pby5zdWJzdHJhaXQuRXhwcmVzc2lvbi5Tb3J0RmllbGQigwEKCUZpbHRl",
            "clJlbBInCgZjb21tb24YASABKAsyFy5pby5zdWJzdHJhaXQuUmVsQ29tbW9u",
            "EiAKBWlucHV0GAIgASgLMhEuaW8uc3Vic3RyYWl0LlJlbBIrCgljb25kaXRp",
            "b24YAyABKAsyGC5pby5zdWJzdHJhaXQuRXhwcmVzc2lvbiKSAgoGU2V0UmVs",
            "EicKBmNvbW1vbhgBIAEoCzIXLmlvLnN1YnN0cmFpdC5SZWxDb21tb24SIQoG",
            "aW5wdXRzGAIgAygLMhEuaW8uc3Vic3RyYWl0LlJlbBImCgJvcBgDIAEoDjIa",
            "LmlvLnN1YnN0cmFpdC5TZXRSZWwuU2V0T3AikwEKBVNldE9wEgsKB1VOS05P",
            "V04QABIRCg1NSU5VU19QUklNQVJZEAESEgoOTUlOVVNfTVVMVElTRVQQAhIY",
            "ChRJTlRFUlNFQ1RJT05fUFJJTUFSWRADEhkKFUlOVEVSU0VDVElPTl9NVUxU",
            "SVNFVBAEEhIKDlVOSU9OX0RJU1RJTkNUEAUSDQoJVU5JT05fQUxMEAYi3AIK",
            "A1JlbBIlCgRyZWFkGAEgASgLMhUuaW8uc3Vic3RyYWl0LlJlYWRSZWxIABIp",
            "CgZmaWx0ZXIYAiABKAsyFy5pby5zdWJzdHJhaXQuRmlsdGVyUmVsSAASJwoF",
            "ZmV0Y2gYAyABKAsyFi5pby5zdWJzdHJhaXQuRmV0Y2hSZWxIABIvCglhZ2dy",
            "ZWdhdGUYBCABKAsyGi5pby5zdWJzdHJhaXQuQWdncmVnYXRlUmVsSAASJQoE",
            "c29ydBgFIAEoCzIVLmlvLnN1YnN0cmFpdC5Tb3J0UmVsSAASJQoEam9pbhgG",
            "IAEoCzIVLmlvLnN1YnN0cmFpdC5Kb2luUmVsSAASKwoHcHJvamVjdBgHIAEo",
            "CzIYLmlvLnN1YnN0cmFpdC5Qcm9qZWN0UmVsSAASIwoDc2V0GAggASgLMhQu",
            "aW8uc3Vic3RyYWl0LlNldFJlbEgAQgkKB1JlbFR5cGVCF1ABqgISU3Vic3Ry",
            "YWl0LlByb3RvYnVmYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Substrait.Protobuf.TypeReflection.Descriptor, global::Substrait.Protobuf.ExpressionReflection.Descriptor, global::Substrait.Protobuf.SelectionReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.RelCommon), global::Substrait.Protobuf.RelCommon.Parser, new[]{ "Direct", "Emit", "Hint", "Constraint" }, new[]{ "Kind" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.RelCommon.Types.Direct), global::Substrait.Protobuf.RelCommon.Types.Direct.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.RelCommon.Types.Emit), global::Substrait.Protobuf.RelCommon.Types.Emit.Parser, new[]{ "OutputMapping" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.RelCommon.Types.Hint), global::Substrait.Protobuf.RelCommon.Types.Hint.Parser, new[]{ "HintKeyValues", "Stats" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.RelCommon.Types.Hint.Types.Stats), global::Substrait.Protobuf.RelCommon.Types.Hint.Types.Stats.Parser, new[]{ "RowCount", "RecordSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.RelCommon.Types.Hint.Types.HintKeyValue), global::Substrait.Protobuf.RelCommon.Types.Hint.Types.HintKeyValue.Parser, new[]{ "Key", "Value" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.RelCommon.Types.RuntimeConstraint), global::Substrait.Protobuf.RelCommon.Types.RuntimeConstraint.Parser, null, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.ReadRel), global::Substrait.Protobuf.ReadRel.Parser, new[]{ "Common", "BaseSchema", "Filter", "Projection", "VirtualTable", "LocalFiles", "NamedTable" }, new[]{ "ReadType" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.ReadRel.Types.NamedTable), global::Substrait.Protobuf.ReadRel.Types.NamedTable.Parser, new[]{ "Names" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.ReadRel.Types.VirtualTable), global::Substrait.Protobuf.ReadRel.Types.VirtualTable.Parser, new[]{ "Values" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.ReadRel.Types.LocalFiles), global::Substrait.Protobuf.ReadRel.Types.LocalFiles.Parser, new[]{ "Items" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.ReadRel.Types.LocalFiles.Types.FileOrFiles), global::Substrait.Protobuf.ReadRel.Types.LocalFiles.Types.FileOrFiles.Parser, new[]{ "UriPath", "UriPathGlob", "Format" }, new[]{ "PathType" }, new[]{ typeof(global::Substrait.Protobuf.ReadRel.Types.LocalFiles.Types.FileOrFiles.Types.Format) }, null, null)})}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.ProjectRel), global::Substrait.Protobuf.ProjectRel.Parser, new[]{ "Common", "Input", "Expressions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.JoinRel), global::Substrait.Protobuf.JoinRel.Parser, new[]{ "Common", "Left", "Right", "Expression", "PostJoinFilter" }, null, new[]{ typeof(global::Substrait.Protobuf.JoinRel.Types.JoinType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.FetchRel), global::Substrait.Protobuf.FetchRel.Parser, new[]{ "Common", "Input", "Offset", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.AggregateRel), global::Substrait.Protobuf.AggregateRel.Parser, new[]{ "Common", "Input", "Groupings", "Measures", "Phase" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.AggregateRel.Types.Grouping), global::Substrait.Protobuf.AggregateRel.Types.Grouping.Parser, new[]{ "InputFields" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.AggregateRel.Types.Measure), global::Substrait.Protobuf.AggregateRel.Types.Measure.Parser, new[]{ "Measure_" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.SortRel), global::Substrait.Protobuf.SortRel.Parser, new[]{ "Common", "Input", "Sorts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.FilterRel), global::Substrait.Protobuf.FilterRel.Parser, new[]{ "Common", "Input", "Condition" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.SetRel), global::Substrait.Protobuf.SetRel.Parser, new[]{ "Common", "Inputs", "Op" }, null, new[]{ typeof(global::Substrait.Protobuf.SetRel.Types.SetOp) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Rel), global::Substrait.Protobuf.Rel.Parser, new[]{ "Read", "Filter", "Fetch", "Aggregate", "Sort", "Join", "Project", "Set" }, new[]{ "RelType" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RelCommon : pb::IMessage<RelCommon>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RelCommon> _parser = new pb::MessageParser<RelCommon>(() => new RelCommon());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RelCommon> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Substrait.Protobuf.RelationsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelCommon() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelCommon(RelCommon other) : this() {
      hint_ = other.hint_ != null ? other.hint_.Clone() : null;
      constraint_ = other.constraint_ != null ? other.constraint_.Clone() : null;
      switch (other.KindCase) {
        case KindOneofCase.Direct:
          Direct = other.Direct.Clone();
          break;
        case KindOneofCase.Emit:
          Emit = other.Emit.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelCommon Clone() {
      return new RelCommon(this);
    }

    /// <summary>Field number for the "direct" field.</summary>
    public const int DirectFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.RelCommon.Types.Direct Direct {
      get { return kindCase_ == KindOneofCase.Direct ? (global::Substrait.Protobuf.RelCommon.Types.Direct) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Direct;
      }
    }

    /// <summary>Field number for the "emit" field.</summary>
    public const int EmitFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.RelCommon.Types.Emit Emit {
      get { return kindCase_ == KindOneofCase.Emit ? (global::Substrait.Protobuf.RelCommon.Types.Emit) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Emit;
      }
    }

    /// <summary>Field number for the "hint" field.</summary>
    public const int HintFieldNumber = 3;
    private global::Substrait.Protobuf.RelCommon.Types.Hint hint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.RelCommon.Types.Hint Hint {
      get { return hint_; }
      set {
        hint_ = value;
      }
    }

    /// <summary>Field number for the "constraint" field.</summary>
    public const int ConstraintFieldNumber = 4;
    private global::Substrait.Protobuf.RelCommon.Types.RuntimeConstraint constraint_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.RelCommon.Types.RuntimeConstraint Constraint {
      get { return constraint_; }
      set {
        constraint_ = value;
      }
    }

    private object kind_;
    /// <summary>Enum of possible cases for the "kind" oneof.</summary>
    public enum KindOneofCase {
      None = 0,
      Direct = 1,
      Emit = 2,
    }
    private KindOneofCase kindCase_ = KindOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KindOneofCase KindCase {
      get { return kindCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearKind() {
      kindCase_ = KindOneofCase.None;
      kind_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RelCommon);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RelCommon other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Direct, other.Direct)) return false;
      if (!object.Equals(Emit, other.Emit)) return false;
      if (!object.Equals(Hint, other.Hint)) return false;
      if (!object.Equals(Constraint, other.Constraint)) return false;
      if (KindCase != other.KindCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (kindCase_ == KindOneofCase.Direct) hash ^= Direct.GetHashCode();
      if (kindCase_ == KindOneofCase.Emit) hash ^= Emit.GetHashCode();
      if (hint_ != null) hash ^= Hint.GetHashCode();
      if (constraint_ != null) hash ^= Constraint.GetHashCode();
      hash ^= (int) kindCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (kindCase_ == KindOneofCase.Direct) {
        output.WriteRawTag(10);
        output.WriteMessage(Direct);
      }
      if (kindCase_ == KindOneofCase.Emit) {
        output.WriteRawTag(18);
        output.WriteMessage(Emit);
      }
      if (hint_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Hint);
      }
      if (constraint_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Constraint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (kindCase_ == KindOneofCase.Direct) {
        output.WriteRawTag(10);
        output.WriteMessage(Direct);
      }
      if (kindCase_ == KindOneofCase.Emit) {
        output.WriteRawTag(18);
        output.WriteMessage(Emit);
      }
      if (hint_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Hint);
      }
      if (constraint_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Constraint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (kindCase_ == KindOneofCase.Direct) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Direct);
      }
      if (kindCase_ == KindOneofCase.Emit) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Emit);
      }
      if (hint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hint);
      }
      if (constraint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Constraint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RelCommon other) {
      if (other == null) {
        return;
      }
      if (other.hint_ != null) {
        if (hint_ == null) {
          Hint = new global::Substrait.Protobuf.RelCommon.Types.Hint();
        }
        Hint.MergeFrom(other.Hint);
      }
      if (other.constraint_ != null) {
        if (constraint_ == null) {
          Constraint = new global::Substrait.Protobuf.RelCommon.Types.RuntimeConstraint();
        }
        Constraint.MergeFrom(other.Constraint);
      }
      switch (other.KindCase) {
        case KindOneofCase.Direct:
          if (Direct == null) {
            Direct = new global::Substrait.Protobuf.RelCommon.Types.Direct();
          }
          Direct.MergeFrom(other.Direct);
          break;
        case KindOneofCase.Emit:
          if (Emit == null) {
            Emit = new global::Substrait.Protobuf.RelCommon.Types.Emit();
          }
          Emit.MergeFrom(other.Emit);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Substrait.Protobuf.RelCommon.Types.Direct subBuilder = new global::Substrait.Protobuf.RelCommon.Types.Direct();
            if (kindCase_ == KindOneofCase.Direct) {
              subBuilder.MergeFrom(Direct);
            }
            input.ReadMessage(subBuilder);
            Direct = subBuilder;
            break;
          }
          case 18: {
            global::Substrait.Protobuf.RelCommon.Types.Emit subBuilder = new global::Substrait.Protobuf.RelCommon.Types.Emit();
            if (kindCase_ == KindOneofCase.Emit) {
              subBuilder.MergeFrom(Emit);
            }
            input.ReadMessage(subBuilder);
            Emit = subBuilder;
            break;
          }
          case 26: {
            if (hint_ == null) {
              Hint = new global::Substrait.Protobuf.RelCommon.Types.Hint();
            }
            input.ReadMessage(Hint);
            break;
          }
          case 34: {
            if (constraint_ == null) {
              Constraint = new global::Substrait.Protobuf.RelCommon.Types.RuntimeConstraint();
            }
            input.ReadMessage(Constraint);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Substrait.Protobuf.RelCommon.Types.Direct subBuilder = new global::Substrait.Protobuf.RelCommon.Types.Direct();
            if (kindCase_ == KindOneofCase.Direct) {
              subBuilder.MergeFrom(Direct);
            }
            input.ReadMessage(subBuilder);
            Direct = subBuilder;
            break;
          }
          case 18: {
            global::Substrait.Protobuf.RelCommon.Types.Emit subBuilder = new global::Substrait.Protobuf.RelCommon.Types.Emit();
            if (kindCase_ == KindOneofCase.Emit) {
              subBuilder.MergeFrom(Emit);
            }
            input.ReadMessage(subBuilder);
            Emit = subBuilder;
            break;
          }
          case 26: {
            if (hint_ == null) {
              Hint = new global::Substrait.Protobuf.RelCommon.Types.Hint();
            }
            input.ReadMessage(Hint);
            break;
          }
          case 34: {
            if (constraint_ == null) {
              Constraint = new global::Substrait.Protobuf.RelCommon.Types.RuntimeConstraint();
            }
            input.ReadMessage(Constraint);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the RelCommon message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Direct : pb::IMessage<Direct>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Direct> _parser = new pb::MessageParser<Direct>(() => new Direct());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Direct> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.RelCommon.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Direct() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Direct(Direct other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Direct Clone() {
          return new Direct(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Direct);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Direct other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Direct other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

      public sealed partial class Emit : pb::IMessage<Emit>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Emit> _parser = new pb::MessageParser<Emit>(() => new Emit());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Emit> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.RelCommon.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Emit() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Emit(Emit other) : this() {
          outputMapping_ = other.outputMapping_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Emit Clone() {
          return new Emit(this);
        }

        /// <summary>Field number for the "output_mapping" field.</summary>
        public const int OutputMappingFieldNumber = 1;
        private static readonly pb::FieldCodec<int> _repeated_outputMapping_codec
            = pb::FieldCodec.ForInt32(10);
        private readonly pbc::RepeatedField<int> outputMapping_ = new pbc::RepeatedField<int>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int> OutputMapping {
          get { return outputMapping_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Emit);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Emit other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!outputMapping_.Equals(other.outputMapping_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= outputMapping_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          outputMapping_.WriteTo(output, _repeated_outputMapping_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          outputMapping_.WriteTo(ref output, _repeated_outputMapping_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += outputMapping_.CalculateSize(_repeated_outputMapping_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Emit other) {
          if (other == null) {
            return;
          }
          outputMapping_.Add(other.outputMapping_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10:
              case 8: {
                outputMapping_.AddEntriesFrom(input, _repeated_outputMapping_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10:
              case 8: {
                outputMapping_.AddEntriesFrom(ref input, _repeated_outputMapping_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Hint : pb::IMessage<Hint>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Hint> _parser = new pb::MessageParser<Hint>(() => new Hint());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Hint> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.RelCommon.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Hint() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Hint(Hint other) : this() {
          hintKeyValues_ = other.hintKeyValues_.Clone();
          stats_ = other.stats_ != null ? other.stats_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Hint Clone() {
          return new Hint(this);
        }

        /// <summary>Field number for the "hint_key_values" field.</summary>
        public const int HintKeyValuesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Substrait.Protobuf.RelCommon.Types.Hint.Types.HintKeyValue> _repeated_hintKeyValues_codec
            = pb::FieldCodec.ForMessage(10, global::Substrait.Protobuf.RelCommon.Types.Hint.Types.HintKeyValue.Parser);
        private readonly pbc::RepeatedField<global::Substrait.Protobuf.RelCommon.Types.Hint.Types.HintKeyValue> hintKeyValues_ = new pbc::RepeatedField<global::Substrait.Protobuf.RelCommon.Types.Hint.Types.HintKeyValue>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Substrait.Protobuf.RelCommon.Types.Hint.Types.HintKeyValue> HintKeyValues {
          get { return hintKeyValues_; }
        }

        /// <summary>Field number for the "stats" field.</summary>
        public const int StatsFieldNumber = 2;
        private global::Substrait.Protobuf.RelCommon.Types.Hint.Types.Stats stats_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.RelCommon.Types.Hint.Types.Stats Stats {
          get { return stats_; }
          set {
            stats_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Hint);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Hint other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!hintKeyValues_.Equals(other.hintKeyValues_)) return false;
          if (!object.Equals(Stats, other.Stats)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= hintKeyValues_.GetHashCode();
          if (stats_ != null) hash ^= Stats.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          hintKeyValues_.WriteTo(output, _repeated_hintKeyValues_codec);
          if (stats_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Stats);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          hintKeyValues_.WriteTo(ref output, _repeated_hintKeyValues_codec);
          if (stats_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Stats);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += hintKeyValues_.CalculateSize(_repeated_hintKeyValues_codec);
          if (stats_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stats);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Hint other) {
          if (other == null) {
            return;
          }
          hintKeyValues_.Add(other.hintKeyValues_);
          if (other.stats_ != null) {
            if (stats_ == null) {
              Stats = new global::Substrait.Protobuf.RelCommon.Types.Hint.Types.Stats();
            }
            Stats.MergeFrom(other.Stats);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                hintKeyValues_.AddEntriesFrom(input, _repeated_hintKeyValues_codec);
                break;
              }
              case 18: {
                if (stats_ == null) {
                  Stats = new global::Substrait.Protobuf.RelCommon.Types.Hint.Types.Stats();
                }
                input.ReadMessage(Stats);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                hintKeyValues_.AddEntriesFrom(ref input, _repeated_hintKeyValues_codec);
                break;
              }
              case 18: {
                if (stats_ == null) {
                  Stats = new global::Substrait.Protobuf.RelCommon.Types.Hint.Types.Stats();
                }
                input.ReadMessage(Stats);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the Hint message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class Stats : pb::IMessage<Stats>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<Stats> _parser = new pb::MessageParser<Stats>(() => new Stats());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Stats> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Substrait.Protobuf.RelCommon.Types.Hint.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Stats() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Stats(Stats other) : this() {
              rowCount_ = other.rowCount_;
              recordSize_ = other.recordSize_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Stats Clone() {
              return new Stats(this);
            }

            /// <summary>Field number for the "row_count" field.</summary>
            public const int RowCountFieldNumber = 1;
            private double rowCount_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public double RowCount {
              get { return rowCount_; }
              set {
                rowCount_ = value;
              }
            }

            /// <summary>Field number for the "record_size" field.</summary>
            public const int RecordSizeFieldNumber = 2;
            private double recordSize_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public double RecordSize {
              get { return recordSize_; }
              set {
                recordSize_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Stats);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Stats other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RowCount, other.RowCount)) return false;
              if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(RecordSize, other.RecordSize)) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (RowCount != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RowCount);
              if (RecordSize != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(RecordSize);
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (RowCount != 0D) {
                output.WriteRawTag(9);
                output.WriteDouble(RowCount);
              }
              if (RecordSize != 0D) {
                output.WriteRawTag(17);
                output.WriteDouble(RecordSize);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (RowCount != 0D) {
                output.WriteRawTag(9);
                output.WriteDouble(RowCount);
              }
              if (RecordSize != 0D) {
                output.WriteRawTag(17);
                output.WriteDouble(RecordSize);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (RowCount != 0D) {
                size += 1 + 8;
              }
              if (RecordSize != 0D) {
                size += 1 + 8;
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Stats other) {
              if (other == null) {
                return;
              }
              if (other.RowCount != 0D) {
                RowCount = other.RowCount;
              }
              if (other.RecordSize != 0D) {
                RecordSize = other.RecordSize;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 9: {
                    RowCount = input.ReadDouble();
                    break;
                  }
                  case 17: {
                    RecordSize = input.ReadDouble();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 9: {
                    RowCount = input.ReadDouble();
                    break;
                  }
                  case 17: {
                    RecordSize = input.ReadDouble();
                    break;
                  }
                }
              }
            }
            #endif

          }

          public sealed partial class HintKeyValue : pb::IMessage<HintKeyValue>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<HintKeyValue> _parser = new pb::MessageParser<HintKeyValue>(() => new HintKeyValue());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<HintKeyValue> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Substrait.Protobuf.RelCommon.Types.Hint.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public HintKeyValue() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public HintKeyValue(HintKeyValue other) : this() {
              key_ = other.key_;
              value_ = other.value_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public HintKeyValue Clone() {
              return new HintKeyValue(this);
            }

            /// <summary>Field number for the "key" field.</summary>
            public const int KeyFieldNumber = 1;
            private string key_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Key {
              get { return key_; }
              set {
                key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "value" field.</summary>
            public const int ValueFieldNumber = 2;
            private pb::ByteString value_ = pb::ByteString.Empty;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pb::ByteString Value {
              get { return value_; }
              set {
                value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as HintKeyValue);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(HintKeyValue other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Key != other.Key) return false;
              if (Value != other.Value) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Key.Length != 0) hash ^= Key.GetHashCode();
              if (Value.Length != 0) hash ^= Value.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (Key.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Key);
              }
              if (Value.Length != 0) {
                output.WriteRawTag(18);
                output.WriteBytes(Value);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (Key.Length != 0) {
                output.WriteRawTag(10);
                output.WriteString(Key);
              }
              if (Value.Length != 0) {
                output.WriteRawTag(18);
                output.WriteBytes(Value);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Key.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
              }
              if (Value.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeBytesSize(Value);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(HintKeyValue other) {
              if (other == null) {
                return;
              }
              if (other.Key.Length != 0) {
                Key = other.Key;
              }
              if (other.Value.Length != 0) {
                Value = other.Value;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    Key = input.ReadString();
                    break;
                  }
                  case 18: {
                    Value = input.ReadBytes();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    Key = input.ReadString();
                    break;
                  }
                  case 18: {
                    Value = input.ReadBytes();
                    break;
                  }
                }
              }
            }
            #endif

          }

        }
        #endregion

      }

      /// <summary>
      /// TODO: nodes, cpu threads/%, memory, iops, etc.
      /// </summary>
      public sealed partial class RuntimeConstraint : pb::IMessage<RuntimeConstraint>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RuntimeConstraint> _parser = new pb::MessageParser<RuntimeConstraint>(() => new RuntimeConstraint());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<RuntimeConstraint> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.RelCommon.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RuntimeConstraint() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RuntimeConstraint(RuntimeConstraint other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public RuntimeConstraint Clone() {
          return new RuntimeConstraint(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as RuntimeConstraint);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(RuntimeConstraint other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(RuntimeConstraint other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class ReadRel : pb::IMessage<ReadRel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ReadRel> _parser = new pb::MessageParser<ReadRel>(() => new ReadRel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ReadRel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Substrait.Protobuf.RelationsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRel(ReadRel other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      baseSchema_ = other.baseSchema_ != null ? other.baseSchema_.Clone() : null;
      filter_ = other.filter_ != null ? other.filter_.Clone() : null;
      projection_ = other.projection_ != null ? other.projection_.Clone() : null;
      switch (other.ReadTypeCase) {
        case ReadTypeOneofCase.VirtualTable:
          VirtualTable = other.VirtualTable.Clone();
          break;
        case ReadTypeOneofCase.LocalFiles:
          LocalFiles = other.LocalFiles.Clone();
          break;
        case ReadTypeOneofCase.NamedTable:
          NamedTable = other.NamedTable.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadRel Clone() {
      return new ReadRel(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Substrait.Protobuf.RelCommon common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.RelCommon Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "base_schema" field.</summary>
    public const int BaseSchemaFieldNumber = 2;
    private global::Substrait.Protobuf.Type.Types.NamedStruct baseSchema_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.NamedStruct BaseSchema {
      get { return baseSchema_; }
      set {
        baseSchema_ = value;
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 3;
    private global::Substrait.Protobuf.Expression filter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Expression Filter {
      get { return filter_; }
      set {
        filter_ = value;
      }
    }

    /// <summary>Field number for the "projection" field.</summary>
    public const int ProjectionFieldNumber = 4;
    private global::Substrait.Protobuf.MaskExpression projection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.MaskExpression Projection {
      get { return projection_; }
      set {
        projection_ = value;
      }
    }

    /// <summary>Field number for the "virtual_table" field.</summary>
    public const int VirtualTableFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.ReadRel.Types.VirtualTable VirtualTable {
      get { return readTypeCase_ == ReadTypeOneofCase.VirtualTable ? (global::Substrait.Protobuf.ReadRel.Types.VirtualTable) readType_ : null; }
      set {
        readType_ = value;
        readTypeCase_ = value == null ? ReadTypeOneofCase.None : ReadTypeOneofCase.VirtualTable;
      }
    }

    /// <summary>Field number for the "local_files" field.</summary>
    public const int LocalFilesFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.ReadRel.Types.LocalFiles LocalFiles {
      get { return readTypeCase_ == ReadTypeOneofCase.LocalFiles ? (global::Substrait.Protobuf.ReadRel.Types.LocalFiles) readType_ : null; }
      set {
        readType_ = value;
        readTypeCase_ = value == null ? ReadTypeOneofCase.None : ReadTypeOneofCase.LocalFiles;
      }
    }

    /// <summary>Field number for the "named_table" field.</summary>
    public const int NamedTableFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.ReadRel.Types.NamedTable NamedTable {
      get { return readTypeCase_ == ReadTypeOneofCase.NamedTable ? (global::Substrait.Protobuf.ReadRel.Types.NamedTable) readType_ : null; }
      set {
        readType_ = value;
        readTypeCase_ = value == null ? ReadTypeOneofCase.None : ReadTypeOneofCase.NamedTable;
      }
    }

    private object readType_;
    /// <summary>Enum of possible cases for the "read_type" oneof.</summary>
    public enum ReadTypeOneofCase {
      None = 0,
      VirtualTable = 5,
      LocalFiles = 6,
      NamedTable = 7,
    }
    private ReadTypeOneofCase readTypeCase_ = ReadTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ReadTypeOneofCase ReadTypeCase {
      get { return readTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearReadType() {
      readTypeCase_ = ReadTypeOneofCase.None;
      readType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ReadRel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ReadRel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(BaseSchema, other.BaseSchema)) return false;
      if (!object.Equals(Filter, other.Filter)) return false;
      if (!object.Equals(Projection, other.Projection)) return false;
      if (!object.Equals(VirtualTable, other.VirtualTable)) return false;
      if (!object.Equals(LocalFiles, other.LocalFiles)) return false;
      if (!object.Equals(NamedTable, other.NamedTable)) return false;
      if (ReadTypeCase != other.ReadTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (baseSchema_ != null) hash ^= BaseSchema.GetHashCode();
      if (filter_ != null) hash ^= Filter.GetHashCode();
      if (projection_ != null) hash ^= Projection.GetHashCode();
      if (readTypeCase_ == ReadTypeOneofCase.VirtualTable) hash ^= VirtualTable.GetHashCode();
      if (readTypeCase_ == ReadTypeOneofCase.LocalFiles) hash ^= LocalFiles.GetHashCode();
      if (readTypeCase_ == ReadTypeOneofCase.NamedTable) hash ^= NamedTable.GetHashCode();
      hash ^= (int) readTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (baseSchema_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseSchema);
      }
      if (filter_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Filter);
      }
      if (projection_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Projection);
      }
      if (readTypeCase_ == ReadTypeOneofCase.VirtualTable) {
        output.WriteRawTag(42);
        output.WriteMessage(VirtualTable);
      }
      if (readTypeCase_ == ReadTypeOneofCase.LocalFiles) {
        output.WriteRawTag(50);
        output.WriteMessage(LocalFiles);
      }
      if (readTypeCase_ == ReadTypeOneofCase.NamedTable) {
        output.WriteRawTag(58);
        output.WriteMessage(NamedTable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (baseSchema_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseSchema);
      }
      if (filter_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Filter);
      }
      if (projection_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Projection);
      }
      if (readTypeCase_ == ReadTypeOneofCase.VirtualTable) {
        output.WriteRawTag(42);
        output.WriteMessage(VirtualTable);
      }
      if (readTypeCase_ == ReadTypeOneofCase.LocalFiles) {
        output.WriteRawTag(50);
        output.WriteMessage(LocalFiles);
      }
      if (readTypeCase_ == ReadTypeOneofCase.NamedTable) {
        output.WriteRawTag(58);
        output.WriteMessage(NamedTable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (baseSchema_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseSchema);
      }
      if (filter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (projection_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Projection);
      }
      if (readTypeCase_ == ReadTypeOneofCase.VirtualTable) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VirtualTable);
      }
      if (readTypeCase_ == ReadTypeOneofCase.LocalFiles) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocalFiles);
      }
      if (readTypeCase_ == ReadTypeOneofCase.NamedTable) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NamedTable);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ReadRel other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Substrait.Protobuf.RelCommon();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.baseSchema_ != null) {
        if (baseSchema_ == null) {
          BaseSchema = new global::Substrait.Protobuf.Type.Types.NamedStruct();
        }
        BaseSchema.MergeFrom(other.BaseSchema);
      }
      if (other.filter_ != null) {
        if (filter_ == null) {
          Filter = new global::Substrait.Protobuf.Expression();
        }
        Filter.MergeFrom(other.Filter);
      }
      if (other.projection_ != null) {
        if (projection_ == null) {
          Projection = new global::Substrait.Protobuf.MaskExpression();
        }
        Projection.MergeFrom(other.Projection);
      }
      switch (other.ReadTypeCase) {
        case ReadTypeOneofCase.VirtualTable:
          if (VirtualTable == null) {
            VirtualTable = new global::Substrait.Protobuf.ReadRel.Types.VirtualTable();
          }
          VirtualTable.MergeFrom(other.VirtualTable);
          break;
        case ReadTypeOneofCase.LocalFiles:
          if (LocalFiles == null) {
            LocalFiles = new global::Substrait.Protobuf.ReadRel.Types.LocalFiles();
          }
          LocalFiles.MergeFrom(other.LocalFiles);
          break;
        case ReadTypeOneofCase.NamedTable:
          if (NamedTable == null) {
            NamedTable = new global::Substrait.Protobuf.ReadRel.Types.NamedTable();
          }
          NamedTable.MergeFrom(other.NamedTable);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Substrait.Protobuf.RelCommon();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (baseSchema_ == null) {
              BaseSchema = new global::Substrait.Protobuf.Type.Types.NamedStruct();
            }
            input.ReadMessage(BaseSchema);
            break;
          }
          case 26: {
            if (filter_ == null) {
              Filter = new global::Substrait.Protobuf.Expression();
            }
            input.ReadMessage(Filter);
            break;
          }
          case 34: {
            if (projection_ == null) {
              Projection = new global::Substrait.Protobuf.MaskExpression();
            }
            input.ReadMessage(Projection);
            break;
          }
          case 42: {
            global::Substrait.Protobuf.ReadRel.Types.VirtualTable subBuilder = new global::Substrait.Protobuf.ReadRel.Types.VirtualTable();
            if (readTypeCase_ == ReadTypeOneofCase.VirtualTable) {
              subBuilder.MergeFrom(VirtualTable);
            }
            input.ReadMessage(subBuilder);
            VirtualTable = subBuilder;
            break;
          }
          case 50: {
            global::Substrait.Protobuf.ReadRel.Types.LocalFiles subBuilder = new global::Substrait.Protobuf.ReadRel.Types.LocalFiles();
            if (readTypeCase_ == ReadTypeOneofCase.LocalFiles) {
              subBuilder.MergeFrom(LocalFiles);
            }
            input.ReadMessage(subBuilder);
            LocalFiles = subBuilder;
            break;
          }
          case 58: {
            global::Substrait.Protobuf.ReadRel.Types.NamedTable subBuilder = new global::Substrait.Protobuf.ReadRel.Types.NamedTable();
            if (readTypeCase_ == ReadTypeOneofCase.NamedTable) {
              subBuilder.MergeFrom(NamedTable);
            }
            input.ReadMessage(subBuilder);
            NamedTable = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Substrait.Protobuf.RelCommon();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (baseSchema_ == null) {
              BaseSchema = new global::Substrait.Protobuf.Type.Types.NamedStruct();
            }
            input.ReadMessage(BaseSchema);
            break;
          }
          case 26: {
            if (filter_ == null) {
              Filter = new global::Substrait.Protobuf.Expression();
            }
            input.ReadMessage(Filter);
            break;
          }
          case 34: {
            if (projection_ == null) {
              Projection = new global::Substrait.Protobuf.MaskExpression();
            }
            input.ReadMessage(Projection);
            break;
          }
          case 42: {
            global::Substrait.Protobuf.ReadRel.Types.VirtualTable subBuilder = new global::Substrait.Protobuf.ReadRel.Types.VirtualTable();
            if (readTypeCase_ == ReadTypeOneofCase.VirtualTable) {
              subBuilder.MergeFrom(VirtualTable);
            }
            input.ReadMessage(subBuilder);
            VirtualTable = subBuilder;
            break;
          }
          case 50: {
            global::Substrait.Protobuf.ReadRel.Types.LocalFiles subBuilder = new global::Substrait.Protobuf.ReadRel.Types.LocalFiles();
            if (readTypeCase_ == ReadTypeOneofCase.LocalFiles) {
              subBuilder.MergeFrom(LocalFiles);
            }
            input.ReadMessage(subBuilder);
            LocalFiles = subBuilder;
            break;
          }
          case 58: {
            global::Substrait.Protobuf.ReadRel.Types.NamedTable subBuilder = new global::Substrait.Protobuf.ReadRel.Types.NamedTable();
            if (readTypeCase_ == ReadTypeOneofCase.NamedTable) {
              subBuilder.MergeFrom(NamedTable);
            }
            input.ReadMessage(subBuilder);
            NamedTable = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the ReadRel message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class NamedTable : pb::IMessage<NamedTable>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<NamedTable> _parser = new pb::MessageParser<NamedTable>(() => new NamedTable());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NamedTable> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.ReadRel.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NamedTable() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NamedTable(NamedTable other) : this() {
          names_ = other.names_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NamedTable Clone() {
          return new NamedTable(this);
        }

        /// <summary>Field number for the "names" field.</summary>
        public const int NamesFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_names_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> names_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Names {
          get { return names_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as NamedTable);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NamedTable other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!names_.Equals(other.names_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= names_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          names_.WriteTo(output, _repeated_names_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          names_.WriteTo(ref output, _repeated_names_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += names_.CalculateSize(_repeated_names_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NamedTable other) {
          if (other == null) {
            return;
          }
          names_.Add(other.names_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                names_.AddEntriesFrom(input, _repeated_names_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                names_.AddEntriesFrom(ref input, _repeated_names_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class VirtualTable : pb::IMessage<VirtualTable>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<VirtualTable> _parser = new pb::MessageParser<VirtualTable>(() => new VirtualTable());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<VirtualTable> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.ReadRel.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VirtualTable() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VirtualTable(VirtualTable other) : this() {
          values_ = other.values_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VirtualTable Clone() {
          return new VirtualTable(this);
        }

        /// <summary>Field number for the "values" field.</summary>
        public const int ValuesFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Substrait.Protobuf.Expression.Types.Literal.Types.Struct> _repeated_values_codec
            = pb::FieldCodec.ForMessage(10, global::Substrait.Protobuf.Expression.Types.Literal.Types.Struct.Parser);
        private readonly pbc::RepeatedField<global::Substrait.Protobuf.Expression.Types.Literal.Types.Struct> values_ = new pbc::RepeatedField<global::Substrait.Protobuf.Expression.Types.Literal.Types.Struct>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Substrait.Protobuf.Expression.Types.Literal.Types.Struct> Values {
          get { return values_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as VirtualTable);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(VirtualTable other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!values_.Equals(other.values_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= values_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          values_.WriteTo(output, _repeated_values_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          values_.WriteTo(ref output, _repeated_values_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += values_.CalculateSize(_repeated_values_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(VirtualTable other) {
          if (other == null) {
            return;
          }
          values_.Add(other.values_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                values_.AddEntriesFrom(input, _repeated_values_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                values_.AddEntriesFrom(ref input, _repeated_values_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class LocalFiles : pb::IMessage<LocalFiles>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<LocalFiles> _parser = new pb::MessageParser<LocalFiles>(() => new LocalFiles());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<LocalFiles> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.ReadRel.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LocalFiles() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LocalFiles(LocalFiles other) : this() {
          items_ = other.items_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public LocalFiles Clone() {
          return new LocalFiles(this);
        }

        /// <summary>Field number for the "items" field.</summary>
        public const int ItemsFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Substrait.Protobuf.ReadRel.Types.LocalFiles.Types.FileOrFiles> _repeated_items_codec
            = pb::FieldCodec.ForMessage(10, global::Substrait.Protobuf.ReadRel.Types.LocalFiles.Types.FileOrFiles.Parser);
        private readonly pbc::RepeatedField<global::Substrait.Protobuf.ReadRel.Types.LocalFiles.Types.FileOrFiles> items_ = new pbc::RepeatedField<global::Substrait.Protobuf.ReadRel.Types.LocalFiles.Types.FileOrFiles>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Substrait.Protobuf.ReadRel.Types.LocalFiles.Types.FileOrFiles> Items {
          get { return items_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as LocalFiles);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(LocalFiles other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!items_.Equals(other.items_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= items_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          items_.WriteTo(output, _repeated_items_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          items_.WriteTo(ref output, _repeated_items_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += items_.CalculateSize(_repeated_items_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(LocalFiles other) {
          if (other == null) {
            return;
          }
          items_.Add(other.items_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                items_.AddEntriesFrom(input, _repeated_items_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                items_.AddEntriesFrom(ref input, _repeated_items_codec);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the LocalFiles message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class FileOrFiles : pb::IMessage<FileOrFiles>
          #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              , pb::IBufferMessage
          #endif
          {
            private static readonly pb::MessageParser<FileOrFiles> _parser = new pb::MessageParser<FileOrFiles>(() => new FileOrFiles());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<FileOrFiles> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Substrait.Protobuf.ReadRel.Types.LocalFiles.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public FileOrFiles() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public FileOrFiles(FileOrFiles other) : this() {
              format_ = other.format_;
              switch (other.PathTypeCase) {
                case PathTypeOneofCase.UriPath:
                  UriPath = other.UriPath;
                  break;
                case PathTypeOneofCase.UriPathGlob:
                  UriPathGlob = other.UriPathGlob;
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public FileOrFiles Clone() {
              return new FileOrFiles(this);
            }

            /// <summary>Field number for the "uri_path" field.</summary>
            public const int UriPathFieldNumber = 1;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string UriPath {
              get { return pathTypeCase_ == PathTypeOneofCase.UriPath ? (string) pathType_ : ""; }
              set {
                pathType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                pathTypeCase_ = PathTypeOneofCase.UriPath;
              }
            }

            /// <summary>Field number for the "uri_path_glob" field.</summary>
            public const int UriPathGlobFieldNumber = 2;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string UriPathGlob {
              get { return pathTypeCase_ == PathTypeOneofCase.UriPathGlob ? (string) pathType_ : ""; }
              set {
                pathType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                pathTypeCase_ = PathTypeOneofCase.UriPathGlob;
              }
            }

            /// <summary>Field number for the "format" field.</summary>
            public const int FormatFieldNumber = 3;
            private global::Substrait.Protobuf.ReadRel.Types.LocalFiles.Types.FileOrFiles.Types.Format format_ = global::Substrait.Protobuf.ReadRel.Types.LocalFiles.Types.FileOrFiles.Types.Format.Unknown;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Substrait.Protobuf.ReadRel.Types.LocalFiles.Types.FileOrFiles.Types.Format Format {
              get { return format_; }
              set {
                format_ = value;
              }
            }

            private object pathType_;
            /// <summary>Enum of possible cases for the "path_type" oneof.</summary>
            public enum PathTypeOneofCase {
              None = 0,
              UriPath = 1,
              UriPathGlob = 2,
            }
            private PathTypeOneofCase pathTypeCase_ = PathTypeOneofCase.None;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PathTypeOneofCase PathTypeCase {
              get { return pathTypeCase_; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void ClearPathType() {
              pathTypeCase_ = PathTypeOneofCase.None;
              pathType_ = null;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as FileOrFiles);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(FileOrFiles other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (UriPath != other.UriPath) return false;
              if (UriPathGlob != other.UriPathGlob) return false;
              if (Format != other.Format) return false;
              if (PathTypeCase != other.PathTypeCase) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (pathTypeCase_ == PathTypeOneofCase.UriPath) hash ^= UriPath.GetHashCode();
              if (pathTypeCase_ == PathTypeOneofCase.UriPathGlob) hash ^= UriPathGlob.GetHashCode();
              if (Format != global::Substrait.Protobuf.ReadRel.Types.LocalFiles.Types.FileOrFiles.Types.Format.Unknown) hash ^= Format.GetHashCode();
              hash ^= (int) pathTypeCase_;
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              output.WriteRawMessage(this);
            #else
              if (pathTypeCase_ == PathTypeOneofCase.UriPath) {
                output.WriteRawTag(10);
                output.WriteString(UriPath);
              }
              if (pathTypeCase_ == PathTypeOneofCase.UriPathGlob) {
                output.WriteRawTag(18);
                output.WriteString(UriPathGlob);
              }
              if (Format != global::Substrait.Protobuf.ReadRel.Types.LocalFiles.Types.FileOrFiles.Types.Format.Unknown) {
                output.WriteRawTag(24);
                output.WriteEnum((int) Format);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
              if (pathTypeCase_ == PathTypeOneofCase.UriPath) {
                output.WriteRawTag(10);
                output.WriteString(UriPath);
              }
              if (pathTypeCase_ == PathTypeOneofCase.UriPathGlob) {
                output.WriteRawTag(18);
                output.WriteString(UriPathGlob);
              }
              if (Format != global::Substrait.Protobuf.ReadRel.Types.LocalFiles.Types.FileOrFiles.Types.Format.Unknown) {
                output.WriteRawTag(24);
                output.WriteEnum((int) Format);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(ref output);
              }
            }
            #endif

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (pathTypeCase_ == PathTypeOneofCase.UriPath) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(UriPath);
              }
              if (pathTypeCase_ == PathTypeOneofCase.UriPathGlob) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(UriPathGlob);
              }
              if (Format != global::Substrait.Protobuf.ReadRel.Types.LocalFiles.Types.FileOrFiles.Types.Format.Unknown) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Format);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(FileOrFiles other) {
              if (other == null) {
                return;
              }
              if (other.Format != global::Substrait.Protobuf.ReadRel.Types.LocalFiles.Types.FileOrFiles.Types.Format.Unknown) {
                Format = other.Format;
              }
              switch (other.PathTypeCase) {
                case PathTypeOneofCase.UriPath:
                  UriPath = other.UriPath;
                  break;
                case PathTypeOneofCase.UriPathGlob:
                  UriPathGlob = other.UriPathGlob;
                  break;
              }

              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
              input.ReadRawMessage(this);
            #else
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 10: {
                    UriPath = input.ReadString();
                    break;
                  }
                  case 18: {
                    UriPathGlob = input.ReadString();
                    break;
                  }
                  case 24: {
                    Format = (global::Substrait.Protobuf.ReadRel.Types.LocalFiles.Types.FileOrFiles.Types.Format) input.ReadEnum();
                    break;
                  }
                }
              }
            #endif
            }

            #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                    break;
                  case 10: {
                    UriPath = input.ReadString();
                    break;
                  }
                  case 18: {
                    UriPathGlob = input.ReadString();
                    break;
                  }
                  case 24: {
                    Format = (global::Substrait.Protobuf.ReadRel.Types.LocalFiles.Types.FileOrFiles.Types.Format) input.ReadEnum();
                    break;
                  }
                }
              }
            }
            #endif

            #region Nested types
            /// <summary>Container for nested types declared in the FileOrFiles message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public enum Format {
                [pbr::OriginalName("UNKNOWN")] Unknown = 0,
                [pbr::OriginalName("PARQUET")] Parquet = 1,
              }

            }
            #endregion

          }

        }
        #endregion

      }

    }
    #endregion

  }

  public sealed partial class ProjectRel : pb::IMessage<ProjectRel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProjectRel> _parser = new pb::MessageParser<ProjectRel>(() => new ProjectRel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProjectRel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Substrait.Protobuf.RelationsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProjectRel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProjectRel(ProjectRel other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      input_ = other.input_ != null ? other.input_.Clone() : null;
      expressions_ = other.expressions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProjectRel Clone() {
      return new ProjectRel(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Substrait.Protobuf.RelCommon common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.RelCommon Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 2;
    private global::Substrait.Protobuf.Rel input_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Rel Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    /// <summary>Field number for the "expressions" field.</summary>
    public const int ExpressionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Substrait.Protobuf.Expression> _repeated_expressions_codec
        = pb::FieldCodec.ForMessage(26, global::Substrait.Protobuf.Expression.Parser);
    private readonly pbc::RepeatedField<global::Substrait.Protobuf.Expression> expressions_ = new pbc::RepeatedField<global::Substrait.Protobuf.Expression>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Substrait.Protobuf.Expression> Expressions {
      get { return expressions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProjectRel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProjectRel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Input, other.Input)) return false;
      if(!expressions_.Equals(other.expressions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (input_ != null) hash ^= Input.GetHashCode();
      hash ^= expressions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (input_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Input);
      }
      expressions_.WriteTo(output, _repeated_expressions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (input_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Input);
      }
      expressions_.WriteTo(ref output, _repeated_expressions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (input_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      size += expressions_.CalculateSize(_repeated_expressions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProjectRel other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Substrait.Protobuf.RelCommon();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.input_ != null) {
        if (input_ == null) {
          Input = new global::Substrait.Protobuf.Rel();
        }
        Input.MergeFrom(other.Input);
      }
      expressions_.Add(other.expressions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Substrait.Protobuf.RelCommon();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (input_ == null) {
              Input = new global::Substrait.Protobuf.Rel();
            }
            input.ReadMessage(Input);
            break;
          }
          case 26: {
            expressions_.AddEntriesFrom(input, _repeated_expressions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Substrait.Protobuf.RelCommon();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (input_ == null) {
              Input = new global::Substrait.Protobuf.Rel();
            }
            input.ReadMessage(Input);
            break;
          }
          case 26: {
            expressions_.AddEntriesFrom(ref input, _repeated_expressions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class JoinRel : pb::IMessage<JoinRel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<JoinRel> _parser = new pb::MessageParser<JoinRel>(() => new JoinRel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinRel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Substrait.Protobuf.RelationsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRel(JoinRel other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      left_ = other.left_ != null ? other.left_.Clone() : null;
      right_ = other.right_ != null ? other.right_.Clone() : null;
      expression_ = other.expression_ != null ? other.expression_.Clone() : null;
      postJoinFilter_ = other.postJoinFilter_ != null ? other.postJoinFilter_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinRel Clone() {
      return new JoinRel(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Substrait.Protobuf.RelCommon common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.RelCommon Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "left" field.</summary>
    public const int LeftFieldNumber = 2;
    private global::Substrait.Protobuf.Rel left_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Rel Left {
      get { return left_; }
      set {
        left_ = value;
      }
    }

    /// <summary>Field number for the "right" field.</summary>
    public const int RightFieldNumber = 3;
    private global::Substrait.Protobuf.Rel right_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Rel Right {
      get { return right_; }
      set {
        right_ = value;
      }
    }

    /// <summary>Field number for the "expression" field.</summary>
    public const int ExpressionFieldNumber = 4;
    private global::Substrait.Protobuf.Expression expression_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Expression Expression {
      get { return expression_; }
      set {
        expression_ = value;
      }
    }

    /// <summary>Field number for the "post_join_filter" field.</summary>
    public const int PostJoinFilterFieldNumber = 5;
    private global::Substrait.Protobuf.Expression postJoinFilter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Expression PostJoinFilter {
      get { return postJoinFilter_; }
      set {
        postJoinFilter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinRel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinRel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Left, other.Left)) return false;
      if (!object.Equals(Right, other.Right)) return false;
      if (!object.Equals(Expression, other.Expression)) return false;
      if (!object.Equals(PostJoinFilter, other.PostJoinFilter)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (left_ != null) hash ^= Left.GetHashCode();
      if (right_ != null) hash ^= Right.GetHashCode();
      if (expression_ != null) hash ^= Expression.GetHashCode();
      if (postJoinFilter_ != null) hash ^= PostJoinFilter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (left_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Left);
      }
      if (right_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Right);
      }
      if (expression_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Expression);
      }
      if (postJoinFilter_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PostJoinFilter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (left_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Left);
      }
      if (right_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Right);
      }
      if (expression_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Expression);
      }
      if (postJoinFilter_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PostJoinFilter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (left_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Left);
      }
      if (right_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Right);
      }
      if (expression_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Expression);
      }
      if (postJoinFilter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostJoinFilter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinRel other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Substrait.Protobuf.RelCommon();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.left_ != null) {
        if (left_ == null) {
          Left = new global::Substrait.Protobuf.Rel();
        }
        Left.MergeFrom(other.Left);
      }
      if (other.right_ != null) {
        if (right_ == null) {
          Right = new global::Substrait.Protobuf.Rel();
        }
        Right.MergeFrom(other.Right);
      }
      if (other.expression_ != null) {
        if (expression_ == null) {
          Expression = new global::Substrait.Protobuf.Expression();
        }
        Expression.MergeFrom(other.Expression);
      }
      if (other.postJoinFilter_ != null) {
        if (postJoinFilter_ == null) {
          PostJoinFilter = new global::Substrait.Protobuf.Expression();
        }
        PostJoinFilter.MergeFrom(other.PostJoinFilter);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Substrait.Protobuf.RelCommon();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (left_ == null) {
              Left = new global::Substrait.Protobuf.Rel();
            }
            input.ReadMessage(Left);
            break;
          }
          case 26: {
            if (right_ == null) {
              Right = new global::Substrait.Protobuf.Rel();
            }
            input.ReadMessage(Right);
            break;
          }
          case 34: {
            if (expression_ == null) {
              Expression = new global::Substrait.Protobuf.Expression();
            }
            input.ReadMessage(Expression);
            break;
          }
          case 42: {
            if (postJoinFilter_ == null) {
              PostJoinFilter = new global::Substrait.Protobuf.Expression();
            }
            input.ReadMessage(PostJoinFilter);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Substrait.Protobuf.RelCommon();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (left_ == null) {
              Left = new global::Substrait.Protobuf.Rel();
            }
            input.ReadMessage(Left);
            break;
          }
          case 26: {
            if (right_ == null) {
              Right = new global::Substrait.Protobuf.Rel();
            }
            input.ReadMessage(Right);
            break;
          }
          case 34: {
            if (expression_ == null) {
              Expression = new global::Substrait.Protobuf.Expression();
            }
            input.ReadMessage(Expression);
            break;
          }
          case 42: {
            if (postJoinFilter_ == null) {
              PostJoinFilter = new global::Substrait.Protobuf.Expression();
            }
            input.ReadMessage(PostJoinFilter);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the JoinRel message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum JoinType {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("INNER")] Inner = 1,
        [pbr::OriginalName("OUTER")] Outer = 2,
        [pbr::OriginalName("LEFT")] Left = 3,
        [pbr::OriginalName("RIGHT")] Right = 4,
      }

    }
    #endregion

  }

  public sealed partial class FetchRel : pb::IMessage<FetchRel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FetchRel> _parser = new pb::MessageParser<FetchRel>(() => new FetchRel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FetchRel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Substrait.Protobuf.RelationsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchRel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchRel(FetchRel other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      input_ = other.input_ != null ? other.input_.Clone() : null;
      offset_ = other.offset_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FetchRel Clone() {
      return new FetchRel(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Substrait.Protobuf.RelCommon common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.RelCommon Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 2;
    private global::Substrait.Protobuf.Rel input_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Rel Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    /// <summary>Field number for the "offset" field.</summary>
    public const int OffsetFieldNumber = 3;
    private long offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 4;
    private long count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FetchRel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FetchRel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Input, other.Input)) return false;
      if (Offset != other.Offset) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (input_ != null) hash ^= Input.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (Count != 0L) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (input_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Input);
      }
      if (Offset != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Offset);
      }
      if (Count != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (input_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Input);
      }
      if (Offset != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Offset);
      }
      if (Count != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (input_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (Count != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FetchRel other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Substrait.Protobuf.RelCommon();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.input_ != null) {
        if (input_ == null) {
          Input = new global::Substrait.Protobuf.Rel();
        }
        Input.MergeFrom(other.Input);
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      if (other.Count != 0L) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Substrait.Protobuf.RelCommon();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (input_ == null) {
              Input = new global::Substrait.Protobuf.Rel();
            }
            input.ReadMessage(Input);
            break;
          }
          case 24: {
            Offset = input.ReadInt64();
            break;
          }
          case 32: {
            Count = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Substrait.Protobuf.RelCommon();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (input_ == null) {
              Input = new global::Substrait.Protobuf.Rel();
            }
            input.ReadMessage(Input);
            break;
          }
          case 24: {
            Offset = input.ReadInt64();
            break;
          }
          case 32: {
            Count = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AggregateRel : pb::IMessage<AggregateRel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AggregateRel> _parser = new pb::MessageParser<AggregateRel>(() => new AggregateRel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AggregateRel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Substrait.Protobuf.RelationsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggregateRel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggregateRel(AggregateRel other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      input_ = other.input_ != null ? other.input_.Clone() : null;
      groupings_ = other.groupings_.Clone();
      measures_ = other.measures_.Clone();
      phase_ = other.phase_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AggregateRel Clone() {
      return new AggregateRel(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Substrait.Protobuf.RelCommon common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.RelCommon Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 2;
    private global::Substrait.Protobuf.Rel input_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Rel Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    /// <summary>Field number for the "groupings" field.</summary>
    public const int GroupingsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Substrait.Protobuf.AggregateRel.Types.Grouping> _repeated_groupings_codec
        = pb::FieldCodec.ForMessage(26, global::Substrait.Protobuf.AggregateRel.Types.Grouping.Parser);
    private readonly pbc::RepeatedField<global::Substrait.Protobuf.AggregateRel.Types.Grouping> groupings_ = new pbc::RepeatedField<global::Substrait.Protobuf.AggregateRel.Types.Grouping>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Substrait.Protobuf.AggregateRel.Types.Grouping> Groupings {
      get { return groupings_; }
    }

    /// <summary>Field number for the "measures" field.</summary>
    public const int MeasuresFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Substrait.Protobuf.AggregateRel.Types.Measure> _repeated_measures_codec
        = pb::FieldCodec.ForMessage(34, global::Substrait.Protobuf.AggregateRel.Types.Measure.Parser);
    private readonly pbc::RepeatedField<global::Substrait.Protobuf.AggregateRel.Types.Measure> measures_ = new pbc::RepeatedField<global::Substrait.Protobuf.AggregateRel.Types.Measure>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Substrait.Protobuf.AggregateRel.Types.Measure> Measures {
      get { return measures_; }
    }

    /// <summary>Field number for the "phase" field.</summary>
    public const int PhaseFieldNumber = 5;
    private global::Substrait.Protobuf.Expression.Types.AggregationPhase phase_ = global::Substrait.Protobuf.Expression.Types.AggregationPhase.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Expression.Types.AggregationPhase Phase {
      get { return phase_; }
      set {
        phase_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AggregateRel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AggregateRel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Input, other.Input)) return false;
      if(!groupings_.Equals(other.groupings_)) return false;
      if(!measures_.Equals(other.measures_)) return false;
      if (Phase != other.Phase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (input_ != null) hash ^= Input.GetHashCode();
      hash ^= groupings_.GetHashCode();
      hash ^= measures_.GetHashCode();
      if (Phase != global::Substrait.Protobuf.Expression.Types.AggregationPhase.Unknown) hash ^= Phase.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (input_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Input);
      }
      groupings_.WriteTo(output, _repeated_groupings_codec);
      measures_.WriteTo(output, _repeated_measures_codec);
      if (Phase != global::Substrait.Protobuf.Expression.Types.AggregationPhase.Unknown) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Phase);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (input_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Input);
      }
      groupings_.WriteTo(ref output, _repeated_groupings_codec);
      measures_.WriteTo(ref output, _repeated_measures_codec);
      if (Phase != global::Substrait.Protobuf.Expression.Types.AggregationPhase.Unknown) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Phase);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (input_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      size += groupings_.CalculateSize(_repeated_groupings_codec);
      size += measures_.CalculateSize(_repeated_measures_codec);
      if (Phase != global::Substrait.Protobuf.Expression.Types.AggregationPhase.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Phase);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AggregateRel other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Substrait.Protobuf.RelCommon();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.input_ != null) {
        if (input_ == null) {
          Input = new global::Substrait.Protobuf.Rel();
        }
        Input.MergeFrom(other.Input);
      }
      groupings_.Add(other.groupings_);
      measures_.Add(other.measures_);
      if (other.Phase != global::Substrait.Protobuf.Expression.Types.AggregationPhase.Unknown) {
        Phase = other.Phase;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Substrait.Protobuf.RelCommon();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (input_ == null) {
              Input = new global::Substrait.Protobuf.Rel();
            }
            input.ReadMessage(Input);
            break;
          }
          case 26: {
            groupings_.AddEntriesFrom(input, _repeated_groupings_codec);
            break;
          }
          case 34: {
            measures_.AddEntriesFrom(input, _repeated_measures_codec);
            break;
          }
          case 40: {
            Phase = (global::Substrait.Protobuf.Expression.Types.AggregationPhase) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Substrait.Protobuf.RelCommon();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (input_ == null) {
              Input = new global::Substrait.Protobuf.Rel();
            }
            input.ReadMessage(Input);
            break;
          }
          case 26: {
            groupings_.AddEntriesFrom(ref input, _repeated_groupings_codec);
            break;
          }
          case 34: {
            measures_.AddEntriesFrom(ref input, _repeated_measures_codec);
            break;
          }
          case 40: {
            Phase = (global::Substrait.Protobuf.Expression.Types.AggregationPhase) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AggregateRel message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Grouping : pb::IMessage<Grouping>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Grouping> _parser = new pb::MessageParser<Grouping>(() => new Grouping());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Grouping> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.AggregateRel.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Grouping() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Grouping(Grouping other) : this() {
          inputFields_ = other.inputFields_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Grouping Clone() {
          return new Grouping(this);
        }

        /// <summary>Field number for the "input_fields" field.</summary>
        public const int InputFieldsFieldNumber = 1;
        private static readonly pb::FieldCodec<int> _repeated_inputFields_codec
            = pb::FieldCodec.ForInt32(10);
        private readonly pbc::RepeatedField<int> inputFields_ = new pbc::RepeatedField<int>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int> InputFields {
          get { return inputFields_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Grouping);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Grouping other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!inputFields_.Equals(other.inputFields_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= inputFields_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          inputFields_.WriteTo(output, _repeated_inputFields_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          inputFields_.WriteTo(ref output, _repeated_inputFields_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += inputFields_.CalculateSize(_repeated_inputFields_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Grouping other) {
          if (other == null) {
            return;
          }
          inputFields_.Add(other.inputFields_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10:
              case 8: {
                inputFields_.AddEntriesFrom(input, _repeated_inputFields_codec);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10:
              case 8: {
                inputFields_.AddEntriesFrom(ref input, _repeated_inputFields_codec);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Measure : pb::IMessage<Measure>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Measure> _parser = new pb::MessageParser<Measure>(() => new Measure());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Measure> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.AggregateRel.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Measure() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Measure(Measure other) : this() {
          measure_ = other.measure_ != null ? other.measure_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Measure Clone() {
          return new Measure(this);
        }

        /// <summary>Field number for the "measure" field.</summary>
        public const int Measure_FieldNumber = 1;
        private global::Substrait.Protobuf.Expression.Types.AggregateFunction measure_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Expression.Types.AggregateFunction Measure_ {
          get { return measure_; }
          set {
            measure_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Measure);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Measure other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Measure_, other.Measure_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (measure_ != null) hash ^= Measure_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (measure_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Measure_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (measure_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Measure_);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (measure_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Measure_);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Measure other) {
          if (other == null) {
            return;
          }
          if (other.measure_ != null) {
            if (measure_ == null) {
              Measure_ = new global::Substrait.Protobuf.Expression.Types.AggregateFunction();
            }
            Measure_.MergeFrom(other.Measure_);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (measure_ == null) {
                  Measure_ = new global::Substrait.Protobuf.Expression.Types.AggregateFunction();
                }
                input.ReadMessage(Measure_);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (measure_ == null) {
                  Measure_ = new global::Substrait.Protobuf.Expression.Types.AggregateFunction();
                }
                input.ReadMessage(Measure_);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class SortRel : pb::IMessage<SortRel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SortRel> _parser = new pb::MessageParser<SortRel>(() => new SortRel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SortRel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Substrait.Protobuf.RelationsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SortRel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SortRel(SortRel other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      input_ = other.input_ != null ? other.input_.Clone() : null;
      sorts_ = other.sorts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SortRel Clone() {
      return new SortRel(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Substrait.Protobuf.RelCommon common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.RelCommon Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 2;
    private global::Substrait.Protobuf.Rel input_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Rel Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    /// <summary>Field number for the "sorts" field.</summary>
    public const int SortsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Substrait.Protobuf.Expression.Types.SortField> _repeated_sorts_codec
        = pb::FieldCodec.ForMessage(26, global::Substrait.Protobuf.Expression.Types.SortField.Parser);
    private readonly pbc::RepeatedField<global::Substrait.Protobuf.Expression.Types.SortField> sorts_ = new pbc::RepeatedField<global::Substrait.Protobuf.Expression.Types.SortField>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Substrait.Protobuf.Expression.Types.SortField> Sorts {
      get { return sorts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SortRel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SortRel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Input, other.Input)) return false;
      if(!sorts_.Equals(other.sorts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (input_ != null) hash ^= Input.GetHashCode();
      hash ^= sorts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (input_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Input);
      }
      sorts_.WriteTo(output, _repeated_sorts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (input_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Input);
      }
      sorts_.WriteTo(ref output, _repeated_sorts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (input_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      size += sorts_.CalculateSize(_repeated_sorts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SortRel other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Substrait.Protobuf.RelCommon();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.input_ != null) {
        if (input_ == null) {
          Input = new global::Substrait.Protobuf.Rel();
        }
        Input.MergeFrom(other.Input);
      }
      sorts_.Add(other.sorts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Substrait.Protobuf.RelCommon();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (input_ == null) {
              Input = new global::Substrait.Protobuf.Rel();
            }
            input.ReadMessage(Input);
            break;
          }
          case 26: {
            sorts_.AddEntriesFrom(input, _repeated_sorts_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Substrait.Protobuf.RelCommon();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (input_ == null) {
              Input = new global::Substrait.Protobuf.Rel();
            }
            input.ReadMessage(Input);
            break;
          }
          case 26: {
            sorts_.AddEntriesFrom(ref input, _repeated_sorts_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FilterRel : pb::IMessage<FilterRel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FilterRel> _parser = new pb::MessageParser<FilterRel>(() => new FilterRel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FilterRel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Substrait.Protobuf.RelationsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterRel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterRel(FilterRel other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      input_ = other.input_ != null ? other.input_.Clone() : null;
      condition_ = other.condition_ != null ? other.condition_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FilterRel Clone() {
      return new FilterRel(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Substrait.Protobuf.RelCommon common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.RelCommon Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 2;
    private global::Substrait.Protobuf.Rel input_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Rel Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    /// <summary>Field number for the "condition" field.</summary>
    public const int ConditionFieldNumber = 3;
    private global::Substrait.Protobuf.Expression condition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Expression Condition {
      get { return condition_; }
      set {
        condition_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FilterRel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FilterRel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if (!object.Equals(Input, other.Input)) return false;
      if (!object.Equals(Condition, other.Condition)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      if (input_ != null) hash ^= Input.GetHashCode();
      if (condition_ != null) hash ^= Condition.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (input_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Input);
      }
      if (condition_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Condition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      if (input_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Input);
      }
      if (condition_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Condition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      if (input_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      if (condition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Condition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FilterRel other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Substrait.Protobuf.RelCommon();
        }
        Common.MergeFrom(other.Common);
      }
      if (other.input_ != null) {
        if (input_ == null) {
          Input = new global::Substrait.Protobuf.Rel();
        }
        Input.MergeFrom(other.Input);
      }
      if (other.condition_ != null) {
        if (condition_ == null) {
          Condition = new global::Substrait.Protobuf.Expression();
        }
        Condition.MergeFrom(other.Condition);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Substrait.Protobuf.RelCommon();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (input_ == null) {
              Input = new global::Substrait.Protobuf.Rel();
            }
            input.ReadMessage(Input);
            break;
          }
          case 26: {
            if (condition_ == null) {
              Condition = new global::Substrait.Protobuf.Expression();
            }
            input.ReadMessage(Condition);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Substrait.Protobuf.RelCommon();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            if (input_ == null) {
              Input = new global::Substrait.Protobuf.Rel();
            }
            input.ReadMessage(Input);
            break;
          }
          case 26: {
            if (condition_ == null) {
              Condition = new global::Substrait.Protobuf.Expression();
            }
            input.ReadMessage(Condition);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SetRel : pb::IMessage<SetRel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SetRel> _parser = new pb::MessageParser<SetRel>(() => new SetRel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetRel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Substrait.Protobuf.RelationsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetRel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetRel(SetRel other) : this() {
      common_ = other.common_ != null ? other.common_.Clone() : null;
      inputs_ = other.inputs_.Clone();
      op_ = other.op_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetRel Clone() {
      return new SetRel(this);
    }

    /// <summary>Field number for the "common" field.</summary>
    public const int CommonFieldNumber = 1;
    private global::Substrait.Protobuf.RelCommon common_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.RelCommon Common {
      get { return common_; }
      set {
        common_ = value;
      }
    }

    /// <summary>Field number for the "inputs" field.</summary>
    public const int InputsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Substrait.Protobuf.Rel> _repeated_inputs_codec
        = pb::FieldCodec.ForMessage(18, global::Substrait.Protobuf.Rel.Parser);
    private readonly pbc::RepeatedField<global::Substrait.Protobuf.Rel> inputs_ = new pbc::RepeatedField<global::Substrait.Protobuf.Rel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Substrait.Protobuf.Rel> Inputs {
      get { return inputs_; }
    }

    /// <summary>Field number for the "op" field.</summary>
    public const int OpFieldNumber = 3;
    private global::Substrait.Protobuf.SetRel.Types.SetOp op_ = global::Substrait.Protobuf.SetRel.Types.SetOp.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.SetRel.Types.SetOp Op {
      get { return op_; }
      set {
        op_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetRel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetRel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Common, other.Common)) return false;
      if(!inputs_.Equals(other.inputs_)) return false;
      if (Op != other.Op) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (common_ != null) hash ^= Common.GetHashCode();
      hash ^= inputs_.GetHashCode();
      if (Op != global::Substrait.Protobuf.SetRel.Types.SetOp.Unknown) hash ^= Op.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      inputs_.WriteTo(output, _repeated_inputs_codec);
      if (Op != global::Substrait.Protobuf.SetRel.Types.SetOp.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Op);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (common_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Common);
      }
      inputs_.WriteTo(ref output, _repeated_inputs_codec);
      if (Op != global::Substrait.Protobuf.SetRel.Types.SetOp.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Op);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (common_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Common);
      }
      size += inputs_.CalculateSize(_repeated_inputs_codec);
      if (Op != global::Substrait.Protobuf.SetRel.Types.SetOp.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Op);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetRel other) {
      if (other == null) {
        return;
      }
      if (other.common_ != null) {
        if (common_ == null) {
          Common = new global::Substrait.Protobuf.RelCommon();
        }
        Common.MergeFrom(other.Common);
      }
      inputs_.Add(other.inputs_);
      if (other.Op != global::Substrait.Protobuf.SetRel.Types.SetOp.Unknown) {
        Op = other.Op;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Substrait.Protobuf.RelCommon();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            inputs_.AddEntriesFrom(input, _repeated_inputs_codec);
            break;
          }
          case 24: {
            Op = (global::Substrait.Protobuf.SetRel.Types.SetOp) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (common_ == null) {
              Common = new global::Substrait.Protobuf.RelCommon();
            }
            input.ReadMessage(Common);
            break;
          }
          case 18: {
            inputs_.AddEntriesFrom(ref input, _repeated_inputs_codec);
            break;
          }
          case 24: {
            Op = (global::Substrait.Protobuf.SetRel.Types.SetOp) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the SetRel message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum SetOp {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("MINUS_PRIMARY")] MinusPrimary = 1,
        [pbr::OriginalName("MINUS_MULTISET")] MinusMultiset = 2,
        [pbr::OriginalName("INTERSECTION_PRIMARY")] IntersectionPrimary = 3,
        [pbr::OriginalName("INTERSECTION_MULTISET")] IntersectionMultiset = 4,
        [pbr::OriginalName("UNION_DISTINCT")] UnionDistinct = 5,
        [pbr::OriginalName("UNION_ALL")] UnionAll = 6,
      }

    }
    #endregion

  }

  public sealed partial class Rel : pb::IMessage<Rel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Rel> _parser = new pb::MessageParser<Rel>(() => new Rel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Rel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Substrait.Protobuf.RelationsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rel(Rel other) : this() {
      switch (other.RelTypeCase) {
        case RelTypeOneofCase.Read:
          Read = other.Read.Clone();
          break;
        case RelTypeOneofCase.Filter:
          Filter = other.Filter.Clone();
          break;
        case RelTypeOneofCase.Fetch:
          Fetch = other.Fetch.Clone();
          break;
        case RelTypeOneofCase.Aggregate:
          Aggregate = other.Aggregate.Clone();
          break;
        case RelTypeOneofCase.Sort:
          Sort = other.Sort.Clone();
          break;
        case RelTypeOneofCase.Join:
          Join = other.Join.Clone();
          break;
        case RelTypeOneofCase.Project:
          Project = other.Project.Clone();
          break;
        case RelTypeOneofCase.Set:
          Set = other.Set.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rel Clone() {
      return new Rel(this);
    }

    /// <summary>Field number for the "read" field.</summary>
    public const int ReadFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.ReadRel Read {
      get { return relTypeCase_ == RelTypeOneofCase.Read ? (global::Substrait.Protobuf.ReadRel) relType_ : null; }
      set {
        relType_ = value;
        relTypeCase_ = value == null ? RelTypeOneofCase.None : RelTypeOneofCase.Read;
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.FilterRel Filter {
      get { return relTypeCase_ == RelTypeOneofCase.Filter ? (global::Substrait.Protobuf.FilterRel) relType_ : null; }
      set {
        relType_ = value;
        relTypeCase_ = value == null ? RelTypeOneofCase.None : RelTypeOneofCase.Filter;
      }
    }

    /// <summary>Field number for the "fetch" field.</summary>
    public const int FetchFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.FetchRel Fetch {
      get { return relTypeCase_ == RelTypeOneofCase.Fetch ? (global::Substrait.Protobuf.FetchRel) relType_ : null; }
      set {
        relType_ = value;
        relTypeCase_ = value == null ? RelTypeOneofCase.None : RelTypeOneofCase.Fetch;
      }
    }

    /// <summary>Field number for the "aggregate" field.</summary>
    public const int AggregateFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.AggregateRel Aggregate {
      get { return relTypeCase_ == RelTypeOneofCase.Aggregate ? (global::Substrait.Protobuf.AggregateRel) relType_ : null; }
      set {
        relType_ = value;
        relTypeCase_ = value == null ? RelTypeOneofCase.None : RelTypeOneofCase.Aggregate;
      }
    }

    /// <summary>Field number for the "sort" field.</summary>
    public const int SortFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.SortRel Sort {
      get { return relTypeCase_ == RelTypeOneofCase.Sort ? (global::Substrait.Protobuf.SortRel) relType_ : null; }
      set {
        relType_ = value;
        relTypeCase_ = value == null ? RelTypeOneofCase.None : RelTypeOneofCase.Sort;
      }
    }

    /// <summary>Field number for the "join" field.</summary>
    public const int JoinFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.JoinRel Join {
      get { return relTypeCase_ == RelTypeOneofCase.Join ? (global::Substrait.Protobuf.JoinRel) relType_ : null; }
      set {
        relType_ = value;
        relTypeCase_ = value == null ? RelTypeOneofCase.None : RelTypeOneofCase.Join;
      }
    }

    /// <summary>Field number for the "project" field.</summary>
    public const int ProjectFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.ProjectRel Project {
      get { return relTypeCase_ == RelTypeOneofCase.Project ? (global::Substrait.Protobuf.ProjectRel) relType_ : null; }
      set {
        relType_ = value;
        relTypeCase_ = value == null ? RelTypeOneofCase.None : RelTypeOneofCase.Project;
      }
    }

    /// <summary>Field number for the "set" field.</summary>
    public const int SetFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.SetRel Set {
      get { return relTypeCase_ == RelTypeOneofCase.Set ? (global::Substrait.Protobuf.SetRel) relType_ : null; }
      set {
        relType_ = value;
        relTypeCase_ = value == null ? RelTypeOneofCase.None : RelTypeOneofCase.Set;
      }
    }

    private object relType_;
    /// <summary>Enum of possible cases for the "RelType" oneof.</summary>
    public enum RelTypeOneofCase {
      None = 0,
      Read = 1,
      Filter = 2,
      Fetch = 3,
      Aggregate = 4,
      Sort = 5,
      Join = 6,
      Project = 7,
      Set = 8,
    }
    private RelTypeOneofCase relTypeCase_ = RelTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RelTypeOneofCase RelTypeCase {
      get { return relTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRelType() {
      relTypeCase_ = RelTypeOneofCase.None;
      relType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Rel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Rel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Read, other.Read)) return false;
      if (!object.Equals(Filter, other.Filter)) return false;
      if (!object.Equals(Fetch, other.Fetch)) return false;
      if (!object.Equals(Aggregate, other.Aggregate)) return false;
      if (!object.Equals(Sort, other.Sort)) return false;
      if (!object.Equals(Join, other.Join)) return false;
      if (!object.Equals(Project, other.Project)) return false;
      if (!object.Equals(Set, other.Set)) return false;
      if (RelTypeCase != other.RelTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (relTypeCase_ == RelTypeOneofCase.Read) hash ^= Read.GetHashCode();
      if (relTypeCase_ == RelTypeOneofCase.Filter) hash ^= Filter.GetHashCode();
      if (relTypeCase_ == RelTypeOneofCase.Fetch) hash ^= Fetch.GetHashCode();
      if (relTypeCase_ == RelTypeOneofCase.Aggregate) hash ^= Aggregate.GetHashCode();
      if (relTypeCase_ == RelTypeOneofCase.Sort) hash ^= Sort.GetHashCode();
      if (relTypeCase_ == RelTypeOneofCase.Join) hash ^= Join.GetHashCode();
      if (relTypeCase_ == RelTypeOneofCase.Project) hash ^= Project.GetHashCode();
      if (relTypeCase_ == RelTypeOneofCase.Set) hash ^= Set.GetHashCode();
      hash ^= (int) relTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (relTypeCase_ == RelTypeOneofCase.Read) {
        output.WriteRawTag(10);
        output.WriteMessage(Read);
      }
      if (relTypeCase_ == RelTypeOneofCase.Filter) {
        output.WriteRawTag(18);
        output.WriteMessage(Filter);
      }
      if (relTypeCase_ == RelTypeOneofCase.Fetch) {
        output.WriteRawTag(26);
        output.WriteMessage(Fetch);
      }
      if (relTypeCase_ == RelTypeOneofCase.Aggregate) {
        output.WriteRawTag(34);
        output.WriteMessage(Aggregate);
      }
      if (relTypeCase_ == RelTypeOneofCase.Sort) {
        output.WriteRawTag(42);
        output.WriteMessage(Sort);
      }
      if (relTypeCase_ == RelTypeOneofCase.Join) {
        output.WriteRawTag(50);
        output.WriteMessage(Join);
      }
      if (relTypeCase_ == RelTypeOneofCase.Project) {
        output.WriteRawTag(58);
        output.WriteMessage(Project);
      }
      if (relTypeCase_ == RelTypeOneofCase.Set) {
        output.WriteRawTag(66);
        output.WriteMessage(Set);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (relTypeCase_ == RelTypeOneofCase.Read) {
        output.WriteRawTag(10);
        output.WriteMessage(Read);
      }
      if (relTypeCase_ == RelTypeOneofCase.Filter) {
        output.WriteRawTag(18);
        output.WriteMessage(Filter);
      }
      if (relTypeCase_ == RelTypeOneofCase.Fetch) {
        output.WriteRawTag(26);
        output.WriteMessage(Fetch);
      }
      if (relTypeCase_ == RelTypeOneofCase.Aggregate) {
        output.WriteRawTag(34);
        output.WriteMessage(Aggregate);
      }
      if (relTypeCase_ == RelTypeOneofCase.Sort) {
        output.WriteRawTag(42);
        output.WriteMessage(Sort);
      }
      if (relTypeCase_ == RelTypeOneofCase.Join) {
        output.WriteRawTag(50);
        output.WriteMessage(Join);
      }
      if (relTypeCase_ == RelTypeOneofCase.Project) {
        output.WriteRawTag(58);
        output.WriteMessage(Project);
      }
      if (relTypeCase_ == RelTypeOneofCase.Set) {
        output.WriteRawTag(66);
        output.WriteMessage(Set);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (relTypeCase_ == RelTypeOneofCase.Read) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Read);
      }
      if (relTypeCase_ == RelTypeOneofCase.Filter) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Filter);
      }
      if (relTypeCase_ == RelTypeOneofCase.Fetch) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fetch);
      }
      if (relTypeCase_ == RelTypeOneofCase.Aggregate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Aggregate);
      }
      if (relTypeCase_ == RelTypeOneofCase.Sort) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sort);
      }
      if (relTypeCase_ == RelTypeOneofCase.Join) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Join);
      }
      if (relTypeCase_ == RelTypeOneofCase.Project) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Project);
      }
      if (relTypeCase_ == RelTypeOneofCase.Set) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Set);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Rel other) {
      if (other == null) {
        return;
      }
      switch (other.RelTypeCase) {
        case RelTypeOneofCase.Read:
          if (Read == null) {
            Read = new global::Substrait.Protobuf.ReadRel();
          }
          Read.MergeFrom(other.Read);
          break;
        case RelTypeOneofCase.Filter:
          if (Filter == null) {
            Filter = new global::Substrait.Protobuf.FilterRel();
          }
          Filter.MergeFrom(other.Filter);
          break;
        case RelTypeOneofCase.Fetch:
          if (Fetch == null) {
            Fetch = new global::Substrait.Protobuf.FetchRel();
          }
          Fetch.MergeFrom(other.Fetch);
          break;
        case RelTypeOneofCase.Aggregate:
          if (Aggregate == null) {
            Aggregate = new global::Substrait.Protobuf.AggregateRel();
          }
          Aggregate.MergeFrom(other.Aggregate);
          break;
        case RelTypeOneofCase.Sort:
          if (Sort == null) {
            Sort = new global::Substrait.Protobuf.SortRel();
          }
          Sort.MergeFrom(other.Sort);
          break;
        case RelTypeOneofCase.Join:
          if (Join == null) {
            Join = new global::Substrait.Protobuf.JoinRel();
          }
          Join.MergeFrom(other.Join);
          break;
        case RelTypeOneofCase.Project:
          if (Project == null) {
            Project = new global::Substrait.Protobuf.ProjectRel();
          }
          Project.MergeFrom(other.Project);
          break;
        case RelTypeOneofCase.Set:
          if (Set == null) {
            Set = new global::Substrait.Protobuf.SetRel();
          }
          Set.MergeFrom(other.Set);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Substrait.Protobuf.ReadRel subBuilder = new global::Substrait.Protobuf.ReadRel();
            if (relTypeCase_ == RelTypeOneofCase.Read) {
              subBuilder.MergeFrom(Read);
            }
            input.ReadMessage(subBuilder);
            Read = subBuilder;
            break;
          }
          case 18: {
            global::Substrait.Protobuf.FilterRel subBuilder = new global::Substrait.Protobuf.FilterRel();
            if (relTypeCase_ == RelTypeOneofCase.Filter) {
              subBuilder.MergeFrom(Filter);
            }
            input.ReadMessage(subBuilder);
            Filter = subBuilder;
            break;
          }
          case 26: {
            global::Substrait.Protobuf.FetchRel subBuilder = new global::Substrait.Protobuf.FetchRel();
            if (relTypeCase_ == RelTypeOneofCase.Fetch) {
              subBuilder.MergeFrom(Fetch);
            }
            input.ReadMessage(subBuilder);
            Fetch = subBuilder;
            break;
          }
          case 34: {
            global::Substrait.Protobuf.AggregateRel subBuilder = new global::Substrait.Protobuf.AggregateRel();
            if (relTypeCase_ == RelTypeOneofCase.Aggregate) {
              subBuilder.MergeFrom(Aggregate);
            }
            input.ReadMessage(subBuilder);
            Aggregate = subBuilder;
            break;
          }
          case 42: {
            global::Substrait.Protobuf.SortRel subBuilder = new global::Substrait.Protobuf.SortRel();
            if (relTypeCase_ == RelTypeOneofCase.Sort) {
              subBuilder.MergeFrom(Sort);
            }
            input.ReadMessage(subBuilder);
            Sort = subBuilder;
            break;
          }
          case 50: {
            global::Substrait.Protobuf.JoinRel subBuilder = new global::Substrait.Protobuf.JoinRel();
            if (relTypeCase_ == RelTypeOneofCase.Join) {
              subBuilder.MergeFrom(Join);
            }
            input.ReadMessage(subBuilder);
            Join = subBuilder;
            break;
          }
          case 58: {
            global::Substrait.Protobuf.ProjectRel subBuilder = new global::Substrait.Protobuf.ProjectRel();
            if (relTypeCase_ == RelTypeOneofCase.Project) {
              subBuilder.MergeFrom(Project);
            }
            input.ReadMessage(subBuilder);
            Project = subBuilder;
            break;
          }
          case 66: {
            global::Substrait.Protobuf.SetRel subBuilder = new global::Substrait.Protobuf.SetRel();
            if (relTypeCase_ == RelTypeOneofCase.Set) {
              subBuilder.MergeFrom(Set);
            }
            input.ReadMessage(subBuilder);
            Set = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Substrait.Protobuf.ReadRel subBuilder = new global::Substrait.Protobuf.ReadRel();
            if (relTypeCase_ == RelTypeOneofCase.Read) {
              subBuilder.MergeFrom(Read);
            }
            input.ReadMessage(subBuilder);
            Read = subBuilder;
            break;
          }
          case 18: {
            global::Substrait.Protobuf.FilterRel subBuilder = new global::Substrait.Protobuf.FilterRel();
            if (relTypeCase_ == RelTypeOneofCase.Filter) {
              subBuilder.MergeFrom(Filter);
            }
            input.ReadMessage(subBuilder);
            Filter = subBuilder;
            break;
          }
          case 26: {
            global::Substrait.Protobuf.FetchRel subBuilder = new global::Substrait.Protobuf.FetchRel();
            if (relTypeCase_ == RelTypeOneofCase.Fetch) {
              subBuilder.MergeFrom(Fetch);
            }
            input.ReadMessage(subBuilder);
            Fetch = subBuilder;
            break;
          }
          case 34: {
            global::Substrait.Protobuf.AggregateRel subBuilder = new global::Substrait.Protobuf.AggregateRel();
            if (relTypeCase_ == RelTypeOneofCase.Aggregate) {
              subBuilder.MergeFrom(Aggregate);
            }
            input.ReadMessage(subBuilder);
            Aggregate = subBuilder;
            break;
          }
          case 42: {
            global::Substrait.Protobuf.SortRel subBuilder = new global::Substrait.Protobuf.SortRel();
            if (relTypeCase_ == RelTypeOneofCase.Sort) {
              subBuilder.MergeFrom(Sort);
            }
            input.ReadMessage(subBuilder);
            Sort = subBuilder;
            break;
          }
          case 50: {
            global::Substrait.Protobuf.JoinRel subBuilder = new global::Substrait.Protobuf.JoinRel();
            if (relTypeCase_ == RelTypeOneofCase.Join) {
              subBuilder.MergeFrom(Join);
            }
            input.ReadMessage(subBuilder);
            Join = subBuilder;
            break;
          }
          case 58: {
            global::Substrait.Protobuf.ProjectRel subBuilder = new global::Substrait.Protobuf.ProjectRel();
            if (relTypeCase_ == RelTypeOneofCase.Project) {
              subBuilder.MergeFrom(Project);
            }
            input.ReadMessage(subBuilder);
            Project = subBuilder;
            break;
          }
          case 66: {
            global::Substrait.Protobuf.SetRel subBuilder = new global::Substrait.Protobuf.SetRel();
            if (relTypeCase_ == RelTypeOneofCase.Set) {
              subBuilder.MergeFrom(Set);
            }
            input.ReadMessage(subBuilder);
            Set = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
