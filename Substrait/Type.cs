// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: type.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Substrait.Protobuf {

  /// <summary>Holder for reflection information generated from type.proto</summary>
  public static partial class TypeReflection {

    #region Descriptor
    /// <summary>File descriptor for type.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TypeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgp0eXBlLnByb3RvEgxpby5zdWJzdHJhaXQaEGV4dGVuc2lvbnMucHJvdG8i",
            "8B8KBFR5cGUSKgoEYm9vbBgBIAEoCzIaLmlvLnN1YnN0cmFpdC5UeXBlLkJv",
            "b2xlYW5IABIjCgJpOBgCIAEoCzIVLmlvLnN1YnN0cmFpdC5UeXBlLkk4SAAS",
            "JQoDaTE2GAMgASgLMhYuaW8uc3Vic3RyYWl0LlR5cGUuSTE2SAASJQoDaTMy",
            "GAUgASgLMhYuaW8uc3Vic3RyYWl0LlR5cGUuSTMySAASJQoDaTY0GAcgASgL",
            "MhYuaW8uc3Vic3RyYWl0LlR5cGUuSTY0SAASJwoEZnAzMhgKIAEoCzIXLmlv",
            "LnN1YnN0cmFpdC5UeXBlLkZQMzJIABInCgRmcDY0GAsgASgLMhcuaW8uc3Vi",
            "c3RyYWl0LlR5cGUuRlA2NEgAEisKBnN0cmluZxgMIAEoCzIZLmlvLnN1YnN0",
            "cmFpdC5UeXBlLlN0cmluZ0gAEisKBmJpbmFyeRgNIAEoCzIZLmlvLnN1YnN0",
            "cmFpdC5UeXBlLkJpbmFyeUgAEjEKCXRpbWVzdGFtcBgOIAEoCzIcLmlvLnN1",
            "YnN0cmFpdC5UeXBlLlRpbWVzdGFtcEgAEicKBGRhdGUYECABKAsyFy5pby5z",
            "dWJzdHJhaXQuVHlwZS5EYXRlSAASJwoEdGltZRgRIAEoCzIXLmlvLnN1YnN0",
            "cmFpdC5UeXBlLlRpbWVIABI4Cg1pbnRlcnZhbF95ZWFyGBMgASgLMh8uaW8u",
            "c3Vic3RyYWl0LlR5cGUuSW50ZXJ2YWxZZWFySAASNgoMaW50ZXJ2YWxfZGF5",
            "GBQgASgLMh4uaW8uc3Vic3RyYWl0LlR5cGUuSW50ZXJ2YWxEYXlIABI2Cgx0",
            "aW1lc3RhbXBfdHoYHSABKAsyHi5pby5zdWJzdHJhaXQuVHlwZS5UaW1lc3Rh",
            "bXBUWkgAEicKBHV1aWQYICABKAsyFy5pby5zdWJzdHJhaXQuVHlwZS5VVUlE",
            "SAASMgoKZml4ZWRfY2hhchgVIAEoCzIcLmlvLnN1YnN0cmFpdC5UeXBlLkZp",
            "eGVkQ2hhckgAEi0KB3ZhcmNoYXIYFiABKAsyGi5pby5zdWJzdHJhaXQuVHlw",
            "ZS5WYXJDaGFySAASNgoMZml4ZWRfYmluYXJ5GBcgASgLMh4uaW8uc3Vic3Ry",
            "YWl0LlR5cGUuRml4ZWRCaW5hcnlIABItCgdkZWNpbWFsGBggASgLMhouaW8u",
            "c3Vic3RyYWl0LlR5cGUuRGVjaW1hbEgAEisKBnN0cnVjdBgZIAEoCzIZLmlv",
            "LnN1YnN0cmFpdC5UeXBlLlN0cnVjdEgAEicKBGxpc3QYGyABKAsyFy5pby5z",
            "dWJzdHJhaXQuVHlwZS5MaXN0SAASJQoDbWFwGBwgASgLMhYuaW8uc3Vic3Ry",
            "YWl0LlR5cGUuTWFwSAASNwoMdXNlcl9kZWZpbmVkGB8gASgLMh8uaW8uc3Vi",
            "c3RyYWl0LkV4dGVuc2lvbnMuVHlwZUlkSAAabwoHQm9vbGVhbhIvCgl2YXJp",
            "YXRpb24YASABKAsyHC5pby5zdWJzdHJhaXQuVHlwZS5WYXJpYXRpb24SMwoL",
            "bnVsbGFiaWxpdHkYAiABKA4yHi5pby5zdWJzdHJhaXQuVHlwZS5OdWxsYWJp",
            "bGl0eRpqCgJJOBIvCgl2YXJpYXRpb24YASABKAsyHC5pby5zdWJzdHJhaXQu",
            "VHlwZS5WYXJpYXRpb24SMwoLbnVsbGFiaWxpdHkYAiABKA4yHi5pby5zdWJz",
            "dHJhaXQuVHlwZS5OdWxsYWJpbGl0eRprCgNJMTYSLwoJdmFyaWF0aW9uGAEg",
            "ASgLMhwuaW8uc3Vic3RyYWl0LlR5cGUuVmFyaWF0aW9uEjMKC251bGxhYmls",
            "aXR5GAIgASgOMh4uaW8uc3Vic3RyYWl0LlR5cGUuTnVsbGFiaWxpdHkaawoD",
            "STMyEi8KCXZhcmlhdGlvbhgBIAEoCzIcLmlvLnN1YnN0cmFpdC5UeXBlLlZh",
            "cmlhdGlvbhIzCgtudWxsYWJpbGl0eRgCIAEoDjIeLmlvLnN1YnN0cmFpdC5U",
            "eXBlLk51bGxhYmlsaXR5GmsKA0k2NBIvCgl2YXJpYXRpb24YASABKAsyHC5p",
            "by5zdWJzdHJhaXQuVHlwZS5WYXJpYXRpb24SMwoLbnVsbGFiaWxpdHkYAiAB",
            "KA4yHi5pby5zdWJzdHJhaXQuVHlwZS5OdWxsYWJpbGl0eRpsCgRGUDMyEi8K",
            "CXZhcmlhdGlvbhgBIAEoCzIcLmlvLnN1YnN0cmFpdC5UeXBlLlZhcmlhdGlv",
            "bhIzCgtudWxsYWJpbGl0eRgCIAEoDjIeLmlvLnN1YnN0cmFpdC5UeXBlLk51",
            "bGxhYmlsaXR5GmwKBEZQNjQSLwoJdmFyaWF0aW9uGAEgASgLMhwuaW8uc3Vi",
            "c3RyYWl0LlR5cGUuVmFyaWF0aW9uEjMKC251bGxhYmlsaXR5GAIgASgOMh4u",
            "aW8uc3Vic3RyYWl0LlR5cGUuTnVsbGFiaWxpdHkabgoGU3RyaW5nEi8KCXZh",
            "cmlhdGlvbhgBIAEoCzIcLmlvLnN1YnN0cmFpdC5UeXBlLlZhcmlhdGlvbhIz",
            "CgtudWxsYWJpbGl0eRgCIAEoDjIeLmlvLnN1YnN0cmFpdC5UeXBlLk51bGxh",
            "YmlsaXR5Gm4KBkJpbmFyeRIvCgl2YXJpYXRpb24YASABKAsyHC5pby5zdWJz",
            "dHJhaXQuVHlwZS5WYXJpYXRpb24SMwoLbnVsbGFiaWxpdHkYAiABKA4yHi5p",
            "by5zdWJzdHJhaXQuVHlwZS5OdWxsYWJpbGl0eRpxCglUaW1lc3RhbXASLwoJ",
            "dmFyaWF0aW9uGAEgASgLMhwuaW8uc3Vic3RyYWl0LlR5cGUuVmFyaWF0aW9u",
            "EjMKC251bGxhYmlsaXR5GAIgASgOMh4uaW8uc3Vic3RyYWl0LlR5cGUuTnVs",
            "bGFiaWxpdHkabAoERGF0ZRIvCgl2YXJpYXRpb24YASABKAsyHC5pby5zdWJz",
            "dHJhaXQuVHlwZS5WYXJpYXRpb24SMwoLbnVsbGFiaWxpdHkYAiABKA4yHi5p",
            "by5zdWJzdHJhaXQuVHlwZS5OdWxsYWJpbGl0eRpsCgRUaW1lEi8KCXZhcmlh",
            "dGlvbhgBIAEoCzIcLmlvLnN1YnN0cmFpdC5UeXBlLlZhcmlhdGlvbhIzCgtu",
            "dWxsYWJpbGl0eRgCIAEoDjIeLmlvLnN1YnN0cmFpdC5UeXBlLk51bGxhYmls",
            "aXR5GnMKC1RpbWVzdGFtcFRaEi8KCXZhcmlhdGlvbhgBIAEoCzIcLmlvLnN1",
            "YnN0cmFpdC5UeXBlLlZhcmlhdGlvbhIzCgtudWxsYWJpbGl0eRgCIAEoDjIe",
            "LmlvLnN1YnN0cmFpdC5UeXBlLk51bGxhYmlsaXR5GnQKDEludGVydmFsWWVh",
            "chIvCgl2YXJpYXRpb24YASABKAsyHC5pby5zdWJzdHJhaXQuVHlwZS5WYXJp",
            "YXRpb24SMwoLbnVsbGFiaWxpdHkYAiABKA4yHi5pby5zdWJzdHJhaXQuVHlw",
            "ZS5OdWxsYWJpbGl0eRpzCgtJbnRlcnZhbERheRIvCgl2YXJpYXRpb24YASAB",
            "KAsyHC5pby5zdWJzdHJhaXQuVHlwZS5WYXJpYXRpb24SMwoLbnVsbGFiaWxp",
            "dHkYAiABKA4yHi5pby5zdWJzdHJhaXQuVHlwZS5OdWxsYWJpbGl0eRpsCgRV",
            "VUlEEi8KCXZhcmlhdGlvbhgBIAEoCzIcLmlvLnN1YnN0cmFpdC5UeXBlLlZh",
            "cmlhdGlvbhIzCgtudWxsYWJpbGl0eRgCIAEoDjIeLmlvLnN1YnN0cmFpdC5U",
            "eXBlLk51bGxhYmlsaXR5GoEBCglGaXhlZENoYXISDgoGbGVuZ3RoGAEgASgF",
            "Ei8KCXZhcmlhdGlvbhgCIAEoCzIcLmlvLnN1YnN0cmFpdC5UeXBlLlZhcmlh",
            "dGlvbhIzCgtudWxsYWJpbGl0eRgDIAEoDjIeLmlvLnN1YnN0cmFpdC5UeXBl",
            "Lk51bGxhYmlsaXR5Gn8KB1ZhckNoYXISDgoGbGVuZ3RoGAEgASgFEi8KCXZh",
            "cmlhdGlvbhgCIAEoCzIcLmlvLnN1YnN0cmFpdC5UeXBlLlZhcmlhdGlvbhIz",
            "CgtudWxsYWJpbGl0eRgDIAEoDjIeLmlvLnN1YnN0cmFpdC5UeXBlLk51bGxh",
            "YmlsaXR5GoMBCgtGaXhlZEJpbmFyeRIOCgZsZW5ndGgYASABKAUSLwoJdmFy",
            "aWF0aW9uGAIgASgLMhwuaW8uc3Vic3RyYWl0LlR5cGUuVmFyaWF0aW9uEjMK",
            "C251bGxhYmlsaXR5GAMgASgOMh4uaW8uc3Vic3RyYWl0LlR5cGUuTnVsbGFi",
            "aWxpdHkakQEKB0RlY2ltYWwSDQoFc2NhbGUYASABKAUSEQoJcHJlY2lzaW9u",
            "GAIgASgFEi8KCXZhcmlhdGlvbhgDIAEoCzIcLmlvLnN1YnN0cmFpdC5UeXBl",
            "LlZhcmlhdGlvbhIzCgtudWxsYWJpbGl0eRgEIAEoDjIeLmlvLnN1YnN0cmFp",
            "dC5UeXBlLk51bGxhYmlsaXR5GpEBCgZTdHJ1Y3QSIQoFdHlwZXMYASADKAsy",
            "Ei5pby5zdWJzdHJhaXQuVHlwZRIvCgl2YXJpYXRpb24YAiABKAsyHC5pby5z",
            "dWJzdHJhaXQuVHlwZS5WYXJpYXRpb24SMwoLbnVsbGFiaWxpdHkYAyABKA4y",
            "Hi5pby5zdWJzdHJhaXQuVHlwZS5OdWxsYWJpbGl0eRpHCgtOYW1lZFN0cnVj",
            "dBINCgVuYW1lcxgBIAMoCRIpCgZzdHJ1Y3QYAiABKAsyGS5pby5zdWJzdHJh",
            "aXQuVHlwZS5TdHJ1Y3QajgEKBExpc3QSIAoEdHlwZRgBIAEoCzISLmlvLnN1",
            "YnN0cmFpdC5UeXBlEi8KCXZhcmlhdGlvbhgCIAEoCzIcLmlvLnN1YnN0cmFp",
            "dC5UeXBlLlZhcmlhdGlvbhIzCgtudWxsYWJpbGl0eRgDIAEoDjIeLmlvLnN1",
            "YnN0cmFpdC5UeXBlLk51bGxhYmlsaXR5Gq8BCgNNYXASHwoDa2V5GAEgASgL",
            "MhIuaW8uc3Vic3RyYWl0LlR5cGUSIQoFdmFsdWUYAiABKAsyEi5pby5zdWJz",
            "dHJhaXQuVHlwZRIvCgl2YXJpYXRpb24YAyABKAsyHC5pby5zdWJzdHJhaXQu",
            "VHlwZS5WYXJpYXRpb24SMwoLbnVsbGFiaWxpdHkYBCABKA4yHi5pby5zdWJz",
            "dHJhaXQuVHlwZS5OdWxsYWJpbGl0eRovCglWYXJpYXRpb24SFAoMb3JnYW5p",
            "emF0aW9uGAEgASgFEgwKBG5hbWUYAiABKAkiKQoLTnVsbGFiaWxpdHkSDAoI",
            "TlVMTEFCTEUQABIMCghSRVFVSVJFRBABQgYKBGtpbmRCF1ABqgISU3Vic3Ry",
            "YWl0LlByb3RvYnVmYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Substrait.Protobuf.ExtensionsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Type), global::Substrait.Protobuf.Type.Parser, new[]{ "Bool", "I8", "I16", "I32", "I64", "Fp32", "Fp64", "String", "Binary", "Timestamp", "Date", "Time", "IntervalYear", "IntervalDay", "TimestampTz", "Uuid", "FixedChar", "Varchar", "FixedBinary", "Decimal", "Struct", "List", "Map", "UserDefined" }, new[]{ "Kind" }, new[]{ typeof(global::Substrait.Protobuf.Type.Types.Nullability) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Type.Types.Boolean), global::Substrait.Protobuf.Type.Types.Boolean.Parser, new[]{ "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Type.Types.I8), global::Substrait.Protobuf.Type.Types.I8.Parser, new[]{ "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Type.Types.I16), global::Substrait.Protobuf.Type.Types.I16.Parser, new[]{ "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Type.Types.I32), global::Substrait.Protobuf.Type.Types.I32.Parser, new[]{ "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Type.Types.I64), global::Substrait.Protobuf.Type.Types.I64.Parser, new[]{ "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Type.Types.FP32), global::Substrait.Protobuf.Type.Types.FP32.Parser, new[]{ "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Type.Types.FP64), global::Substrait.Protobuf.Type.Types.FP64.Parser, new[]{ "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Type.Types.String), global::Substrait.Protobuf.Type.Types.String.Parser, new[]{ "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Type.Types.Binary), global::Substrait.Protobuf.Type.Types.Binary.Parser, new[]{ "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Type.Types.Timestamp), global::Substrait.Protobuf.Type.Types.Timestamp.Parser, new[]{ "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Type.Types.Date), global::Substrait.Protobuf.Type.Types.Date.Parser, new[]{ "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Type.Types.Time), global::Substrait.Protobuf.Type.Types.Time.Parser, new[]{ "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Type.Types.TimestampTZ), global::Substrait.Protobuf.Type.Types.TimestampTZ.Parser, new[]{ "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Type.Types.IntervalYear), global::Substrait.Protobuf.Type.Types.IntervalYear.Parser, new[]{ "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Type.Types.IntervalDay), global::Substrait.Protobuf.Type.Types.IntervalDay.Parser, new[]{ "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Type.Types.UUID), global::Substrait.Protobuf.Type.Types.UUID.Parser, new[]{ "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Type.Types.FixedChar), global::Substrait.Protobuf.Type.Types.FixedChar.Parser, new[]{ "Length", "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Type.Types.VarChar), global::Substrait.Protobuf.Type.Types.VarChar.Parser, new[]{ "Length", "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Type.Types.FixedBinary), global::Substrait.Protobuf.Type.Types.FixedBinary.Parser, new[]{ "Length", "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Type.Types.Decimal), global::Substrait.Protobuf.Type.Types.Decimal.Parser, new[]{ "Scale", "Precision", "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Type.Types.Struct), global::Substrait.Protobuf.Type.Types.Struct.Parser, new[]{ "Types_", "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Type.Types.NamedStruct), global::Substrait.Protobuf.Type.Types.NamedStruct.Parser, new[]{ "Names", "Struct" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Type.Types.List), global::Substrait.Protobuf.Type.Types.List.Parser, new[]{ "Type", "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Type.Types.Map), global::Substrait.Protobuf.Type.Types.Map.Parser, new[]{ "Key", "Value", "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.Type.Types.Variation), global::Substrait.Protobuf.Type.Types.Variation.Parser, new[]{ "Organization", "Name" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Type : pb::IMessage<Type>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Type> _parser = new pb::MessageParser<Type>(() => new Type());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Type> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Substrait.Protobuf.TypeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Type() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Type(Type other) : this() {
      switch (other.KindCase) {
        case KindOneofCase.Bool:
          Bool = other.Bool.Clone();
          break;
        case KindOneofCase.I8:
          I8 = other.I8.Clone();
          break;
        case KindOneofCase.I16:
          I16 = other.I16.Clone();
          break;
        case KindOneofCase.I32:
          I32 = other.I32.Clone();
          break;
        case KindOneofCase.I64:
          I64 = other.I64.Clone();
          break;
        case KindOneofCase.Fp32:
          Fp32 = other.Fp32.Clone();
          break;
        case KindOneofCase.Fp64:
          Fp64 = other.Fp64.Clone();
          break;
        case KindOneofCase.String:
          String = other.String.Clone();
          break;
        case KindOneofCase.Binary:
          Binary = other.Binary.Clone();
          break;
        case KindOneofCase.Timestamp:
          Timestamp = other.Timestamp.Clone();
          break;
        case KindOneofCase.Date:
          Date = other.Date.Clone();
          break;
        case KindOneofCase.Time:
          Time = other.Time.Clone();
          break;
        case KindOneofCase.IntervalYear:
          IntervalYear = other.IntervalYear.Clone();
          break;
        case KindOneofCase.IntervalDay:
          IntervalDay = other.IntervalDay.Clone();
          break;
        case KindOneofCase.TimestampTz:
          TimestampTz = other.TimestampTz.Clone();
          break;
        case KindOneofCase.Uuid:
          Uuid = other.Uuid.Clone();
          break;
        case KindOneofCase.FixedChar:
          FixedChar = other.FixedChar.Clone();
          break;
        case KindOneofCase.Varchar:
          Varchar = other.Varchar.Clone();
          break;
        case KindOneofCase.FixedBinary:
          FixedBinary = other.FixedBinary.Clone();
          break;
        case KindOneofCase.Decimal:
          Decimal = other.Decimal.Clone();
          break;
        case KindOneofCase.Struct:
          Struct = other.Struct.Clone();
          break;
        case KindOneofCase.List:
          List = other.List.Clone();
          break;
        case KindOneofCase.Map:
          Map = other.Map.Clone();
          break;
        case KindOneofCase.UserDefined:
          UserDefined = other.UserDefined.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Type Clone() {
      return new Type(this);
    }

    /// <summary>Field number for the "bool" field.</summary>
    public const int BoolFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.Boolean Bool {
      get { return kindCase_ == KindOneofCase.Bool ? (global::Substrait.Protobuf.Type.Types.Boolean) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Bool;
      }
    }

    /// <summary>Field number for the "i8" field.</summary>
    public const int I8FieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.I8 I8 {
      get { return kindCase_ == KindOneofCase.I8 ? (global::Substrait.Protobuf.Type.Types.I8) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.I8;
      }
    }

    /// <summary>Field number for the "i16" field.</summary>
    public const int I16FieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.I16 I16 {
      get { return kindCase_ == KindOneofCase.I16 ? (global::Substrait.Protobuf.Type.Types.I16) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.I16;
      }
    }

    /// <summary>Field number for the "i32" field.</summary>
    public const int I32FieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.I32 I32 {
      get { return kindCase_ == KindOneofCase.I32 ? (global::Substrait.Protobuf.Type.Types.I32) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.I32;
      }
    }

    /// <summary>Field number for the "i64" field.</summary>
    public const int I64FieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.I64 I64 {
      get { return kindCase_ == KindOneofCase.I64 ? (global::Substrait.Protobuf.Type.Types.I64) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.I64;
      }
    }

    /// <summary>Field number for the "fp32" field.</summary>
    public const int Fp32FieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.FP32 Fp32 {
      get { return kindCase_ == KindOneofCase.Fp32 ? (global::Substrait.Protobuf.Type.Types.FP32) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Fp32;
      }
    }

    /// <summary>Field number for the "fp64" field.</summary>
    public const int Fp64FieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.FP64 Fp64 {
      get { return kindCase_ == KindOneofCase.Fp64 ? (global::Substrait.Protobuf.Type.Types.FP64) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Fp64;
      }
    }

    /// <summary>Field number for the "string" field.</summary>
    public const int StringFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.String String {
      get { return kindCase_ == KindOneofCase.String ? (global::Substrait.Protobuf.Type.Types.String) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.String;
      }
    }

    /// <summary>Field number for the "binary" field.</summary>
    public const int BinaryFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.Binary Binary {
      get { return kindCase_ == KindOneofCase.Binary ? (global::Substrait.Protobuf.Type.Types.Binary) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Binary;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.Timestamp Timestamp {
      get { return kindCase_ == KindOneofCase.Timestamp ? (global::Substrait.Protobuf.Type.Types.Timestamp) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Timestamp;
      }
    }

    /// <summary>Field number for the "date" field.</summary>
    public const int DateFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.Date Date {
      get { return kindCase_ == KindOneofCase.Date ? (global::Substrait.Protobuf.Type.Types.Date) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Date;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.Time Time {
      get { return kindCase_ == KindOneofCase.Time ? (global::Substrait.Protobuf.Type.Types.Time) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Time;
      }
    }

    /// <summary>Field number for the "interval_year" field.</summary>
    public const int IntervalYearFieldNumber = 19;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.IntervalYear IntervalYear {
      get { return kindCase_ == KindOneofCase.IntervalYear ? (global::Substrait.Protobuf.Type.Types.IntervalYear) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.IntervalYear;
      }
    }

    /// <summary>Field number for the "interval_day" field.</summary>
    public const int IntervalDayFieldNumber = 20;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.IntervalDay IntervalDay {
      get { return kindCase_ == KindOneofCase.IntervalDay ? (global::Substrait.Protobuf.Type.Types.IntervalDay) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.IntervalDay;
      }
    }

    /// <summary>Field number for the "timestamp_tz" field.</summary>
    public const int TimestampTzFieldNumber = 29;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.TimestampTZ TimestampTz {
      get { return kindCase_ == KindOneofCase.TimestampTz ? (global::Substrait.Protobuf.Type.Types.TimestampTZ) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.TimestampTz;
      }
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 32;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.UUID Uuid {
      get { return kindCase_ == KindOneofCase.Uuid ? (global::Substrait.Protobuf.Type.Types.UUID) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Uuid;
      }
    }

    /// <summary>Field number for the "fixed_char" field.</summary>
    public const int FixedCharFieldNumber = 21;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.FixedChar FixedChar {
      get { return kindCase_ == KindOneofCase.FixedChar ? (global::Substrait.Protobuf.Type.Types.FixedChar) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.FixedChar;
      }
    }

    /// <summary>Field number for the "varchar" field.</summary>
    public const int VarcharFieldNumber = 22;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.VarChar Varchar {
      get { return kindCase_ == KindOneofCase.Varchar ? (global::Substrait.Protobuf.Type.Types.VarChar) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Varchar;
      }
    }

    /// <summary>Field number for the "fixed_binary" field.</summary>
    public const int FixedBinaryFieldNumber = 23;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.FixedBinary FixedBinary {
      get { return kindCase_ == KindOneofCase.FixedBinary ? (global::Substrait.Protobuf.Type.Types.FixedBinary) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.FixedBinary;
      }
    }

    /// <summary>Field number for the "decimal" field.</summary>
    public const int DecimalFieldNumber = 24;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.Decimal Decimal {
      get { return kindCase_ == KindOneofCase.Decimal ? (global::Substrait.Protobuf.Type.Types.Decimal) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Decimal;
      }
    }

    /// <summary>Field number for the "struct" field.</summary>
    public const int StructFieldNumber = 25;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.Struct Struct {
      get { return kindCase_ == KindOneofCase.Struct ? (global::Substrait.Protobuf.Type.Types.Struct) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Struct;
      }
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 27;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.List List {
      get { return kindCase_ == KindOneofCase.List ? (global::Substrait.Protobuf.Type.Types.List) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.List;
      }
    }

    /// <summary>Field number for the "map" field.</summary>
    public const int MapFieldNumber = 28;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.Map Map {
      get { return kindCase_ == KindOneofCase.Map ? (global::Substrait.Protobuf.Type.Types.Map) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Map;
      }
    }

    /// <summary>Field number for the "user_defined" field.</summary>
    public const int UserDefinedFieldNumber = 31;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Extensions.Types.TypeId UserDefined {
      get { return kindCase_ == KindOneofCase.UserDefined ? (global::Substrait.Protobuf.Extensions.Types.TypeId) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.UserDefined;
      }
    }

    private object kind_;
    /// <summary>Enum of possible cases for the "kind" oneof.</summary>
    public enum KindOneofCase {
      None = 0,
      Bool = 1,
      I8 = 2,
      I16 = 3,
      I32 = 5,
      I64 = 7,
      Fp32 = 10,
      Fp64 = 11,
      String = 12,
      Binary = 13,
      Timestamp = 14,
      Date = 16,
      Time = 17,
      IntervalYear = 19,
      IntervalDay = 20,
      TimestampTz = 29,
      Uuid = 32,
      FixedChar = 21,
      Varchar = 22,
      FixedBinary = 23,
      Decimal = 24,
      Struct = 25,
      List = 27,
      Map = 28,
      UserDefined = 31,
    }
    private KindOneofCase kindCase_ = KindOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KindOneofCase KindCase {
      get { return kindCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearKind() {
      kindCase_ = KindOneofCase.None;
      kind_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Type);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Type other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Bool, other.Bool)) return false;
      if (!object.Equals(I8, other.I8)) return false;
      if (!object.Equals(I16, other.I16)) return false;
      if (!object.Equals(I32, other.I32)) return false;
      if (!object.Equals(I64, other.I64)) return false;
      if (!object.Equals(Fp32, other.Fp32)) return false;
      if (!object.Equals(Fp64, other.Fp64)) return false;
      if (!object.Equals(String, other.String)) return false;
      if (!object.Equals(Binary, other.Binary)) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (!object.Equals(Date, other.Date)) return false;
      if (!object.Equals(Time, other.Time)) return false;
      if (!object.Equals(IntervalYear, other.IntervalYear)) return false;
      if (!object.Equals(IntervalDay, other.IntervalDay)) return false;
      if (!object.Equals(TimestampTz, other.TimestampTz)) return false;
      if (!object.Equals(Uuid, other.Uuid)) return false;
      if (!object.Equals(FixedChar, other.FixedChar)) return false;
      if (!object.Equals(Varchar, other.Varchar)) return false;
      if (!object.Equals(FixedBinary, other.FixedBinary)) return false;
      if (!object.Equals(Decimal, other.Decimal)) return false;
      if (!object.Equals(Struct, other.Struct)) return false;
      if (!object.Equals(List, other.List)) return false;
      if (!object.Equals(Map, other.Map)) return false;
      if (!object.Equals(UserDefined, other.UserDefined)) return false;
      if (KindCase != other.KindCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (kindCase_ == KindOneofCase.Bool) hash ^= Bool.GetHashCode();
      if (kindCase_ == KindOneofCase.I8) hash ^= I8.GetHashCode();
      if (kindCase_ == KindOneofCase.I16) hash ^= I16.GetHashCode();
      if (kindCase_ == KindOneofCase.I32) hash ^= I32.GetHashCode();
      if (kindCase_ == KindOneofCase.I64) hash ^= I64.GetHashCode();
      if (kindCase_ == KindOneofCase.Fp32) hash ^= Fp32.GetHashCode();
      if (kindCase_ == KindOneofCase.Fp64) hash ^= Fp64.GetHashCode();
      if (kindCase_ == KindOneofCase.String) hash ^= String.GetHashCode();
      if (kindCase_ == KindOneofCase.Binary) hash ^= Binary.GetHashCode();
      if (kindCase_ == KindOneofCase.Timestamp) hash ^= Timestamp.GetHashCode();
      if (kindCase_ == KindOneofCase.Date) hash ^= Date.GetHashCode();
      if (kindCase_ == KindOneofCase.Time) hash ^= Time.GetHashCode();
      if (kindCase_ == KindOneofCase.IntervalYear) hash ^= IntervalYear.GetHashCode();
      if (kindCase_ == KindOneofCase.IntervalDay) hash ^= IntervalDay.GetHashCode();
      if (kindCase_ == KindOneofCase.TimestampTz) hash ^= TimestampTz.GetHashCode();
      if (kindCase_ == KindOneofCase.Uuid) hash ^= Uuid.GetHashCode();
      if (kindCase_ == KindOneofCase.FixedChar) hash ^= FixedChar.GetHashCode();
      if (kindCase_ == KindOneofCase.Varchar) hash ^= Varchar.GetHashCode();
      if (kindCase_ == KindOneofCase.FixedBinary) hash ^= FixedBinary.GetHashCode();
      if (kindCase_ == KindOneofCase.Decimal) hash ^= Decimal.GetHashCode();
      if (kindCase_ == KindOneofCase.Struct) hash ^= Struct.GetHashCode();
      if (kindCase_ == KindOneofCase.List) hash ^= List.GetHashCode();
      if (kindCase_ == KindOneofCase.Map) hash ^= Map.GetHashCode();
      if (kindCase_ == KindOneofCase.UserDefined) hash ^= UserDefined.GetHashCode();
      hash ^= (int) kindCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (kindCase_ == KindOneofCase.Bool) {
        output.WriteRawTag(10);
        output.WriteMessage(Bool);
      }
      if (kindCase_ == KindOneofCase.I8) {
        output.WriteRawTag(18);
        output.WriteMessage(I8);
      }
      if (kindCase_ == KindOneofCase.I16) {
        output.WriteRawTag(26);
        output.WriteMessage(I16);
      }
      if (kindCase_ == KindOneofCase.I32) {
        output.WriteRawTag(42);
        output.WriteMessage(I32);
      }
      if (kindCase_ == KindOneofCase.I64) {
        output.WriteRawTag(58);
        output.WriteMessage(I64);
      }
      if (kindCase_ == KindOneofCase.Fp32) {
        output.WriteRawTag(82);
        output.WriteMessage(Fp32);
      }
      if (kindCase_ == KindOneofCase.Fp64) {
        output.WriteRawTag(90);
        output.WriteMessage(Fp64);
      }
      if (kindCase_ == KindOneofCase.String) {
        output.WriteRawTag(98);
        output.WriteMessage(String);
      }
      if (kindCase_ == KindOneofCase.Binary) {
        output.WriteRawTag(106);
        output.WriteMessage(Binary);
      }
      if (kindCase_ == KindOneofCase.Timestamp) {
        output.WriteRawTag(114);
        output.WriteMessage(Timestamp);
      }
      if (kindCase_ == KindOneofCase.Date) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Date);
      }
      if (kindCase_ == KindOneofCase.Time) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Time);
      }
      if (kindCase_ == KindOneofCase.IntervalYear) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(IntervalYear);
      }
      if (kindCase_ == KindOneofCase.IntervalDay) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(IntervalDay);
      }
      if (kindCase_ == KindOneofCase.FixedChar) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(FixedChar);
      }
      if (kindCase_ == KindOneofCase.Varchar) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(Varchar);
      }
      if (kindCase_ == KindOneofCase.FixedBinary) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(FixedBinary);
      }
      if (kindCase_ == KindOneofCase.Decimal) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(Decimal);
      }
      if (kindCase_ == KindOneofCase.Struct) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(Struct);
      }
      if (kindCase_ == KindOneofCase.List) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(List);
      }
      if (kindCase_ == KindOneofCase.Map) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(Map);
      }
      if (kindCase_ == KindOneofCase.TimestampTz) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(TimestampTz);
      }
      if (kindCase_ == KindOneofCase.UserDefined) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(UserDefined);
      }
      if (kindCase_ == KindOneofCase.Uuid) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(Uuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (kindCase_ == KindOneofCase.Bool) {
        output.WriteRawTag(10);
        output.WriteMessage(Bool);
      }
      if (kindCase_ == KindOneofCase.I8) {
        output.WriteRawTag(18);
        output.WriteMessage(I8);
      }
      if (kindCase_ == KindOneofCase.I16) {
        output.WriteRawTag(26);
        output.WriteMessage(I16);
      }
      if (kindCase_ == KindOneofCase.I32) {
        output.WriteRawTag(42);
        output.WriteMessage(I32);
      }
      if (kindCase_ == KindOneofCase.I64) {
        output.WriteRawTag(58);
        output.WriteMessage(I64);
      }
      if (kindCase_ == KindOneofCase.Fp32) {
        output.WriteRawTag(82);
        output.WriteMessage(Fp32);
      }
      if (kindCase_ == KindOneofCase.Fp64) {
        output.WriteRawTag(90);
        output.WriteMessage(Fp64);
      }
      if (kindCase_ == KindOneofCase.String) {
        output.WriteRawTag(98);
        output.WriteMessage(String);
      }
      if (kindCase_ == KindOneofCase.Binary) {
        output.WriteRawTag(106);
        output.WriteMessage(Binary);
      }
      if (kindCase_ == KindOneofCase.Timestamp) {
        output.WriteRawTag(114);
        output.WriteMessage(Timestamp);
      }
      if (kindCase_ == KindOneofCase.Date) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Date);
      }
      if (kindCase_ == KindOneofCase.Time) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Time);
      }
      if (kindCase_ == KindOneofCase.IntervalYear) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(IntervalYear);
      }
      if (kindCase_ == KindOneofCase.IntervalDay) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(IntervalDay);
      }
      if (kindCase_ == KindOneofCase.FixedChar) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(FixedChar);
      }
      if (kindCase_ == KindOneofCase.Varchar) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(Varchar);
      }
      if (kindCase_ == KindOneofCase.FixedBinary) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(FixedBinary);
      }
      if (kindCase_ == KindOneofCase.Decimal) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(Decimal);
      }
      if (kindCase_ == KindOneofCase.Struct) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(Struct);
      }
      if (kindCase_ == KindOneofCase.List) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(List);
      }
      if (kindCase_ == KindOneofCase.Map) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(Map);
      }
      if (kindCase_ == KindOneofCase.TimestampTz) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(TimestampTz);
      }
      if (kindCase_ == KindOneofCase.UserDefined) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(UserDefined);
      }
      if (kindCase_ == KindOneofCase.Uuid) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(Uuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (kindCase_ == KindOneofCase.Bool) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bool);
      }
      if (kindCase_ == KindOneofCase.I8) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(I8);
      }
      if (kindCase_ == KindOneofCase.I16) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(I16);
      }
      if (kindCase_ == KindOneofCase.I32) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(I32);
      }
      if (kindCase_ == KindOneofCase.I64) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(I64);
      }
      if (kindCase_ == KindOneofCase.Fp32) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fp32);
      }
      if (kindCase_ == KindOneofCase.Fp64) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fp64);
      }
      if (kindCase_ == KindOneofCase.String) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(String);
      }
      if (kindCase_ == KindOneofCase.Binary) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Binary);
      }
      if (kindCase_ == KindOneofCase.Timestamp) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (kindCase_ == KindOneofCase.Date) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Date);
      }
      if (kindCase_ == KindOneofCase.Time) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (kindCase_ == KindOneofCase.IntervalYear) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(IntervalYear);
      }
      if (kindCase_ == KindOneofCase.IntervalDay) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(IntervalDay);
      }
      if (kindCase_ == KindOneofCase.TimestampTz) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TimestampTz);
      }
      if (kindCase_ == KindOneofCase.Uuid) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Uuid);
      }
      if (kindCase_ == KindOneofCase.FixedChar) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FixedChar);
      }
      if (kindCase_ == KindOneofCase.Varchar) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Varchar);
      }
      if (kindCase_ == KindOneofCase.FixedBinary) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FixedBinary);
      }
      if (kindCase_ == KindOneofCase.Decimal) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Decimal);
      }
      if (kindCase_ == KindOneofCase.Struct) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Struct);
      }
      if (kindCase_ == KindOneofCase.List) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(List);
      }
      if (kindCase_ == KindOneofCase.Map) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Map);
      }
      if (kindCase_ == KindOneofCase.UserDefined) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UserDefined);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Type other) {
      if (other == null) {
        return;
      }
      switch (other.KindCase) {
        case KindOneofCase.Bool:
          if (Bool == null) {
            Bool = new global::Substrait.Protobuf.Type.Types.Boolean();
          }
          Bool.MergeFrom(other.Bool);
          break;
        case KindOneofCase.I8:
          if (I8 == null) {
            I8 = new global::Substrait.Protobuf.Type.Types.I8();
          }
          I8.MergeFrom(other.I8);
          break;
        case KindOneofCase.I16:
          if (I16 == null) {
            I16 = new global::Substrait.Protobuf.Type.Types.I16();
          }
          I16.MergeFrom(other.I16);
          break;
        case KindOneofCase.I32:
          if (I32 == null) {
            I32 = new global::Substrait.Protobuf.Type.Types.I32();
          }
          I32.MergeFrom(other.I32);
          break;
        case KindOneofCase.I64:
          if (I64 == null) {
            I64 = new global::Substrait.Protobuf.Type.Types.I64();
          }
          I64.MergeFrom(other.I64);
          break;
        case KindOneofCase.Fp32:
          if (Fp32 == null) {
            Fp32 = new global::Substrait.Protobuf.Type.Types.FP32();
          }
          Fp32.MergeFrom(other.Fp32);
          break;
        case KindOneofCase.Fp64:
          if (Fp64 == null) {
            Fp64 = new global::Substrait.Protobuf.Type.Types.FP64();
          }
          Fp64.MergeFrom(other.Fp64);
          break;
        case KindOneofCase.String:
          if (String == null) {
            String = new global::Substrait.Protobuf.Type.Types.String();
          }
          String.MergeFrom(other.String);
          break;
        case KindOneofCase.Binary:
          if (Binary == null) {
            Binary = new global::Substrait.Protobuf.Type.Types.Binary();
          }
          Binary.MergeFrom(other.Binary);
          break;
        case KindOneofCase.Timestamp:
          if (Timestamp == null) {
            Timestamp = new global::Substrait.Protobuf.Type.Types.Timestamp();
          }
          Timestamp.MergeFrom(other.Timestamp);
          break;
        case KindOneofCase.Date:
          if (Date == null) {
            Date = new global::Substrait.Protobuf.Type.Types.Date();
          }
          Date.MergeFrom(other.Date);
          break;
        case KindOneofCase.Time:
          if (Time == null) {
            Time = new global::Substrait.Protobuf.Type.Types.Time();
          }
          Time.MergeFrom(other.Time);
          break;
        case KindOneofCase.IntervalYear:
          if (IntervalYear == null) {
            IntervalYear = new global::Substrait.Protobuf.Type.Types.IntervalYear();
          }
          IntervalYear.MergeFrom(other.IntervalYear);
          break;
        case KindOneofCase.IntervalDay:
          if (IntervalDay == null) {
            IntervalDay = new global::Substrait.Protobuf.Type.Types.IntervalDay();
          }
          IntervalDay.MergeFrom(other.IntervalDay);
          break;
        case KindOneofCase.TimestampTz:
          if (TimestampTz == null) {
            TimestampTz = new global::Substrait.Protobuf.Type.Types.TimestampTZ();
          }
          TimestampTz.MergeFrom(other.TimestampTz);
          break;
        case KindOneofCase.Uuid:
          if (Uuid == null) {
            Uuid = new global::Substrait.Protobuf.Type.Types.UUID();
          }
          Uuid.MergeFrom(other.Uuid);
          break;
        case KindOneofCase.FixedChar:
          if (FixedChar == null) {
            FixedChar = new global::Substrait.Protobuf.Type.Types.FixedChar();
          }
          FixedChar.MergeFrom(other.FixedChar);
          break;
        case KindOneofCase.Varchar:
          if (Varchar == null) {
            Varchar = new global::Substrait.Protobuf.Type.Types.VarChar();
          }
          Varchar.MergeFrom(other.Varchar);
          break;
        case KindOneofCase.FixedBinary:
          if (FixedBinary == null) {
            FixedBinary = new global::Substrait.Protobuf.Type.Types.FixedBinary();
          }
          FixedBinary.MergeFrom(other.FixedBinary);
          break;
        case KindOneofCase.Decimal:
          if (Decimal == null) {
            Decimal = new global::Substrait.Protobuf.Type.Types.Decimal();
          }
          Decimal.MergeFrom(other.Decimal);
          break;
        case KindOneofCase.Struct:
          if (Struct == null) {
            Struct = new global::Substrait.Protobuf.Type.Types.Struct();
          }
          Struct.MergeFrom(other.Struct);
          break;
        case KindOneofCase.List:
          if (List == null) {
            List = new global::Substrait.Protobuf.Type.Types.List();
          }
          List.MergeFrom(other.List);
          break;
        case KindOneofCase.Map:
          if (Map == null) {
            Map = new global::Substrait.Protobuf.Type.Types.Map();
          }
          Map.MergeFrom(other.Map);
          break;
        case KindOneofCase.UserDefined:
          if (UserDefined == null) {
            UserDefined = new global::Substrait.Protobuf.Extensions.Types.TypeId();
          }
          UserDefined.MergeFrom(other.UserDefined);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Substrait.Protobuf.Type.Types.Boolean subBuilder = new global::Substrait.Protobuf.Type.Types.Boolean();
            if (kindCase_ == KindOneofCase.Bool) {
              subBuilder.MergeFrom(Bool);
            }
            input.ReadMessage(subBuilder);
            Bool = subBuilder;
            break;
          }
          case 18: {
            global::Substrait.Protobuf.Type.Types.I8 subBuilder = new global::Substrait.Protobuf.Type.Types.I8();
            if (kindCase_ == KindOneofCase.I8) {
              subBuilder.MergeFrom(I8);
            }
            input.ReadMessage(subBuilder);
            I8 = subBuilder;
            break;
          }
          case 26: {
            global::Substrait.Protobuf.Type.Types.I16 subBuilder = new global::Substrait.Protobuf.Type.Types.I16();
            if (kindCase_ == KindOneofCase.I16) {
              subBuilder.MergeFrom(I16);
            }
            input.ReadMessage(subBuilder);
            I16 = subBuilder;
            break;
          }
          case 42: {
            global::Substrait.Protobuf.Type.Types.I32 subBuilder = new global::Substrait.Protobuf.Type.Types.I32();
            if (kindCase_ == KindOneofCase.I32) {
              subBuilder.MergeFrom(I32);
            }
            input.ReadMessage(subBuilder);
            I32 = subBuilder;
            break;
          }
          case 58: {
            global::Substrait.Protobuf.Type.Types.I64 subBuilder = new global::Substrait.Protobuf.Type.Types.I64();
            if (kindCase_ == KindOneofCase.I64) {
              subBuilder.MergeFrom(I64);
            }
            input.ReadMessage(subBuilder);
            I64 = subBuilder;
            break;
          }
          case 82: {
            global::Substrait.Protobuf.Type.Types.FP32 subBuilder = new global::Substrait.Protobuf.Type.Types.FP32();
            if (kindCase_ == KindOneofCase.Fp32) {
              subBuilder.MergeFrom(Fp32);
            }
            input.ReadMessage(subBuilder);
            Fp32 = subBuilder;
            break;
          }
          case 90: {
            global::Substrait.Protobuf.Type.Types.FP64 subBuilder = new global::Substrait.Protobuf.Type.Types.FP64();
            if (kindCase_ == KindOneofCase.Fp64) {
              subBuilder.MergeFrom(Fp64);
            }
            input.ReadMessage(subBuilder);
            Fp64 = subBuilder;
            break;
          }
          case 98: {
            global::Substrait.Protobuf.Type.Types.String subBuilder = new global::Substrait.Protobuf.Type.Types.String();
            if (kindCase_ == KindOneofCase.String) {
              subBuilder.MergeFrom(String);
            }
            input.ReadMessage(subBuilder);
            String = subBuilder;
            break;
          }
          case 106: {
            global::Substrait.Protobuf.Type.Types.Binary subBuilder = new global::Substrait.Protobuf.Type.Types.Binary();
            if (kindCase_ == KindOneofCase.Binary) {
              subBuilder.MergeFrom(Binary);
            }
            input.ReadMessage(subBuilder);
            Binary = subBuilder;
            break;
          }
          case 114: {
            global::Substrait.Protobuf.Type.Types.Timestamp subBuilder = new global::Substrait.Protobuf.Type.Types.Timestamp();
            if (kindCase_ == KindOneofCase.Timestamp) {
              subBuilder.MergeFrom(Timestamp);
            }
            input.ReadMessage(subBuilder);
            Timestamp = subBuilder;
            break;
          }
          case 130: {
            global::Substrait.Protobuf.Type.Types.Date subBuilder = new global::Substrait.Protobuf.Type.Types.Date();
            if (kindCase_ == KindOneofCase.Date) {
              subBuilder.MergeFrom(Date);
            }
            input.ReadMessage(subBuilder);
            Date = subBuilder;
            break;
          }
          case 138: {
            global::Substrait.Protobuf.Type.Types.Time subBuilder = new global::Substrait.Protobuf.Type.Types.Time();
            if (kindCase_ == KindOneofCase.Time) {
              subBuilder.MergeFrom(Time);
            }
            input.ReadMessage(subBuilder);
            Time = subBuilder;
            break;
          }
          case 154: {
            global::Substrait.Protobuf.Type.Types.IntervalYear subBuilder = new global::Substrait.Protobuf.Type.Types.IntervalYear();
            if (kindCase_ == KindOneofCase.IntervalYear) {
              subBuilder.MergeFrom(IntervalYear);
            }
            input.ReadMessage(subBuilder);
            IntervalYear = subBuilder;
            break;
          }
          case 162: {
            global::Substrait.Protobuf.Type.Types.IntervalDay subBuilder = new global::Substrait.Protobuf.Type.Types.IntervalDay();
            if (kindCase_ == KindOneofCase.IntervalDay) {
              subBuilder.MergeFrom(IntervalDay);
            }
            input.ReadMessage(subBuilder);
            IntervalDay = subBuilder;
            break;
          }
          case 170: {
            global::Substrait.Protobuf.Type.Types.FixedChar subBuilder = new global::Substrait.Protobuf.Type.Types.FixedChar();
            if (kindCase_ == KindOneofCase.FixedChar) {
              subBuilder.MergeFrom(FixedChar);
            }
            input.ReadMessage(subBuilder);
            FixedChar = subBuilder;
            break;
          }
          case 178: {
            global::Substrait.Protobuf.Type.Types.VarChar subBuilder = new global::Substrait.Protobuf.Type.Types.VarChar();
            if (kindCase_ == KindOneofCase.Varchar) {
              subBuilder.MergeFrom(Varchar);
            }
            input.ReadMessage(subBuilder);
            Varchar = subBuilder;
            break;
          }
          case 186: {
            global::Substrait.Protobuf.Type.Types.FixedBinary subBuilder = new global::Substrait.Protobuf.Type.Types.FixedBinary();
            if (kindCase_ == KindOneofCase.FixedBinary) {
              subBuilder.MergeFrom(FixedBinary);
            }
            input.ReadMessage(subBuilder);
            FixedBinary = subBuilder;
            break;
          }
          case 194: {
            global::Substrait.Protobuf.Type.Types.Decimal subBuilder = new global::Substrait.Protobuf.Type.Types.Decimal();
            if (kindCase_ == KindOneofCase.Decimal) {
              subBuilder.MergeFrom(Decimal);
            }
            input.ReadMessage(subBuilder);
            Decimal = subBuilder;
            break;
          }
          case 202: {
            global::Substrait.Protobuf.Type.Types.Struct subBuilder = new global::Substrait.Protobuf.Type.Types.Struct();
            if (kindCase_ == KindOneofCase.Struct) {
              subBuilder.MergeFrom(Struct);
            }
            input.ReadMessage(subBuilder);
            Struct = subBuilder;
            break;
          }
          case 218: {
            global::Substrait.Protobuf.Type.Types.List subBuilder = new global::Substrait.Protobuf.Type.Types.List();
            if (kindCase_ == KindOneofCase.List) {
              subBuilder.MergeFrom(List);
            }
            input.ReadMessage(subBuilder);
            List = subBuilder;
            break;
          }
          case 226: {
            global::Substrait.Protobuf.Type.Types.Map subBuilder = new global::Substrait.Protobuf.Type.Types.Map();
            if (kindCase_ == KindOneofCase.Map) {
              subBuilder.MergeFrom(Map);
            }
            input.ReadMessage(subBuilder);
            Map = subBuilder;
            break;
          }
          case 234: {
            global::Substrait.Protobuf.Type.Types.TimestampTZ subBuilder = new global::Substrait.Protobuf.Type.Types.TimestampTZ();
            if (kindCase_ == KindOneofCase.TimestampTz) {
              subBuilder.MergeFrom(TimestampTz);
            }
            input.ReadMessage(subBuilder);
            TimestampTz = subBuilder;
            break;
          }
          case 250: {
            global::Substrait.Protobuf.Extensions.Types.TypeId subBuilder = new global::Substrait.Protobuf.Extensions.Types.TypeId();
            if (kindCase_ == KindOneofCase.UserDefined) {
              subBuilder.MergeFrom(UserDefined);
            }
            input.ReadMessage(subBuilder);
            UserDefined = subBuilder;
            break;
          }
          case 258: {
            global::Substrait.Protobuf.Type.Types.UUID subBuilder = new global::Substrait.Protobuf.Type.Types.UUID();
            if (kindCase_ == KindOneofCase.Uuid) {
              subBuilder.MergeFrom(Uuid);
            }
            input.ReadMessage(subBuilder);
            Uuid = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Substrait.Protobuf.Type.Types.Boolean subBuilder = new global::Substrait.Protobuf.Type.Types.Boolean();
            if (kindCase_ == KindOneofCase.Bool) {
              subBuilder.MergeFrom(Bool);
            }
            input.ReadMessage(subBuilder);
            Bool = subBuilder;
            break;
          }
          case 18: {
            global::Substrait.Protobuf.Type.Types.I8 subBuilder = new global::Substrait.Protobuf.Type.Types.I8();
            if (kindCase_ == KindOneofCase.I8) {
              subBuilder.MergeFrom(I8);
            }
            input.ReadMessage(subBuilder);
            I8 = subBuilder;
            break;
          }
          case 26: {
            global::Substrait.Protobuf.Type.Types.I16 subBuilder = new global::Substrait.Protobuf.Type.Types.I16();
            if (kindCase_ == KindOneofCase.I16) {
              subBuilder.MergeFrom(I16);
            }
            input.ReadMessage(subBuilder);
            I16 = subBuilder;
            break;
          }
          case 42: {
            global::Substrait.Protobuf.Type.Types.I32 subBuilder = new global::Substrait.Protobuf.Type.Types.I32();
            if (kindCase_ == KindOneofCase.I32) {
              subBuilder.MergeFrom(I32);
            }
            input.ReadMessage(subBuilder);
            I32 = subBuilder;
            break;
          }
          case 58: {
            global::Substrait.Protobuf.Type.Types.I64 subBuilder = new global::Substrait.Protobuf.Type.Types.I64();
            if (kindCase_ == KindOneofCase.I64) {
              subBuilder.MergeFrom(I64);
            }
            input.ReadMessage(subBuilder);
            I64 = subBuilder;
            break;
          }
          case 82: {
            global::Substrait.Protobuf.Type.Types.FP32 subBuilder = new global::Substrait.Protobuf.Type.Types.FP32();
            if (kindCase_ == KindOneofCase.Fp32) {
              subBuilder.MergeFrom(Fp32);
            }
            input.ReadMessage(subBuilder);
            Fp32 = subBuilder;
            break;
          }
          case 90: {
            global::Substrait.Protobuf.Type.Types.FP64 subBuilder = new global::Substrait.Protobuf.Type.Types.FP64();
            if (kindCase_ == KindOneofCase.Fp64) {
              subBuilder.MergeFrom(Fp64);
            }
            input.ReadMessage(subBuilder);
            Fp64 = subBuilder;
            break;
          }
          case 98: {
            global::Substrait.Protobuf.Type.Types.String subBuilder = new global::Substrait.Protobuf.Type.Types.String();
            if (kindCase_ == KindOneofCase.String) {
              subBuilder.MergeFrom(String);
            }
            input.ReadMessage(subBuilder);
            String = subBuilder;
            break;
          }
          case 106: {
            global::Substrait.Protobuf.Type.Types.Binary subBuilder = new global::Substrait.Protobuf.Type.Types.Binary();
            if (kindCase_ == KindOneofCase.Binary) {
              subBuilder.MergeFrom(Binary);
            }
            input.ReadMessage(subBuilder);
            Binary = subBuilder;
            break;
          }
          case 114: {
            global::Substrait.Protobuf.Type.Types.Timestamp subBuilder = new global::Substrait.Protobuf.Type.Types.Timestamp();
            if (kindCase_ == KindOneofCase.Timestamp) {
              subBuilder.MergeFrom(Timestamp);
            }
            input.ReadMessage(subBuilder);
            Timestamp = subBuilder;
            break;
          }
          case 130: {
            global::Substrait.Protobuf.Type.Types.Date subBuilder = new global::Substrait.Protobuf.Type.Types.Date();
            if (kindCase_ == KindOneofCase.Date) {
              subBuilder.MergeFrom(Date);
            }
            input.ReadMessage(subBuilder);
            Date = subBuilder;
            break;
          }
          case 138: {
            global::Substrait.Protobuf.Type.Types.Time subBuilder = new global::Substrait.Protobuf.Type.Types.Time();
            if (kindCase_ == KindOneofCase.Time) {
              subBuilder.MergeFrom(Time);
            }
            input.ReadMessage(subBuilder);
            Time = subBuilder;
            break;
          }
          case 154: {
            global::Substrait.Protobuf.Type.Types.IntervalYear subBuilder = new global::Substrait.Protobuf.Type.Types.IntervalYear();
            if (kindCase_ == KindOneofCase.IntervalYear) {
              subBuilder.MergeFrom(IntervalYear);
            }
            input.ReadMessage(subBuilder);
            IntervalYear = subBuilder;
            break;
          }
          case 162: {
            global::Substrait.Protobuf.Type.Types.IntervalDay subBuilder = new global::Substrait.Protobuf.Type.Types.IntervalDay();
            if (kindCase_ == KindOneofCase.IntervalDay) {
              subBuilder.MergeFrom(IntervalDay);
            }
            input.ReadMessage(subBuilder);
            IntervalDay = subBuilder;
            break;
          }
          case 170: {
            global::Substrait.Protobuf.Type.Types.FixedChar subBuilder = new global::Substrait.Protobuf.Type.Types.FixedChar();
            if (kindCase_ == KindOneofCase.FixedChar) {
              subBuilder.MergeFrom(FixedChar);
            }
            input.ReadMessage(subBuilder);
            FixedChar = subBuilder;
            break;
          }
          case 178: {
            global::Substrait.Protobuf.Type.Types.VarChar subBuilder = new global::Substrait.Protobuf.Type.Types.VarChar();
            if (kindCase_ == KindOneofCase.Varchar) {
              subBuilder.MergeFrom(Varchar);
            }
            input.ReadMessage(subBuilder);
            Varchar = subBuilder;
            break;
          }
          case 186: {
            global::Substrait.Protobuf.Type.Types.FixedBinary subBuilder = new global::Substrait.Protobuf.Type.Types.FixedBinary();
            if (kindCase_ == KindOneofCase.FixedBinary) {
              subBuilder.MergeFrom(FixedBinary);
            }
            input.ReadMessage(subBuilder);
            FixedBinary = subBuilder;
            break;
          }
          case 194: {
            global::Substrait.Protobuf.Type.Types.Decimal subBuilder = new global::Substrait.Protobuf.Type.Types.Decimal();
            if (kindCase_ == KindOneofCase.Decimal) {
              subBuilder.MergeFrom(Decimal);
            }
            input.ReadMessage(subBuilder);
            Decimal = subBuilder;
            break;
          }
          case 202: {
            global::Substrait.Protobuf.Type.Types.Struct subBuilder = new global::Substrait.Protobuf.Type.Types.Struct();
            if (kindCase_ == KindOneofCase.Struct) {
              subBuilder.MergeFrom(Struct);
            }
            input.ReadMessage(subBuilder);
            Struct = subBuilder;
            break;
          }
          case 218: {
            global::Substrait.Protobuf.Type.Types.List subBuilder = new global::Substrait.Protobuf.Type.Types.List();
            if (kindCase_ == KindOneofCase.List) {
              subBuilder.MergeFrom(List);
            }
            input.ReadMessage(subBuilder);
            List = subBuilder;
            break;
          }
          case 226: {
            global::Substrait.Protobuf.Type.Types.Map subBuilder = new global::Substrait.Protobuf.Type.Types.Map();
            if (kindCase_ == KindOneofCase.Map) {
              subBuilder.MergeFrom(Map);
            }
            input.ReadMessage(subBuilder);
            Map = subBuilder;
            break;
          }
          case 234: {
            global::Substrait.Protobuf.Type.Types.TimestampTZ subBuilder = new global::Substrait.Protobuf.Type.Types.TimestampTZ();
            if (kindCase_ == KindOneofCase.TimestampTz) {
              subBuilder.MergeFrom(TimestampTz);
            }
            input.ReadMessage(subBuilder);
            TimestampTz = subBuilder;
            break;
          }
          case 250: {
            global::Substrait.Protobuf.Extensions.Types.TypeId subBuilder = new global::Substrait.Protobuf.Extensions.Types.TypeId();
            if (kindCase_ == KindOneofCase.UserDefined) {
              subBuilder.MergeFrom(UserDefined);
            }
            input.ReadMessage(subBuilder);
            UserDefined = subBuilder;
            break;
          }
          case 258: {
            global::Substrait.Protobuf.Type.Types.UUID subBuilder = new global::Substrait.Protobuf.Type.Types.UUID();
            if (kindCase_ == KindOneofCase.Uuid) {
              subBuilder.MergeFrom(Uuid);
            }
            input.ReadMessage(subBuilder);
            Uuid = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the Type message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Nullability {
        [pbr::OriginalName("NULLABLE")] Nullable = 0,
        [pbr::OriginalName("REQUIRED")] Required = 1,
      }

      public sealed partial class Boolean : pb::IMessage<Boolean>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Boolean> _parser = new pb::MessageParser<Boolean>(() => new Boolean());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Boolean> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.Type.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Boolean() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Boolean(Boolean other) : this() {
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Boolean Clone() {
          return new Boolean(this);
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 1;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Boolean);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Boolean other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Boolean other) {
          if (other == null) {
            return;
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class I8 : pb::IMessage<I8>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<I8> _parser = new pb::MessageParser<I8>(() => new I8());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<I8> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.Type.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public I8() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public I8(I8 other) : this() {
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public I8 Clone() {
          return new I8(this);
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 1;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as I8);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(I8 other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(I8 other) {
          if (other == null) {
            return;
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class I16 : pb::IMessage<I16>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<I16> _parser = new pb::MessageParser<I16>(() => new I16());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<I16> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.Type.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public I16() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public I16(I16 other) : this() {
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public I16 Clone() {
          return new I16(this);
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 1;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as I16);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(I16 other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(I16 other) {
          if (other == null) {
            return;
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class I32 : pb::IMessage<I32>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<I32> _parser = new pb::MessageParser<I32>(() => new I32());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<I32> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.Type.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public I32() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public I32(I32 other) : this() {
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public I32 Clone() {
          return new I32(this);
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 1;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as I32);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(I32 other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(I32 other) {
          if (other == null) {
            return;
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class I64 : pb::IMessage<I64>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<I64> _parser = new pb::MessageParser<I64>(() => new I64());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<I64> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.Type.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public I64() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public I64(I64 other) : this() {
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public I64 Clone() {
          return new I64(this);
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 1;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as I64);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(I64 other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(I64 other) {
          if (other == null) {
            return;
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class FP32 : pb::IMessage<FP32>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<FP32> _parser = new pb::MessageParser<FP32>(() => new FP32());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FP32> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.Type.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FP32() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FP32(FP32 other) : this() {
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FP32 Clone() {
          return new FP32(this);
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 1;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FP32);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FP32 other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FP32 other) {
          if (other == null) {
            return;
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class FP64 : pb::IMessage<FP64>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<FP64> _parser = new pb::MessageParser<FP64>(() => new FP64());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FP64> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.Type.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FP64() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FP64(FP64 other) : this() {
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FP64 Clone() {
          return new FP64(this);
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 1;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FP64);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FP64 other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FP64 other) {
          if (other == null) {
            return;
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class String : pb::IMessage<String>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<String> _parser = new pb::MessageParser<String>(() => new String());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<String> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.Type.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public String() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public String(String other) : this() {
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public String Clone() {
          return new String(this);
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 1;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as String);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(String other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(String other) {
          if (other == null) {
            return;
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Binary : pb::IMessage<Binary>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Binary> _parser = new pb::MessageParser<Binary>(() => new Binary());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Binary> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.Type.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Binary() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Binary(Binary other) : this() {
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Binary Clone() {
          return new Binary(this);
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 1;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Binary);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Binary other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Binary other) {
          if (other == null) {
            return;
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Timestamp : pb::IMessage<Timestamp>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Timestamp> _parser = new pb::MessageParser<Timestamp>(() => new Timestamp());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Timestamp> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.Type.Descriptor.NestedTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Timestamp() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Timestamp(Timestamp other) : this() {
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Timestamp Clone() {
          return new Timestamp(this);
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 1;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Timestamp);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Timestamp other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Timestamp other) {
          if (other == null) {
            return;
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Date : pb::IMessage<Date>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Date> _parser = new pb::MessageParser<Date>(() => new Date());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Date> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.Type.Descriptor.NestedTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Date() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Date(Date other) : this() {
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Date Clone() {
          return new Date(this);
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 1;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Date);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Date other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Date other) {
          if (other == null) {
            return;
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Time : pb::IMessage<Time>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Time> _parser = new pb::MessageParser<Time>(() => new Time());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Time> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.Type.Descriptor.NestedTypes[11]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Time() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Time(Time other) : this() {
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Time Clone() {
          return new Time(this);
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 1;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Time);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Time other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Time other) {
          if (other == null) {
            return;
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class TimestampTZ : pb::IMessage<TimestampTZ>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TimestampTZ> _parser = new pb::MessageParser<TimestampTZ>(() => new TimestampTZ());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<TimestampTZ> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.Type.Descriptor.NestedTypes[12]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TimestampTZ() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TimestampTZ(TimestampTZ other) : this() {
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public TimestampTZ Clone() {
          return new TimestampTZ(this);
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 1;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as TimestampTZ);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(TimestampTZ other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(TimestampTZ other) {
          if (other == null) {
            return;
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class IntervalYear : pb::IMessage<IntervalYear>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<IntervalYear> _parser = new pb::MessageParser<IntervalYear>(() => new IntervalYear());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<IntervalYear> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.Type.Descriptor.NestedTypes[13]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public IntervalYear() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public IntervalYear(IntervalYear other) : this() {
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public IntervalYear Clone() {
          return new IntervalYear(this);
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 1;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as IntervalYear);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(IntervalYear other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(IntervalYear other) {
          if (other == null) {
            return;
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class IntervalDay : pb::IMessage<IntervalDay>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<IntervalDay> _parser = new pb::MessageParser<IntervalDay>(() => new IntervalDay());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<IntervalDay> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.Type.Descriptor.NestedTypes[14]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public IntervalDay() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public IntervalDay(IntervalDay other) : this() {
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public IntervalDay Clone() {
          return new IntervalDay(this);
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 1;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as IntervalDay);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(IntervalDay other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(IntervalDay other) {
          if (other == null) {
            return;
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class UUID : pb::IMessage<UUID>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<UUID> _parser = new pb::MessageParser<UUID>(() => new UUID());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UUID> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.Type.Descriptor.NestedTypes[15]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UUID() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UUID(UUID other) : this() {
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UUID Clone() {
          return new UUID(this);
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 1;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UUID);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UUID other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (variation_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UUID other) {
          if (other == null) {
            return;
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 16: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      /// <summary>
      /// Start compound types.
      /// </summary>
      public sealed partial class FixedChar : pb::IMessage<FixedChar>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<FixedChar> _parser = new pb::MessageParser<FixedChar>(() => new FixedChar());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FixedChar> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.Type.Descriptor.NestedTypes[16]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FixedChar() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FixedChar(FixedChar other) : this() {
          length_ = other.length_;
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FixedChar Clone() {
          return new FixedChar(this);
        }

        /// <summary>Field number for the "length" field.</summary>
        public const int LengthFieldNumber = 1;
        private int length_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Length {
          get { return length_; }
          set {
            length_ = value;
          }
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 3;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FixedChar);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FixedChar other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Length != other.Length) return false;
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Length != 0) hash ^= Length.GetHashCode();
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Length != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Length);
          }
          if (variation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Length != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Length);
          }
          if (variation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Length);
          }
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FixedChar other) {
          if (other == null) {
            return;
          }
          if (other.Length != 0) {
            Length = other.Length;
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Length = input.ReadInt32();
                break;
              }
              case 18: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 24: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Length = input.ReadInt32();
                break;
              }
              case 18: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 24: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class VarChar : pb::IMessage<VarChar>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<VarChar> _parser = new pb::MessageParser<VarChar>(() => new VarChar());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<VarChar> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.Type.Descriptor.NestedTypes[17]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VarChar() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VarChar(VarChar other) : this() {
          length_ = other.length_;
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VarChar Clone() {
          return new VarChar(this);
        }

        /// <summary>Field number for the "length" field.</summary>
        public const int LengthFieldNumber = 1;
        private int length_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Length {
          get { return length_; }
          set {
            length_ = value;
          }
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 3;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as VarChar);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(VarChar other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Length != other.Length) return false;
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Length != 0) hash ^= Length.GetHashCode();
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Length != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Length);
          }
          if (variation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Length != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Length);
          }
          if (variation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Length);
          }
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(VarChar other) {
          if (other == null) {
            return;
          }
          if (other.Length != 0) {
            Length = other.Length;
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Length = input.ReadInt32();
                break;
              }
              case 18: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 24: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Length = input.ReadInt32();
                break;
              }
              case 18: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 24: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class FixedBinary : pb::IMessage<FixedBinary>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<FixedBinary> _parser = new pb::MessageParser<FixedBinary>(() => new FixedBinary());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FixedBinary> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.Type.Descriptor.NestedTypes[18]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FixedBinary() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FixedBinary(FixedBinary other) : this() {
          length_ = other.length_;
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FixedBinary Clone() {
          return new FixedBinary(this);
        }

        /// <summary>Field number for the "length" field.</summary>
        public const int LengthFieldNumber = 1;
        private int length_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Length {
          get { return length_; }
          set {
            length_ = value;
          }
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 3;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FixedBinary);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FixedBinary other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Length != other.Length) return false;
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Length != 0) hash ^= Length.GetHashCode();
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Length != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Length);
          }
          if (variation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Length != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Length);
          }
          if (variation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Length);
          }
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FixedBinary other) {
          if (other == null) {
            return;
          }
          if (other.Length != 0) {
            Length = other.Length;
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Length = input.ReadInt32();
                break;
              }
              case 18: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 24: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Length = input.ReadInt32();
                break;
              }
              case 18: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 24: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Decimal : pb::IMessage<Decimal>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Decimal> _parser = new pb::MessageParser<Decimal>(() => new Decimal());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Decimal> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.Type.Descriptor.NestedTypes[19]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Decimal() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Decimal(Decimal other) : this() {
          scale_ = other.scale_;
          precision_ = other.precision_;
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Decimal Clone() {
          return new Decimal(this);
        }

        /// <summary>Field number for the "scale" field.</summary>
        public const int ScaleFieldNumber = 1;
        private int scale_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Scale {
          get { return scale_; }
          set {
            scale_ = value;
          }
        }

        /// <summary>Field number for the "precision" field.</summary>
        public const int PrecisionFieldNumber = 2;
        private int precision_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Precision {
          get { return precision_; }
          set {
            precision_ = value;
          }
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 3;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 4;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Decimal);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Decimal other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Scale != other.Scale) return false;
          if (Precision != other.Precision) return false;
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Scale != 0) hash ^= Scale.GetHashCode();
          if (Precision != 0) hash ^= Precision.GetHashCode();
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Scale != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Scale);
          }
          if (Precision != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Precision);
          }
          if (variation_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(32);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Scale != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Scale);
          }
          if (Precision != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(Precision);
          }
          if (variation_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(32);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Scale != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Scale);
          }
          if (Precision != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Precision);
          }
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Decimal other) {
          if (other == null) {
            return;
          }
          if (other.Scale != 0) {
            Scale = other.Scale;
          }
          if (other.Precision != 0) {
            Precision = other.Precision;
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Scale = input.ReadInt32();
                break;
              }
              case 16: {
                Precision = input.ReadInt32();
                break;
              }
              case 26: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 32: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Scale = input.ReadInt32();
                break;
              }
              case 16: {
                Precision = input.ReadInt32();
                break;
              }
              case 26: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 32: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Struct : pb::IMessage<Struct>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Struct> _parser = new pb::MessageParser<Struct>(() => new Struct());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Struct> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.Type.Descriptor.NestedTypes[20]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Struct() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Struct(Struct other) : this() {
          types_ = other.types_.Clone();
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Struct Clone() {
          return new Struct(this);
        }

        /// <summary>Field number for the "types" field.</summary>
        public const int Types_FieldNumber = 1;
        private static readonly pb::FieldCodec<global::Substrait.Protobuf.Type> _repeated_types_codec
            = pb::FieldCodec.ForMessage(10, global::Substrait.Protobuf.Type.Parser);
        private readonly pbc::RepeatedField<global::Substrait.Protobuf.Type> types_ = new pbc::RepeatedField<global::Substrait.Protobuf.Type>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Substrait.Protobuf.Type> Types_ {
          get { return types_; }
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 3;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Struct);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Struct other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!types_.Equals(other.types_)) return false;
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= types_.GetHashCode();
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          types_.WriteTo(output, _repeated_types_codec);
          if (variation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          types_.WriteTo(ref output, _repeated_types_codec);
          if (variation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += types_.CalculateSize(_repeated_types_codec);
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Struct other) {
          if (other == null) {
            return;
          }
          types_.Add(other.types_);
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                types_.AddEntriesFrom(input, _repeated_types_codec);
                break;
              }
              case 18: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 24: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                types_.AddEntriesFrom(ref input, _repeated_types_codec);
                break;
              }
              case 18: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 24: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class NamedStruct : pb::IMessage<NamedStruct>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<NamedStruct> _parser = new pb::MessageParser<NamedStruct>(() => new NamedStruct());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<NamedStruct> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.Type.Descriptor.NestedTypes[21]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NamedStruct() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NamedStruct(NamedStruct other) : this() {
          names_ = other.names_.Clone();
          struct_ = other.struct_ != null ? other.struct_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public NamedStruct Clone() {
          return new NamedStruct(this);
        }

        /// <summary>Field number for the "names" field.</summary>
        public const int NamesFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_names_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> names_ = new pbc::RepeatedField<string>();
        /// <summary>
        /// list of names in dfs order
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Names {
          get { return names_; }
        }

        /// <summary>Field number for the "struct" field.</summary>
        public const int StructFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Struct struct_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Struct Struct {
          get { return struct_; }
          set {
            struct_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as NamedStruct);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(NamedStruct other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!names_.Equals(other.names_)) return false;
          if (!object.Equals(Struct, other.Struct)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= names_.GetHashCode();
          if (struct_ != null) hash ^= Struct.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          names_.WriteTo(output, _repeated_names_codec);
          if (struct_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Struct);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          names_.WriteTo(ref output, _repeated_names_codec);
          if (struct_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Struct);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += names_.CalculateSize(_repeated_names_codec);
          if (struct_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Struct);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(NamedStruct other) {
          if (other == null) {
            return;
          }
          names_.Add(other.names_);
          if (other.struct_ != null) {
            if (struct_ == null) {
              Struct = new global::Substrait.Protobuf.Type.Types.Struct();
            }
            Struct.MergeFrom(other.Struct);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                names_.AddEntriesFrom(input, _repeated_names_codec);
                break;
              }
              case 18: {
                if (struct_ == null) {
                  Struct = new global::Substrait.Protobuf.Type.Types.Struct();
                }
                input.ReadMessage(Struct);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                names_.AddEntriesFrom(ref input, _repeated_names_codec);
                break;
              }
              case 18: {
                if (struct_ == null) {
                  Struct = new global::Substrait.Protobuf.Type.Types.Struct();
                }
                input.ReadMessage(Struct);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class List : pb::IMessage<List>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<List> _parser = new pb::MessageParser<List>(() => new List());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<List> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.Type.Descriptor.NestedTypes[22]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public List() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public List(List other) : this() {
          type_ = other.type_ != null ? other.type_.Clone() : null;
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public List Clone() {
          return new List(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private global::Substrait.Protobuf.Type type_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 3;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as List);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(List other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Type, other.Type)) return false;
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (type_ != null) hash ^= Type.GetHashCode();
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (type_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Type);
          }
          if (variation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (type_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Type);
          }
          if (variation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (type_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Type);
          }
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(List other) {
          if (other == null) {
            return;
          }
          if (other.type_ != null) {
            if (type_ == null) {
              Type = new global::Substrait.Protobuf.Type();
            }
            Type.MergeFrom(other.Type);
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (type_ == null) {
                  Type = new global::Substrait.Protobuf.Type();
                }
                input.ReadMessage(Type);
                break;
              }
              case 18: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 24: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (type_ == null) {
                  Type = new global::Substrait.Protobuf.Type();
                }
                input.ReadMessage(Type);
                break;
              }
              case 18: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 24: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Map : pb::IMessage<Map>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Map> _parser = new pb::MessageParser<Map>(() => new Map());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Map> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.Type.Descriptor.NestedTypes[23]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Map() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Map(Map other) : this() {
          key_ = other.key_ != null ? other.key_.Clone() : null;
          value_ = other.value_ != null ? other.value_.Clone() : null;
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Map Clone() {
          return new Map(this);
        }

        /// <summary>Field number for the "key" field.</summary>
        public const int KeyFieldNumber = 1;
        private global::Substrait.Protobuf.Type key_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type Key {
          get { return key_; }
          set {
            key_ = value;
          }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;
        private global::Substrait.Protobuf.Type value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type Value {
          get { return value_; }
          set {
            value_ = value;
          }
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 3;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 4;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Map);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Map other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Key, other.Key)) return false;
          if (!object.Equals(Value, other.Value)) return false;
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (key_ != null) hash ^= Key.GetHashCode();
          if (value_ != null) hash ^= Value.GetHashCode();
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (key_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Key);
          }
          if (value_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Value);
          }
          if (variation_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(32);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (key_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Key);
          }
          if (value_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Value);
          }
          if (variation_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(32);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (key_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
          }
          if (value_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
          }
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Map other) {
          if (other == null) {
            return;
          }
          if (other.key_ != null) {
            if (key_ == null) {
              Key = new global::Substrait.Protobuf.Type();
            }
            Key.MergeFrom(other.Key);
          }
          if (other.value_ != null) {
            if (value_ == null) {
              Value = new global::Substrait.Protobuf.Type();
            }
            Value.MergeFrom(other.Value);
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (key_ == null) {
                  Key = new global::Substrait.Protobuf.Type();
                }
                input.ReadMessage(Key);
                break;
              }
              case 18: {
                if (value_ == null) {
                  Value = new global::Substrait.Protobuf.Type();
                }
                input.ReadMessage(Value);
                break;
              }
              case 26: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 32: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (key_ == null) {
                  Key = new global::Substrait.Protobuf.Type();
                }
                input.ReadMessage(Key);
                break;
              }
              case 18: {
                if (value_ == null) {
                  Value = new global::Substrait.Protobuf.Type();
                }
                input.ReadMessage(Value);
                break;
              }
              case 26: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 32: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class Variation : pb::IMessage<Variation>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Variation> _parser = new pb::MessageParser<Variation>(() => new Variation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Variation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.Type.Descriptor.NestedTypes[24]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Variation() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Variation(Variation other) : this() {
          organization_ = other.organization_;
          name_ = other.name_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Variation Clone() {
          return new Variation(this);
        }

        /// <summary>Field number for the "organization" field.</summary>
        public const int OrganizationFieldNumber = 1;
        private int organization_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Organization {
          get { return organization_; }
          set {
            organization_ = value;
          }
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 2;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Variation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Variation other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Organization != other.Organization) return false;
          if (Name != other.Name) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Organization != 0) hash ^= Organization.GetHashCode();
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Organization != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Organization);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Organization != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(Organization);
          }
          if (Name.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Name);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Organization != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(Organization);
          }
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Variation other) {
          if (other == null) {
            return;
          }
          if (other.Organization != 0) {
            Organization = other.Organization;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Organization = input.ReadInt32();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Organization = input.ReadInt32();
                break;
              }
              case 18: {
                Name = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
