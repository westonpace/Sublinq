// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: type_expressions.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Substrait.Protobuf {

  /// <summary>Holder for reflection information generated from type_expressions.proto</summary>
  public static partial class TypeExpressionsReflection {

    #region Descriptor
    /// <summary>File descriptor for type_expressions.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TypeExpressionsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZ0eXBlX2V4cHJlc3Npb25zLnByb3RvEgxpby5zdWJzdHJhaXQaCnR5cGUu",
            "cHJvdG8aEGV4dGVuc2lvbnMucHJvdG8ijx0KFERlcml2YXRpb25FeHByZXNz",
            "aW9uEioKBGJvb2wYASABKAsyGi5pby5zdWJzdHJhaXQuVHlwZS5Cb29sZWFu",
            "SAASIwoCaTgYAiABKAsyFS5pby5zdWJzdHJhaXQuVHlwZS5JOEgAEiUKA2kx",
            "NhgDIAEoCzIWLmlvLnN1YnN0cmFpdC5UeXBlLkkxNkgAEiUKA2kzMhgFIAEo",
            "CzIWLmlvLnN1YnN0cmFpdC5UeXBlLkkzMkgAEiUKA2k2NBgHIAEoCzIWLmlv",
            "LnN1YnN0cmFpdC5UeXBlLkk2NEgAEicKBGZwMzIYCiABKAsyFy5pby5zdWJz",
            "dHJhaXQuVHlwZS5GUDMySAASJwoEZnA2NBgLIAEoCzIXLmlvLnN1YnN0cmFp",
            "dC5UeXBlLkZQNjRIABIrCgZzdHJpbmcYDCABKAsyGS5pby5zdWJzdHJhaXQu",
            "VHlwZS5TdHJpbmdIABIrCgZiaW5hcnkYDSABKAsyGS5pby5zdWJzdHJhaXQu",
            "VHlwZS5CaW5hcnlIABIxCgl0aW1lc3RhbXAYDiABKAsyHC5pby5zdWJzdHJh",
            "aXQuVHlwZS5UaW1lc3RhbXBIABInCgRkYXRlGBAgASgLMhcuaW8uc3Vic3Ry",
            "YWl0LlR5cGUuRGF0ZUgAEicKBHRpbWUYESABKAsyFy5pby5zdWJzdHJhaXQu",
            "VHlwZS5UaW1lSAASOAoNaW50ZXJ2YWxfeWVhchgTIAEoCzIfLmlvLnN1YnN0",
            "cmFpdC5UeXBlLkludGVydmFsWWVhckgAEjYKDGludGVydmFsX2RheRgUIAEo",
            "CzIeLmlvLnN1YnN0cmFpdC5UeXBlLkludGVydmFsRGF5SAASNgoMdGltZXN0",
            "YW1wX3R6GB0gASgLMh4uaW8uc3Vic3RyYWl0LlR5cGUuVGltZXN0YW1wVFpI",
            "ABInCgR1dWlkGCAgASgLMhcuaW8uc3Vic3RyYWl0LlR5cGUuVVVJREgAEkwK",
            "CmZpeGVkX2NoYXIYFSABKAsyNi5pby5zdWJzdHJhaXQuRGVyaXZhdGlvbkV4",
            "cHJlc3Npb24uRXhwcmVzc2lvbkZpeGVkQ2hhckgAEkcKB3ZhcmNoYXIYFiAB",
            "KAsyNC5pby5zdWJzdHJhaXQuRGVyaXZhdGlvbkV4cHJlc3Npb24uRXhwcmVz",
            "c2lvblZhckNoYXJIABJQCgxmaXhlZF9iaW5hcnkYFyABKAsyOC5pby5zdWJz",
            "dHJhaXQuRGVyaXZhdGlvbkV4cHJlc3Npb24uRXhwcmVzc2lvbkZpeGVkQmlu",
            "YXJ5SAASRwoHZGVjaW1hbBgYIAEoCzI0LmlvLnN1YnN0cmFpdC5EZXJpdmF0",
            "aW9uRXhwcmVzc2lvbi5FeHByZXNzaW9uRGVjaW1hbEgAEkUKBnN0cnVjdBgZ",
            "IAEoCzIzLmlvLnN1YnN0cmFpdC5EZXJpdmF0aW9uRXhwcmVzc2lvbi5FeHBy",
            "ZXNzaW9uU3RydWN0SAASQQoEbGlzdBgbIAEoCzIxLmlvLnN1YnN0cmFpdC5E",
            "ZXJpdmF0aW9uRXhwcmVzc2lvbi5FeHByZXNzaW9uTGlzdEgAEj8KA21hcBgc",
            "IAEoCzIwLmlvLnN1YnN0cmFpdC5EZXJpdmF0aW9uRXhwcmVzc2lvbi5FeHBy",
            "ZXNzaW9uTWFwSAASNwoMdXNlcl9kZWZpbmVkGB8gASgLMh8uaW8uc3Vic3Ry",
            "YWl0LkV4dGVuc2lvbnMuVHlwZUlkSAASHQoTdHlwZV9wYXJhbWV0ZXJfbmFt",
            "ZRghIAEoCUgAEiAKFmludGVnZXJfcGFyYW1ldGVyX25hbWUYIiABKAlIABIZ",
            "Cg9pbnRlZ2VyX2xpdGVyYWwYIyABKAVIABI+Cgh1bmFyeV9vcBgkIAEoCzIq",
            "LmlvLnN1YnN0cmFpdC5EZXJpdmF0aW9uRXhwcmVzc2lvbi5VbmFyeU9wSAAS",
            "QAoJYmluYXJ5X29wGCUgASgLMisuaW8uc3Vic3RyYWl0LkRlcml2YXRpb25F",
            "eHByZXNzaW9uLkJpbmFyeU9wSAASPAoHaWZfZWxzZRgmIAEoCzIpLmlvLnN1",
            "YnN0cmFpdC5EZXJpdmF0aW9uRXhwcmVzc2lvbi5JZkVsc2VIABqvAQoTRXhw",
            "cmVzc2lvbkZpeGVkQ2hhchIyCgZsZW5ndGgYASABKAsyIi5pby5zdWJzdHJh",
            "aXQuRGVyaXZhdGlvbkV4cHJlc3Npb24SLwoJdmFyaWF0aW9uGAIgASgLMhwu",
            "aW8uc3Vic3RyYWl0LlR5cGUuVmFyaWF0aW9uEjMKC251bGxhYmlsaXR5GAMg",
            "ASgOMh4uaW8uc3Vic3RyYWl0LlR5cGUuTnVsbGFiaWxpdHkarQEKEUV4cHJl",
            "c3Npb25WYXJDaGFyEjIKBmxlbmd0aBgBIAEoCzIiLmlvLnN1YnN0cmFpdC5E",
            "ZXJpdmF0aW9uRXhwcmVzc2lvbhIvCgl2YXJpYXRpb24YAiABKAsyHC5pby5z",
            "dWJzdHJhaXQuVHlwZS5WYXJpYXRpb24SMwoLbnVsbGFiaWxpdHkYAyABKA4y",
            "Hi5pby5zdWJzdHJhaXQuVHlwZS5OdWxsYWJpbGl0eRqxAQoVRXhwcmVzc2lv",
            "bkZpeGVkQmluYXJ5EjIKBmxlbmd0aBgBIAEoCzIiLmlvLnN1YnN0cmFpdC5E",
            "ZXJpdmF0aW9uRXhwcmVzc2lvbhIvCgl2YXJpYXRpb24YAiABKAsyHC5pby5z",
            "dWJzdHJhaXQuVHlwZS5WYXJpYXRpb24SMwoLbnVsbGFiaWxpdHkYAyABKA4y",
            "Hi5pby5zdWJzdHJhaXQuVHlwZS5OdWxsYWJpbGl0eRrjAQoRRXhwcmVzc2lv",
            "bkRlY2ltYWwSMQoFc2NhbGUYASABKAsyIi5pby5zdWJzdHJhaXQuRGVyaXZh",
            "dGlvbkV4cHJlc3Npb24SNQoJcHJlY2lzaW9uGAIgASgLMiIuaW8uc3Vic3Ry",
            "YWl0LkRlcml2YXRpb25FeHByZXNzaW9uEi8KCXZhcmlhdGlvbhgDIAEoCzIc",
            "LmlvLnN1YnN0cmFpdC5UeXBlLlZhcmlhdGlvbhIzCgtudWxsYWJpbGl0eRgE",
            "IAEoDjIeLmlvLnN1YnN0cmFpdC5UeXBlLk51bGxhYmlsaXR5GqsBChBFeHBy",
            "ZXNzaW9uU3RydWN0EjEKBXR5cGVzGAEgAygLMiIuaW8uc3Vic3RyYWl0LkRl",
            "cml2YXRpb25FeHByZXNzaW9uEi8KCXZhcmlhdGlvbhgCIAEoCzIcLmlvLnN1",
            "YnN0cmFpdC5UeXBlLlZhcmlhdGlvbhIzCgtudWxsYWJpbGl0eRgDIAEoDjIe",
            "LmlvLnN1YnN0cmFpdC5UeXBlLk51bGxhYmlsaXR5GmsKFUV4cHJlc3Npb25O",
            "YW1lZFN0cnVjdBINCgVuYW1lcxgBIAMoCRJDCgZzdHJ1Y3QYAiABKAsyMy5p",
            "by5zdWJzdHJhaXQuRGVyaXZhdGlvbkV4cHJlc3Npb24uRXhwcmVzc2lvblN0",
            "cnVjdBqoAQoORXhwcmVzc2lvbkxpc3QSMAoEdHlwZRgBIAEoCzIiLmlvLnN1",
            "YnN0cmFpdC5EZXJpdmF0aW9uRXhwcmVzc2lvbhIvCgl2YXJpYXRpb24YAiAB",
            "KAsyHC5pby5zdWJzdHJhaXQuVHlwZS5WYXJpYXRpb24SMwoLbnVsbGFiaWxp",
            "dHkYAyABKA4yHi5pby5zdWJzdHJhaXQuVHlwZS5OdWxsYWJpbGl0eRrZAQoN",
            "RXhwcmVzc2lvbk1hcBIvCgNrZXkYASABKAsyIi5pby5zdWJzdHJhaXQuRGVy",
            "aXZhdGlvbkV4cHJlc3Npb24SMQoFdmFsdWUYAiABKAsyIi5pby5zdWJzdHJh",
            "aXQuRGVyaXZhdGlvbkV4cHJlc3Npb24SLwoJdmFyaWF0aW9uGAMgASgLMhwu",
            "aW8uc3Vic3RyYWl0LlR5cGUuVmFyaWF0aW9uEjMKC251bGxhYmlsaXR5GAQg",
            "ASgOMh4uaW8uc3Vic3RyYWl0LlR5cGUuTnVsbGFiaWxpdHkasgEKBklmRWxz",
            "ZRI4CgxpZl9jb25kaXRpb24YASABKAsyIi5pby5zdWJzdHJhaXQuRGVyaXZh",
            "dGlvbkV4cHJlc3Npb24SNQoJaWZfcmV0dXJuGAIgASgLMiIuaW8uc3Vic3Ry",
            "YWl0LkRlcml2YXRpb25FeHByZXNzaW9uEjcKC2Vsc2VfcmV0dXJuGAMgASgL",
            "MiIuaW8uc3Vic3RyYWl0LkRlcml2YXRpb25FeHByZXNzaW9uGqYBCgdVbmFy",
            "eU9wEkIKB29wX3R5cGUYASABKA4yMS5pby5zdWJzdHJhaXQuRGVyaXZhdGlv",
            "bkV4cHJlc3Npb24uVW5hcnlPcC5PcFR5cGUSLwoDYXJnGAIgASgLMiIuaW8u",
            "c3Vic3RyYWl0LkRlcml2YXRpb25FeHByZXNzaW9uIiYKBk9wVHlwZRILCgdV",
            "TktOT1dOEAASDwoLQk9PTEVBTl9OT1QQARrWAgoIQmluYXJ5T3ASQwoHb3Bf",
            "dHlwZRgBIAEoDjIyLmlvLnN1YnN0cmFpdC5EZXJpdmF0aW9uRXhwcmVzc2lv",
            "bi5CaW5hcnlPcC5PcFR5cGUSMAoEYXJnMRgCIAEoCzIiLmlvLnN1YnN0cmFp",
            "dC5EZXJpdmF0aW9uRXhwcmVzc2lvbhIwCgRhcmcyGAMgASgLMiIuaW8uc3Vi",
            "c3RyYWl0LkRlcml2YXRpb25FeHByZXNzaW9uIqABCgZPcFR5cGUSCwoHVU5L",
            "Tk9XThAAEggKBFBMVVMQARIJCgVNSU5VUxACEgwKCE1VTFRJUExZEAMSCgoG",
            "RElWSURFEAQSBwoDTUlOEAUSBwoDTUFYEAYSEAoMR1JFQVRFUl9USEFOEAcS",
            "DQoJTEVTU19USEFOEAgSBwoDQU5EEAkSBgoCT1IQChIKCgZFUVVBTFMQCxIK",
            "CgZDT1ZFUlMQDEIGCgRraW5kQhdQAaoCElN1YnN0cmFpdC5Qcm90b2J1ZmIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Substrait.Protobuf.TypeReflection.Descriptor, global::Substrait.Protobuf.ExtensionsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.DerivationExpression), global::Substrait.Protobuf.DerivationExpression.Parser, new[]{ "Bool", "I8", "I16", "I32", "I64", "Fp32", "Fp64", "String", "Binary", "Timestamp", "Date", "Time", "IntervalYear", "IntervalDay", "TimestampTz", "Uuid", "FixedChar", "Varchar", "FixedBinary", "Decimal", "Struct", "List", "Map", "UserDefined", "TypeParameterName", "IntegerParameterName", "IntegerLiteral", "UnaryOp", "BinaryOp", "IfElse" }, new[]{ "Kind" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.DerivationExpression.Types.ExpressionFixedChar), global::Substrait.Protobuf.DerivationExpression.Types.ExpressionFixedChar.Parser, new[]{ "Length", "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.DerivationExpression.Types.ExpressionVarChar), global::Substrait.Protobuf.DerivationExpression.Types.ExpressionVarChar.Parser, new[]{ "Length", "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.DerivationExpression.Types.ExpressionFixedBinary), global::Substrait.Protobuf.DerivationExpression.Types.ExpressionFixedBinary.Parser, new[]{ "Length", "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.DerivationExpression.Types.ExpressionDecimal), global::Substrait.Protobuf.DerivationExpression.Types.ExpressionDecimal.Parser, new[]{ "Scale", "Precision", "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.DerivationExpression.Types.ExpressionStruct), global::Substrait.Protobuf.DerivationExpression.Types.ExpressionStruct.Parser, new[]{ "Types_", "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.DerivationExpression.Types.ExpressionNamedStruct), global::Substrait.Protobuf.DerivationExpression.Types.ExpressionNamedStruct.Parser, new[]{ "Names", "Struct" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.DerivationExpression.Types.ExpressionList), global::Substrait.Protobuf.DerivationExpression.Types.ExpressionList.Parser, new[]{ "Type", "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.DerivationExpression.Types.ExpressionMap), global::Substrait.Protobuf.DerivationExpression.Types.ExpressionMap.Parser, new[]{ "Key", "Value", "Variation", "Nullability" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.DerivationExpression.Types.IfElse), global::Substrait.Protobuf.DerivationExpression.Types.IfElse.Parser, new[]{ "IfCondition", "IfReturn", "ElseReturn" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.DerivationExpression.Types.UnaryOp), global::Substrait.Protobuf.DerivationExpression.Types.UnaryOp.Parser, new[]{ "OpType", "Arg" }, null, new[]{ typeof(global::Substrait.Protobuf.DerivationExpression.Types.UnaryOp.Types.OpType) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Substrait.Protobuf.DerivationExpression.Types.BinaryOp), global::Substrait.Protobuf.DerivationExpression.Types.BinaryOp.Parser, new[]{ "OpType", "Arg1", "Arg2" }, null, new[]{ typeof(global::Substrait.Protobuf.DerivationExpression.Types.BinaryOp.Types.OpType) }, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DerivationExpression : pb::IMessage<DerivationExpression>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DerivationExpression> _parser = new pb::MessageParser<DerivationExpression>(() => new DerivationExpression());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DerivationExpression> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Substrait.Protobuf.TypeExpressionsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DerivationExpression() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DerivationExpression(DerivationExpression other) : this() {
      switch (other.KindCase) {
        case KindOneofCase.Bool:
          Bool = other.Bool.Clone();
          break;
        case KindOneofCase.I8:
          I8 = other.I8.Clone();
          break;
        case KindOneofCase.I16:
          I16 = other.I16.Clone();
          break;
        case KindOneofCase.I32:
          I32 = other.I32.Clone();
          break;
        case KindOneofCase.I64:
          I64 = other.I64.Clone();
          break;
        case KindOneofCase.Fp32:
          Fp32 = other.Fp32.Clone();
          break;
        case KindOneofCase.Fp64:
          Fp64 = other.Fp64.Clone();
          break;
        case KindOneofCase.String:
          String = other.String.Clone();
          break;
        case KindOneofCase.Binary:
          Binary = other.Binary.Clone();
          break;
        case KindOneofCase.Timestamp:
          Timestamp = other.Timestamp.Clone();
          break;
        case KindOneofCase.Date:
          Date = other.Date.Clone();
          break;
        case KindOneofCase.Time:
          Time = other.Time.Clone();
          break;
        case KindOneofCase.IntervalYear:
          IntervalYear = other.IntervalYear.Clone();
          break;
        case KindOneofCase.IntervalDay:
          IntervalDay = other.IntervalDay.Clone();
          break;
        case KindOneofCase.TimestampTz:
          TimestampTz = other.TimestampTz.Clone();
          break;
        case KindOneofCase.Uuid:
          Uuid = other.Uuid.Clone();
          break;
        case KindOneofCase.FixedChar:
          FixedChar = other.FixedChar.Clone();
          break;
        case KindOneofCase.Varchar:
          Varchar = other.Varchar.Clone();
          break;
        case KindOneofCase.FixedBinary:
          FixedBinary = other.FixedBinary.Clone();
          break;
        case KindOneofCase.Decimal:
          Decimal = other.Decimal.Clone();
          break;
        case KindOneofCase.Struct:
          Struct = other.Struct.Clone();
          break;
        case KindOneofCase.List:
          List = other.List.Clone();
          break;
        case KindOneofCase.Map:
          Map = other.Map.Clone();
          break;
        case KindOneofCase.UserDefined:
          UserDefined = other.UserDefined.Clone();
          break;
        case KindOneofCase.TypeParameterName:
          TypeParameterName = other.TypeParameterName;
          break;
        case KindOneofCase.IntegerParameterName:
          IntegerParameterName = other.IntegerParameterName;
          break;
        case KindOneofCase.IntegerLiteral:
          IntegerLiteral = other.IntegerLiteral;
          break;
        case KindOneofCase.UnaryOp:
          UnaryOp = other.UnaryOp.Clone();
          break;
        case KindOneofCase.BinaryOp:
          BinaryOp = other.BinaryOp.Clone();
          break;
        case KindOneofCase.IfElse:
          IfElse = other.IfElse.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DerivationExpression Clone() {
      return new DerivationExpression(this);
    }

    /// <summary>Field number for the "bool" field.</summary>
    public const int BoolFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.Boolean Bool {
      get { return kindCase_ == KindOneofCase.Bool ? (global::Substrait.Protobuf.Type.Types.Boolean) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Bool;
      }
    }

    /// <summary>Field number for the "i8" field.</summary>
    public const int I8FieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.I8 I8 {
      get { return kindCase_ == KindOneofCase.I8 ? (global::Substrait.Protobuf.Type.Types.I8) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.I8;
      }
    }

    /// <summary>Field number for the "i16" field.</summary>
    public const int I16FieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.I16 I16 {
      get { return kindCase_ == KindOneofCase.I16 ? (global::Substrait.Protobuf.Type.Types.I16) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.I16;
      }
    }

    /// <summary>Field number for the "i32" field.</summary>
    public const int I32FieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.I32 I32 {
      get { return kindCase_ == KindOneofCase.I32 ? (global::Substrait.Protobuf.Type.Types.I32) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.I32;
      }
    }

    /// <summary>Field number for the "i64" field.</summary>
    public const int I64FieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.I64 I64 {
      get { return kindCase_ == KindOneofCase.I64 ? (global::Substrait.Protobuf.Type.Types.I64) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.I64;
      }
    }

    /// <summary>Field number for the "fp32" field.</summary>
    public const int Fp32FieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.FP32 Fp32 {
      get { return kindCase_ == KindOneofCase.Fp32 ? (global::Substrait.Protobuf.Type.Types.FP32) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Fp32;
      }
    }

    /// <summary>Field number for the "fp64" field.</summary>
    public const int Fp64FieldNumber = 11;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.FP64 Fp64 {
      get { return kindCase_ == KindOneofCase.Fp64 ? (global::Substrait.Protobuf.Type.Types.FP64) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Fp64;
      }
    }

    /// <summary>Field number for the "string" field.</summary>
    public const int StringFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.String String {
      get { return kindCase_ == KindOneofCase.String ? (global::Substrait.Protobuf.Type.Types.String) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.String;
      }
    }

    /// <summary>Field number for the "binary" field.</summary>
    public const int BinaryFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.Binary Binary {
      get { return kindCase_ == KindOneofCase.Binary ? (global::Substrait.Protobuf.Type.Types.Binary) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Binary;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.Timestamp Timestamp {
      get { return kindCase_ == KindOneofCase.Timestamp ? (global::Substrait.Protobuf.Type.Types.Timestamp) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Timestamp;
      }
    }

    /// <summary>Field number for the "date" field.</summary>
    public const int DateFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.Date Date {
      get { return kindCase_ == KindOneofCase.Date ? (global::Substrait.Protobuf.Type.Types.Date) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Date;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.Time Time {
      get { return kindCase_ == KindOneofCase.Time ? (global::Substrait.Protobuf.Type.Types.Time) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Time;
      }
    }

    /// <summary>Field number for the "interval_year" field.</summary>
    public const int IntervalYearFieldNumber = 19;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.IntervalYear IntervalYear {
      get { return kindCase_ == KindOneofCase.IntervalYear ? (global::Substrait.Protobuf.Type.Types.IntervalYear) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.IntervalYear;
      }
    }

    /// <summary>Field number for the "interval_day" field.</summary>
    public const int IntervalDayFieldNumber = 20;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.IntervalDay IntervalDay {
      get { return kindCase_ == KindOneofCase.IntervalDay ? (global::Substrait.Protobuf.Type.Types.IntervalDay) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.IntervalDay;
      }
    }

    /// <summary>Field number for the "timestamp_tz" field.</summary>
    public const int TimestampTzFieldNumber = 29;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.TimestampTZ TimestampTz {
      get { return kindCase_ == KindOneofCase.TimestampTz ? (global::Substrait.Protobuf.Type.Types.TimestampTZ) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.TimestampTz;
      }
    }

    /// <summary>Field number for the "uuid" field.</summary>
    public const int UuidFieldNumber = 32;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Type.Types.UUID Uuid {
      get { return kindCase_ == KindOneofCase.Uuid ? (global::Substrait.Protobuf.Type.Types.UUID) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Uuid;
      }
    }

    /// <summary>Field number for the "fixed_char" field.</summary>
    public const int FixedCharFieldNumber = 21;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.DerivationExpression.Types.ExpressionFixedChar FixedChar {
      get { return kindCase_ == KindOneofCase.FixedChar ? (global::Substrait.Protobuf.DerivationExpression.Types.ExpressionFixedChar) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.FixedChar;
      }
    }

    /// <summary>Field number for the "varchar" field.</summary>
    public const int VarcharFieldNumber = 22;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.DerivationExpression.Types.ExpressionVarChar Varchar {
      get { return kindCase_ == KindOneofCase.Varchar ? (global::Substrait.Protobuf.DerivationExpression.Types.ExpressionVarChar) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Varchar;
      }
    }

    /// <summary>Field number for the "fixed_binary" field.</summary>
    public const int FixedBinaryFieldNumber = 23;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.DerivationExpression.Types.ExpressionFixedBinary FixedBinary {
      get { return kindCase_ == KindOneofCase.FixedBinary ? (global::Substrait.Protobuf.DerivationExpression.Types.ExpressionFixedBinary) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.FixedBinary;
      }
    }

    /// <summary>Field number for the "decimal" field.</summary>
    public const int DecimalFieldNumber = 24;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.DerivationExpression.Types.ExpressionDecimal Decimal {
      get { return kindCase_ == KindOneofCase.Decimal ? (global::Substrait.Protobuf.DerivationExpression.Types.ExpressionDecimal) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Decimal;
      }
    }

    /// <summary>Field number for the "struct" field.</summary>
    public const int StructFieldNumber = 25;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.DerivationExpression.Types.ExpressionStruct Struct {
      get { return kindCase_ == KindOneofCase.Struct ? (global::Substrait.Protobuf.DerivationExpression.Types.ExpressionStruct) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Struct;
      }
    }

    /// <summary>Field number for the "list" field.</summary>
    public const int ListFieldNumber = 27;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.DerivationExpression.Types.ExpressionList List {
      get { return kindCase_ == KindOneofCase.List ? (global::Substrait.Protobuf.DerivationExpression.Types.ExpressionList) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.List;
      }
    }

    /// <summary>Field number for the "map" field.</summary>
    public const int MapFieldNumber = 28;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.DerivationExpression.Types.ExpressionMap Map {
      get { return kindCase_ == KindOneofCase.Map ? (global::Substrait.Protobuf.DerivationExpression.Types.ExpressionMap) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.Map;
      }
    }

    /// <summary>Field number for the "user_defined" field.</summary>
    public const int UserDefinedFieldNumber = 31;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.Extensions.Types.TypeId UserDefined {
      get { return kindCase_ == KindOneofCase.UserDefined ? (global::Substrait.Protobuf.Extensions.Types.TypeId) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.UserDefined;
      }
    }

    /// <summary>Field number for the "type_parameter_name" field.</summary>
    public const int TypeParameterNameFieldNumber = 33;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TypeParameterName {
      get { return kindCase_ == KindOneofCase.TypeParameterName ? (string) kind_ : ""; }
      set {
        kind_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        kindCase_ = KindOneofCase.TypeParameterName;
      }
    }

    /// <summary>Field number for the "integer_parameter_name" field.</summary>
    public const int IntegerParameterNameFieldNumber = 34;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IntegerParameterName {
      get { return kindCase_ == KindOneofCase.IntegerParameterName ? (string) kind_ : ""; }
      set {
        kind_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        kindCase_ = KindOneofCase.IntegerParameterName;
      }
    }

    /// <summary>Field number for the "integer_literal" field.</summary>
    public const int IntegerLiteralFieldNumber = 35;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IntegerLiteral {
      get { return kindCase_ == KindOneofCase.IntegerLiteral ? (int) kind_ : 0; }
      set {
        kind_ = value;
        kindCase_ = KindOneofCase.IntegerLiteral;
      }
    }

    /// <summary>Field number for the "unary_op" field.</summary>
    public const int UnaryOpFieldNumber = 36;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.DerivationExpression.Types.UnaryOp UnaryOp {
      get { return kindCase_ == KindOneofCase.UnaryOp ? (global::Substrait.Protobuf.DerivationExpression.Types.UnaryOp) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.UnaryOp;
      }
    }

    /// <summary>Field number for the "binary_op" field.</summary>
    public const int BinaryOpFieldNumber = 37;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.DerivationExpression.Types.BinaryOp BinaryOp {
      get { return kindCase_ == KindOneofCase.BinaryOp ? (global::Substrait.Protobuf.DerivationExpression.Types.BinaryOp) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.BinaryOp;
      }
    }

    /// <summary>Field number for the "if_else" field.</summary>
    public const int IfElseFieldNumber = 38;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Substrait.Protobuf.DerivationExpression.Types.IfElse IfElse {
      get { return kindCase_ == KindOneofCase.IfElse ? (global::Substrait.Protobuf.DerivationExpression.Types.IfElse) kind_ : null; }
      set {
        kind_ = value;
        kindCase_ = value == null ? KindOneofCase.None : KindOneofCase.IfElse;
      }
    }

    private object kind_;
    /// <summary>Enum of possible cases for the "kind" oneof.</summary>
    public enum KindOneofCase {
      None = 0,
      Bool = 1,
      I8 = 2,
      I16 = 3,
      I32 = 5,
      I64 = 7,
      Fp32 = 10,
      Fp64 = 11,
      String = 12,
      Binary = 13,
      Timestamp = 14,
      Date = 16,
      Time = 17,
      IntervalYear = 19,
      IntervalDay = 20,
      TimestampTz = 29,
      Uuid = 32,
      FixedChar = 21,
      Varchar = 22,
      FixedBinary = 23,
      Decimal = 24,
      Struct = 25,
      List = 27,
      Map = 28,
      UserDefined = 31,
      TypeParameterName = 33,
      IntegerParameterName = 34,
      IntegerLiteral = 35,
      UnaryOp = 36,
      BinaryOp = 37,
      IfElse = 38,
    }
    private KindOneofCase kindCase_ = KindOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KindOneofCase KindCase {
      get { return kindCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearKind() {
      kindCase_ = KindOneofCase.None;
      kind_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DerivationExpression);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DerivationExpression other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Bool, other.Bool)) return false;
      if (!object.Equals(I8, other.I8)) return false;
      if (!object.Equals(I16, other.I16)) return false;
      if (!object.Equals(I32, other.I32)) return false;
      if (!object.Equals(I64, other.I64)) return false;
      if (!object.Equals(Fp32, other.Fp32)) return false;
      if (!object.Equals(Fp64, other.Fp64)) return false;
      if (!object.Equals(String, other.String)) return false;
      if (!object.Equals(Binary, other.Binary)) return false;
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (!object.Equals(Date, other.Date)) return false;
      if (!object.Equals(Time, other.Time)) return false;
      if (!object.Equals(IntervalYear, other.IntervalYear)) return false;
      if (!object.Equals(IntervalDay, other.IntervalDay)) return false;
      if (!object.Equals(TimestampTz, other.TimestampTz)) return false;
      if (!object.Equals(Uuid, other.Uuid)) return false;
      if (!object.Equals(FixedChar, other.FixedChar)) return false;
      if (!object.Equals(Varchar, other.Varchar)) return false;
      if (!object.Equals(FixedBinary, other.FixedBinary)) return false;
      if (!object.Equals(Decimal, other.Decimal)) return false;
      if (!object.Equals(Struct, other.Struct)) return false;
      if (!object.Equals(List, other.List)) return false;
      if (!object.Equals(Map, other.Map)) return false;
      if (!object.Equals(UserDefined, other.UserDefined)) return false;
      if (TypeParameterName != other.TypeParameterName) return false;
      if (IntegerParameterName != other.IntegerParameterName) return false;
      if (IntegerLiteral != other.IntegerLiteral) return false;
      if (!object.Equals(UnaryOp, other.UnaryOp)) return false;
      if (!object.Equals(BinaryOp, other.BinaryOp)) return false;
      if (!object.Equals(IfElse, other.IfElse)) return false;
      if (KindCase != other.KindCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (kindCase_ == KindOneofCase.Bool) hash ^= Bool.GetHashCode();
      if (kindCase_ == KindOneofCase.I8) hash ^= I8.GetHashCode();
      if (kindCase_ == KindOneofCase.I16) hash ^= I16.GetHashCode();
      if (kindCase_ == KindOneofCase.I32) hash ^= I32.GetHashCode();
      if (kindCase_ == KindOneofCase.I64) hash ^= I64.GetHashCode();
      if (kindCase_ == KindOneofCase.Fp32) hash ^= Fp32.GetHashCode();
      if (kindCase_ == KindOneofCase.Fp64) hash ^= Fp64.GetHashCode();
      if (kindCase_ == KindOneofCase.String) hash ^= String.GetHashCode();
      if (kindCase_ == KindOneofCase.Binary) hash ^= Binary.GetHashCode();
      if (kindCase_ == KindOneofCase.Timestamp) hash ^= Timestamp.GetHashCode();
      if (kindCase_ == KindOneofCase.Date) hash ^= Date.GetHashCode();
      if (kindCase_ == KindOneofCase.Time) hash ^= Time.GetHashCode();
      if (kindCase_ == KindOneofCase.IntervalYear) hash ^= IntervalYear.GetHashCode();
      if (kindCase_ == KindOneofCase.IntervalDay) hash ^= IntervalDay.GetHashCode();
      if (kindCase_ == KindOneofCase.TimestampTz) hash ^= TimestampTz.GetHashCode();
      if (kindCase_ == KindOneofCase.Uuid) hash ^= Uuid.GetHashCode();
      if (kindCase_ == KindOneofCase.FixedChar) hash ^= FixedChar.GetHashCode();
      if (kindCase_ == KindOneofCase.Varchar) hash ^= Varchar.GetHashCode();
      if (kindCase_ == KindOneofCase.FixedBinary) hash ^= FixedBinary.GetHashCode();
      if (kindCase_ == KindOneofCase.Decimal) hash ^= Decimal.GetHashCode();
      if (kindCase_ == KindOneofCase.Struct) hash ^= Struct.GetHashCode();
      if (kindCase_ == KindOneofCase.List) hash ^= List.GetHashCode();
      if (kindCase_ == KindOneofCase.Map) hash ^= Map.GetHashCode();
      if (kindCase_ == KindOneofCase.UserDefined) hash ^= UserDefined.GetHashCode();
      if (kindCase_ == KindOneofCase.TypeParameterName) hash ^= TypeParameterName.GetHashCode();
      if (kindCase_ == KindOneofCase.IntegerParameterName) hash ^= IntegerParameterName.GetHashCode();
      if (kindCase_ == KindOneofCase.IntegerLiteral) hash ^= IntegerLiteral.GetHashCode();
      if (kindCase_ == KindOneofCase.UnaryOp) hash ^= UnaryOp.GetHashCode();
      if (kindCase_ == KindOneofCase.BinaryOp) hash ^= BinaryOp.GetHashCode();
      if (kindCase_ == KindOneofCase.IfElse) hash ^= IfElse.GetHashCode();
      hash ^= (int) kindCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (kindCase_ == KindOneofCase.Bool) {
        output.WriteRawTag(10);
        output.WriteMessage(Bool);
      }
      if (kindCase_ == KindOneofCase.I8) {
        output.WriteRawTag(18);
        output.WriteMessage(I8);
      }
      if (kindCase_ == KindOneofCase.I16) {
        output.WriteRawTag(26);
        output.WriteMessage(I16);
      }
      if (kindCase_ == KindOneofCase.I32) {
        output.WriteRawTag(42);
        output.WriteMessage(I32);
      }
      if (kindCase_ == KindOneofCase.I64) {
        output.WriteRawTag(58);
        output.WriteMessage(I64);
      }
      if (kindCase_ == KindOneofCase.Fp32) {
        output.WriteRawTag(82);
        output.WriteMessage(Fp32);
      }
      if (kindCase_ == KindOneofCase.Fp64) {
        output.WriteRawTag(90);
        output.WriteMessage(Fp64);
      }
      if (kindCase_ == KindOneofCase.String) {
        output.WriteRawTag(98);
        output.WriteMessage(String);
      }
      if (kindCase_ == KindOneofCase.Binary) {
        output.WriteRawTag(106);
        output.WriteMessage(Binary);
      }
      if (kindCase_ == KindOneofCase.Timestamp) {
        output.WriteRawTag(114);
        output.WriteMessage(Timestamp);
      }
      if (kindCase_ == KindOneofCase.Date) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Date);
      }
      if (kindCase_ == KindOneofCase.Time) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Time);
      }
      if (kindCase_ == KindOneofCase.IntervalYear) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(IntervalYear);
      }
      if (kindCase_ == KindOneofCase.IntervalDay) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(IntervalDay);
      }
      if (kindCase_ == KindOneofCase.FixedChar) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(FixedChar);
      }
      if (kindCase_ == KindOneofCase.Varchar) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(Varchar);
      }
      if (kindCase_ == KindOneofCase.FixedBinary) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(FixedBinary);
      }
      if (kindCase_ == KindOneofCase.Decimal) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(Decimal);
      }
      if (kindCase_ == KindOneofCase.Struct) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(Struct);
      }
      if (kindCase_ == KindOneofCase.List) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(List);
      }
      if (kindCase_ == KindOneofCase.Map) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(Map);
      }
      if (kindCase_ == KindOneofCase.TimestampTz) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(TimestampTz);
      }
      if (kindCase_ == KindOneofCase.UserDefined) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(UserDefined);
      }
      if (kindCase_ == KindOneofCase.Uuid) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(Uuid);
      }
      if (kindCase_ == KindOneofCase.TypeParameterName) {
        output.WriteRawTag(138, 2);
        output.WriteString(TypeParameterName);
      }
      if (kindCase_ == KindOneofCase.IntegerParameterName) {
        output.WriteRawTag(146, 2);
        output.WriteString(IntegerParameterName);
      }
      if (kindCase_ == KindOneofCase.IntegerLiteral) {
        output.WriteRawTag(152, 2);
        output.WriteInt32(IntegerLiteral);
      }
      if (kindCase_ == KindOneofCase.UnaryOp) {
        output.WriteRawTag(162, 2);
        output.WriteMessage(UnaryOp);
      }
      if (kindCase_ == KindOneofCase.BinaryOp) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(BinaryOp);
      }
      if (kindCase_ == KindOneofCase.IfElse) {
        output.WriteRawTag(178, 2);
        output.WriteMessage(IfElse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (kindCase_ == KindOneofCase.Bool) {
        output.WriteRawTag(10);
        output.WriteMessage(Bool);
      }
      if (kindCase_ == KindOneofCase.I8) {
        output.WriteRawTag(18);
        output.WriteMessage(I8);
      }
      if (kindCase_ == KindOneofCase.I16) {
        output.WriteRawTag(26);
        output.WriteMessage(I16);
      }
      if (kindCase_ == KindOneofCase.I32) {
        output.WriteRawTag(42);
        output.WriteMessage(I32);
      }
      if (kindCase_ == KindOneofCase.I64) {
        output.WriteRawTag(58);
        output.WriteMessage(I64);
      }
      if (kindCase_ == KindOneofCase.Fp32) {
        output.WriteRawTag(82);
        output.WriteMessage(Fp32);
      }
      if (kindCase_ == KindOneofCase.Fp64) {
        output.WriteRawTag(90);
        output.WriteMessage(Fp64);
      }
      if (kindCase_ == KindOneofCase.String) {
        output.WriteRawTag(98);
        output.WriteMessage(String);
      }
      if (kindCase_ == KindOneofCase.Binary) {
        output.WriteRawTag(106);
        output.WriteMessage(Binary);
      }
      if (kindCase_ == KindOneofCase.Timestamp) {
        output.WriteRawTag(114);
        output.WriteMessage(Timestamp);
      }
      if (kindCase_ == KindOneofCase.Date) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Date);
      }
      if (kindCase_ == KindOneofCase.Time) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(Time);
      }
      if (kindCase_ == KindOneofCase.IntervalYear) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(IntervalYear);
      }
      if (kindCase_ == KindOneofCase.IntervalDay) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(IntervalDay);
      }
      if (kindCase_ == KindOneofCase.FixedChar) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(FixedChar);
      }
      if (kindCase_ == KindOneofCase.Varchar) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(Varchar);
      }
      if (kindCase_ == KindOneofCase.FixedBinary) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(FixedBinary);
      }
      if (kindCase_ == KindOneofCase.Decimal) {
        output.WriteRawTag(194, 1);
        output.WriteMessage(Decimal);
      }
      if (kindCase_ == KindOneofCase.Struct) {
        output.WriteRawTag(202, 1);
        output.WriteMessage(Struct);
      }
      if (kindCase_ == KindOneofCase.List) {
        output.WriteRawTag(218, 1);
        output.WriteMessage(List);
      }
      if (kindCase_ == KindOneofCase.Map) {
        output.WriteRawTag(226, 1);
        output.WriteMessage(Map);
      }
      if (kindCase_ == KindOneofCase.TimestampTz) {
        output.WriteRawTag(234, 1);
        output.WriteMessage(TimestampTz);
      }
      if (kindCase_ == KindOneofCase.UserDefined) {
        output.WriteRawTag(250, 1);
        output.WriteMessage(UserDefined);
      }
      if (kindCase_ == KindOneofCase.Uuid) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(Uuid);
      }
      if (kindCase_ == KindOneofCase.TypeParameterName) {
        output.WriteRawTag(138, 2);
        output.WriteString(TypeParameterName);
      }
      if (kindCase_ == KindOneofCase.IntegerParameterName) {
        output.WriteRawTag(146, 2);
        output.WriteString(IntegerParameterName);
      }
      if (kindCase_ == KindOneofCase.IntegerLiteral) {
        output.WriteRawTag(152, 2);
        output.WriteInt32(IntegerLiteral);
      }
      if (kindCase_ == KindOneofCase.UnaryOp) {
        output.WriteRawTag(162, 2);
        output.WriteMessage(UnaryOp);
      }
      if (kindCase_ == KindOneofCase.BinaryOp) {
        output.WriteRawTag(170, 2);
        output.WriteMessage(BinaryOp);
      }
      if (kindCase_ == KindOneofCase.IfElse) {
        output.WriteRawTag(178, 2);
        output.WriteMessage(IfElse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (kindCase_ == KindOneofCase.Bool) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bool);
      }
      if (kindCase_ == KindOneofCase.I8) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(I8);
      }
      if (kindCase_ == KindOneofCase.I16) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(I16);
      }
      if (kindCase_ == KindOneofCase.I32) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(I32);
      }
      if (kindCase_ == KindOneofCase.I64) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(I64);
      }
      if (kindCase_ == KindOneofCase.Fp32) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fp32);
      }
      if (kindCase_ == KindOneofCase.Fp64) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fp64);
      }
      if (kindCase_ == KindOneofCase.String) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(String);
      }
      if (kindCase_ == KindOneofCase.Binary) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Binary);
      }
      if (kindCase_ == KindOneofCase.Timestamp) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      if (kindCase_ == KindOneofCase.Date) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Date);
      }
      if (kindCase_ == KindOneofCase.Time) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (kindCase_ == KindOneofCase.IntervalYear) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(IntervalYear);
      }
      if (kindCase_ == KindOneofCase.IntervalDay) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(IntervalDay);
      }
      if (kindCase_ == KindOneofCase.TimestampTz) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TimestampTz);
      }
      if (kindCase_ == KindOneofCase.Uuid) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Uuid);
      }
      if (kindCase_ == KindOneofCase.FixedChar) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FixedChar);
      }
      if (kindCase_ == KindOneofCase.Varchar) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Varchar);
      }
      if (kindCase_ == KindOneofCase.FixedBinary) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FixedBinary);
      }
      if (kindCase_ == KindOneofCase.Decimal) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Decimal);
      }
      if (kindCase_ == KindOneofCase.Struct) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Struct);
      }
      if (kindCase_ == KindOneofCase.List) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(List);
      }
      if (kindCase_ == KindOneofCase.Map) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Map);
      }
      if (kindCase_ == KindOneofCase.UserDefined) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UserDefined);
      }
      if (kindCase_ == KindOneofCase.TypeParameterName) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TypeParameterName);
      }
      if (kindCase_ == KindOneofCase.IntegerParameterName) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(IntegerParameterName);
      }
      if (kindCase_ == KindOneofCase.IntegerLiteral) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(IntegerLiteral);
      }
      if (kindCase_ == KindOneofCase.UnaryOp) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UnaryOp);
      }
      if (kindCase_ == KindOneofCase.BinaryOp) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(BinaryOp);
      }
      if (kindCase_ == KindOneofCase.IfElse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(IfElse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DerivationExpression other) {
      if (other == null) {
        return;
      }
      switch (other.KindCase) {
        case KindOneofCase.Bool:
          if (Bool == null) {
            Bool = new global::Substrait.Protobuf.Type.Types.Boolean();
          }
          Bool.MergeFrom(other.Bool);
          break;
        case KindOneofCase.I8:
          if (I8 == null) {
            I8 = new global::Substrait.Protobuf.Type.Types.I8();
          }
          I8.MergeFrom(other.I8);
          break;
        case KindOneofCase.I16:
          if (I16 == null) {
            I16 = new global::Substrait.Protobuf.Type.Types.I16();
          }
          I16.MergeFrom(other.I16);
          break;
        case KindOneofCase.I32:
          if (I32 == null) {
            I32 = new global::Substrait.Protobuf.Type.Types.I32();
          }
          I32.MergeFrom(other.I32);
          break;
        case KindOneofCase.I64:
          if (I64 == null) {
            I64 = new global::Substrait.Protobuf.Type.Types.I64();
          }
          I64.MergeFrom(other.I64);
          break;
        case KindOneofCase.Fp32:
          if (Fp32 == null) {
            Fp32 = new global::Substrait.Protobuf.Type.Types.FP32();
          }
          Fp32.MergeFrom(other.Fp32);
          break;
        case KindOneofCase.Fp64:
          if (Fp64 == null) {
            Fp64 = new global::Substrait.Protobuf.Type.Types.FP64();
          }
          Fp64.MergeFrom(other.Fp64);
          break;
        case KindOneofCase.String:
          if (String == null) {
            String = new global::Substrait.Protobuf.Type.Types.String();
          }
          String.MergeFrom(other.String);
          break;
        case KindOneofCase.Binary:
          if (Binary == null) {
            Binary = new global::Substrait.Protobuf.Type.Types.Binary();
          }
          Binary.MergeFrom(other.Binary);
          break;
        case KindOneofCase.Timestamp:
          if (Timestamp == null) {
            Timestamp = new global::Substrait.Protobuf.Type.Types.Timestamp();
          }
          Timestamp.MergeFrom(other.Timestamp);
          break;
        case KindOneofCase.Date:
          if (Date == null) {
            Date = new global::Substrait.Protobuf.Type.Types.Date();
          }
          Date.MergeFrom(other.Date);
          break;
        case KindOneofCase.Time:
          if (Time == null) {
            Time = new global::Substrait.Protobuf.Type.Types.Time();
          }
          Time.MergeFrom(other.Time);
          break;
        case KindOneofCase.IntervalYear:
          if (IntervalYear == null) {
            IntervalYear = new global::Substrait.Protobuf.Type.Types.IntervalYear();
          }
          IntervalYear.MergeFrom(other.IntervalYear);
          break;
        case KindOneofCase.IntervalDay:
          if (IntervalDay == null) {
            IntervalDay = new global::Substrait.Protobuf.Type.Types.IntervalDay();
          }
          IntervalDay.MergeFrom(other.IntervalDay);
          break;
        case KindOneofCase.TimestampTz:
          if (TimestampTz == null) {
            TimestampTz = new global::Substrait.Protobuf.Type.Types.TimestampTZ();
          }
          TimestampTz.MergeFrom(other.TimestampTz);
          break;
        case KindOneofCase.Uuid:
          if (Uuid == null) {
            Uuid = new global::Substrait.Protobuf.Type.Types.UUID();
          }
          Uuid.MergeFrom(other.Uuid);
          break;
        case KindOneofCase.FixedChar:
          if (FixedChar == null) {
            FixedChar = new global::Substrait.Protobuf.DerivationExpression.Types.ExpressionFixedChar();
          }
          FixedChar.MergeFrom(other.FixedChar);
          break;
        case KindOneofCase.Varchar:
          if (Varchar == null) {
            Varchar = new global::Substrait.Protobuf.DerivationExpression.Types.ExpressionVarChar();
          }
          Varchar.MergeFrom(other.Varchar);
          break;
        case KindOneofCase.FixedBinary:
          if (FixedBinary == null) {
            FixedBinary = new global::Substrait.Protobuf.DerivationExpression.Types.ExpressionFixedBinary();
          }
          FixedBinary.MergeFrom(other.FixedBinary);
          break;
        case KindOneofCase.Decimal:
          if (Decimal == null) {
            Decimal = new global::Substrait.Protobuf.DerivationExpression.Types.ExpressionDecimal();
          }
          Decimal.MergeFrom(other.Decimal);
          break;
        case KindOneofCase.Struct:
          if (Struct == null) {
            Struct = new global::Substrait.Protobuf.DerivationExpression.Types.ExpressionStruct();
          }
          Struct.MergeFrom(other.Struct);
          break;
        case KindOneofCase.List:
          if (List == null) {
            List = new global::Substrait.Protobuf.DerivationExpression.Types.ExpressionList();
          }
          List.MergeFrom(other.List);
          break;
        case KindOneofCase.Map:
          if (Map == null) {
            Map = new global::Substrait.Protobuf.DerivationExpression.Types.ExpressionMap();
          }
          Map.MergeFrom(other.Map);
          break;
        case KindOneofCase.UserDefined:
          if (UserDefined == null) {
            UserDefined = new global::Substrait.Protobuf.Extensions.Types.TypeId();
          }
          UserDefined.MergeFrom(other.UserDefined);
          break;
        case KindOneofCase.TypeParameterName:
          TypeParameterName = other.TypeParameterName;
          break;
        case KindOneofCase.IntegerParameterName:
          IntegerParameterName = other.IntegerParameterName;
          break;
        case KindOneofCase.IntegerLiteral:
          IntegerLiteral = other.IntegerLiteral;
          break;
        case KindOneofCase.UnaryOp:
          if (UnaryOp == null) {
            UnaryOp = new global::Substrait.Protobuf.DerivationExpression.Types.UnaryOp();
          }
          UnaryOp.MergeFrom(other.UnaryOp);
          break;
        case KindOneofCase.BinaryOp:
          if (BinaryOp == null) {
            BinaryOp = new global::Substrait.Protobuf.DerivationExpression.Types.BinaryOp();
          }
          BinaryOp.MergeFrom(other.BinaryOp);
          break;
        case KindOneofCase.IfElse:
          if (IfElse == null) {
            IfElse = new global::Substrait.Protobuf.DerivationExpression.Types.IfElse();
          }
          IfElse.MergeFrom(other.IfElse);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Substrait.Protobuf.Type.Types.Boolean subBuilder = new global::Substrait.Protobuf.Type.Types.Boolean();
            if (kindCase_ == KindOneofCase.Bool) {
              subBuilder.MergeFrom(Bool);
            }
            input.ReadMessage(subBuilder);
            Bool = subBuilder;
            break;
          }
          case 18: {
            global::Substrait.Protobuf.Type.Types.I8 subBuilder = new global::Substrait.Protobuf.Type.Types.I8();
            if (kindCase_ == KindOneofCase.I8) {
              subBuilder.MergeFrom(I8);
            }
            input.ReadMessage(subBuilder);
            I8 = subBuilder;
            break;
          }
          case 26: {
            global::Substrait.Protobuf.Type.Types.I16 subBuilder = new global::Substrait.Protobuf.Type.Types.I16();
            if (kindCase_ == KindOneofCase.I16) {
              subBuilder.MergeFrom(I16);
            }
            input.ReadMessage(subBuilder);
            I16 = subBuilder;
            break;
          }
          case 42: {
            global::Substrait.Protobuf.Type.Types.I32 subBuilder = new global::Substrait.Protobuf.Type.Types.I32();
            if (kindCase_ == KindOneofCase.I32) {
              subBuilder.MergeFrom(I32);
            }
            input.ReadMessage(subBuilder);
            I32 = subBuilder;
            break;
          }
          case 58: {
            global::Substrait.Protobuf.Type.Types.I64 subBuilder = new global::Substrait.Protobuf.Type.Types.I64();
            if (kindCase_ == KindOneofCase.I64) {
              subBuilder.MergeFrom(I64);
            }
            input.ReadMessage(subBuilder);
            I64 = subBuilder;
            break;
          }
          case 82: {
            global::Substrait.Protobuf.Type.Types.FP32 subBuilder = new global::Substrait.Protobuf.Type.Types.FP32();
            if (kindCase_ == KindOneofCase.Fp32) {
              subBuilder.MergeFrom(Fp32);
            }
            input.ReadMessage(subBuilder);
            Fp32 = subBuilder;
            break;
          }
          case 90: {
            global::Substrait.Protobuf.Type.Types.FP64 subBuilder = new global::Substrait.Protobuf.Type.Types.FP64();
            if (kindCase_ == KindOneofCase.Fp64) {
              subBuilder.MergeFrom(Fp64);
            }
            input.ReadMessage(subBuilder);
            Fp64 = subBuilder;
            break;
          }
          case 98: {
            global::Substrait.Protobuf.Type.Types.String subBuilder = new global::Substrait.Protobuf.Type.Types.String();
            if (kindCase_ == KindOneofCase.String) {
              subBuilder.MergeFrom(String);
            }
            input.ReadMessage(subBuilder);
            String = subBuilder;
            break;
          }
          case 106: {
            global::Substrait.Protobuf.Type.Types.Binary subBuilder = new global::Substrait.Protobuf.Type.Types.Binary();
            if (kindCase_ == KindOneofCase.Binary) {
              subBuilder.MergeFrom(Binary);
            }
            input.ReadMessage(subBuilder);
            Binary = subBuilder;
            break;
          }
          case 114: {
            global::Substrait.Protobuf.Type.Types.Timestamp subBuilder = new global::Substrait.Protobuf.Type.Types.Timestamp();
            if (kindCase_ == KindOneofCase.Timestamp) {
              subBuilder.MergeFrom(Timestamp);
            }
            input.ReadMessage(subBuilder);
            Timestamp = subBuilder;
            break;
          }
          case 130: {
            global::Substrait.Protobuf.Type.Types.Date subBuilder = new global::Substrait.Protobuf.Type.Types.Date();
            if (kindCase_ == KindOneofCase.Date) {
              subBuilder.MergeFrom(Date);
            }
            input.ReadMessage(subBuilder);
            Date = subBuilder;
            break;
          }
          case 138: {
            global::Substrait.Protobuf.Type.Types.Time subBuilder = new global::Substrait.Protobuf.Type.Types.Time();
            if (kindCase_ == KindOneofCase.Time) {
              subBuilder.MergeFrom(Time);
            }
            input.ReadMessage(subBuilder);
            Time = subBuilder;
            break;
          }
          case 154: {
            global::Substrait.Protobuf.Type.Types.IntervalYear subBuilder = new global::Substrait.Protobuf.Type.Types.IntervalYear();
            if (kindCase_ == KindOneofCase.IntervalYear) {
              subBuilder.MergeFrom(IntervalYear);
            }
            input.ReadMessage(subBuilder);
            IntervalYear = subBuilder;
            break;
          }
          case 162: {
            global::Substrait.Protobuf.Type.Types.IntervalDay subBuilder = new global::Substrait.Protobuf.Type.Types.IntervalDay();
            if (kindCase_ == KindOneofCase.IntervalDay) {
              subBuilder.MergeFrom(IntervalDay);
            }
            input.ReadMessage(subBuilder);
            IntervalDay = subBuilder;
            break;
          }
          case 170: {
            global::Substrait.Protobuf.DerivationExpression.Types.ExpressionFixedChar subBuilder = new global::Substrait.Protobuf.DerivationExpression.Types.ExpressionFixedChar();
            if (kindCase_ == KindOneofCase.FixedChar) {
              subBuilder.MergeFrom(FixedChar);
            }
            input.ReadMessage(subBuilder);
            FixedChar = subBuilder;
            break;
          }
          case 178: {
            global::Substrait.Protobuf.DerivationExpression.Types.ExpressionVarChar subBuilder = new global::Substrait.Protobuf.DerivationExpression.Types.ExpressionVarChar();
            if (kindCase_ == KindOneofCase.Varchar) {
              subBuilder.MergeFrom(Varchar);
            }
            input.ReadMessage(subBuilder);
            Varchar = subBuilder;
            break;
          }
          case 186: {
            global::Substrait.Protobuf.DerivationExpression.Types.ExpressionFixedBinary subBuilder = new global::Substrait.Protobuf.DerivationExpression.Types.ExpressionFixedBinary();
            if (kindCase_ == KindOneofCase.FixedBinary) {
              subBuilder.MergeFrom(FixedBinary);
            }
            input.ReadMessage(subBuilder);
            FixedBinary = subBuilder;
            break;
          }
          case 194: {
            global::Substrait.Protobuf.DerivationExpression.Types.ExpressionDecimal subBuilder = new global::Substrait.Protobuf.DerivationExpression.Types.ExpressionDecimal();
            if (kindCase_ == KindOneofCase.Decimal) {
              subBuilder.MergeFrom(Decimal);
            }
            input.ReadMessage(subBuilder);
            Decimal = subBuilder;
            break;
          }
          case 202: {
            global::Substrait.Protobuf.DerivationExpression.Types.ExpressionStruct subBuilder = new global::Substrait.Protobuf.DerivationExpression.Types.ExpressionStruct();
            if (kindCase_ == KindOneofCase.Struct) {
              subBuilder.MergeFrom(Struct);
            }
            input.ReadMessage(subBuilder);
            Struct = subBuilder;
            break;
          }
          case 218: {
            global::Substrait.Protobuf.DerivationExpression.Types.ExpressionList subBuilder = new global::Substrait.Protobuf.DerivationExpression.Types.ExpressionList();
            if (kindCase_ == KindOneofCase.List) {
              subBuilder.MergeFrom(List);
            }
            input.ReadMessage(subBuilder);
            List = subBuilder;
            break;
          }
          case 226: {
            global::Substrait.Protobuf.DerivationExpression.Types.ExpressionMap subBuilder = new global::Substrait.Protobuf.DerivationExpression.Types.ExpressionMap();
            if (kindCase_ == KindOneofCase.Map) {
              subBuilder.MergeFrom(Map);
            }
            input.ReadMessage(subBuilder);
            Map = subBuilder;
            break;
          }
          case 234: {
            global::Substrait.Protobuf.Type.Types.TimestampTZ subBuilder = new global::Substrait.Protobuf.Type.Types.TimestampTZ();
            if (kindCase_ == KindOneofCase.TimestampTz) {
              subBuilder.MergeFrom(TimestampTz);
            }
            input.ReadMessage(subBuilder);
            TimestampTz = subBuilder;
            break;
          }
          case 250: {
            global::Substrait.Protobuf.Extensions.Types.TypeId subBuilder = new global::Substrait.Protobuf.Extensions.Types.TypeId();
            if (kindCase_ == KindOneofCase.UserDefined) {
              subBuilder.MergeFrom(UserDefined);
            }
            input.ReadMessage(subBuilder);
            UserDefined = subBuilder;
            break;
          }
          case 258: {
            global::Substrait.Protobuf.Type.Types.UUID subBuilder = new global::Substrait.Protobuf.Type.Types.UUID();
            if (kindCase_ == KindOneofCase.Uuid) {
              subBuilder.MergeFrom(Uuid);
            }
            input.ReadMessage(subBuilder);
            Uuid = subBuilder;
            break;
          }
          case 266: {
            TypeParameterName = input.ReadString();
            break;
          }
          case 274: {
            IntegerParameterName = input.ReadString();
            break;
          }
          case 280: {
            IntegerLiteral = input.ReadInt32();
            break;
          }
          case 290: {
            global::Substrait.Protobuf.DerivationExpression.Types.UnaryOp subBuilder = new global::Substrait.Protobuf.DerivationExpression.Types.UnaryOp();
            if (kindCase_ == KindOneofCase.UnaryOp) {
              subBuilder.MergeFrom(UnaryOp);
            }
            input.ReadMessage(subBuilder);
            UnaryOp = subBuilder;
            break;
          }
          case 298: {
            global::Substrait.Protobuf.DerivationExpression.Types.BinaryOp subBuilder = new global::Substrait.Protobuf.DerivationExpression.Types.BinaryOp();
            if (kindCase_ == KindOneofCase.BinaryOp) {
              subBuilder.MergeFrom(BinaryOp);
            }
            input.ReadMessage(subBuilder);
            BinaryOp = subBuilder;
            break;
          }
          case 306: {
            global::Substrait.Protobuf.DerivationExpression.Types.IfElse subBuilder = new global::Substrait.Protobuf.DerivationExpression.Types.IfElse();
            if (kindCase_ == KindOneofCase.IfElse) {
              subBuilder.MergeFrom(IfElse);
            }
            input.ReadMessage(subBuilder);
            IfElse = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Substrait.Protobuf.Type.Types.Boolean subBuilder = new global::Substrait.Protobuf.Type.Types.Boolean();
            if (kindCase_ == KindOneofCase.Bool) {
              subBuilder.MergeFrom(Bool);
            }
            input.ReadMessage(subBuilder);
            Bool = subBuilder;
            break;
          }
          case 18: {
            global::Substrait.Protobuf.Type.Types.I8 subBuilder = new global::Substrait.Protobuf.Type.Types.I8();
            if (kindCase_ == KindOneofCase.I8) {
              subBuilder.MergeFrom(I8);
            }
            input.ReadMessage(subBuilder);
            I8 = subBuilder;
            break;
          }
          case 26: {
            global::Substrait.Protobuf.Type.Types.I16 subBuilder = new global::Substrait.Protobuf.Type.Types.I16();
            if (kindCase_ == KindOneofCase.I16) {
              subBuilder.MergeFrom(I16);
            }
            input.ReadMessage(subBuilder);
            I16 = subBuilder;
            break;
          }
          case 42: {
            global::Substrait.Protobuf.Type.Types.I32 subBuilder = new global::Substrait.Protobuf.Type.Types.I32();
            if (kindCase_ == KindOneofCase.I32) {
              subBuilder.MergeFrom(I32);
            }
            input.ReadMessage(subBuilder);
            I32 = subBuilder;
            break;
          }
          case 58: {
            global::Substrait.Protobuf.Type.Types.I64 subBuilder = new global::Substrait.Protobuf.Type.Types.I64();
            if (kindCase_ == KindOneofCase.I64) {
              subBuilder.MergeFrom(I64);
            }
            input.ReadMessage(subBuilder);
            I64 = subBuilder;
            break;
          }
          case 82: {
            global::Substrait.Protobuf.Type.Types.FP32 subBuilder = new global::Substrait.Protobuf.Type.Types.FP32();
            if (kindCase_ == KindOneofCase.Fp32) {
              subBuilder.MergeFrom(Fp32);
            }
            input.ReadMessage(subBuilder);
            Fp32 = subBuilder;
            break;
          }
          case 90: {
            global::Substrait.Protobuf.Type.Types.FP64 subBuilder = new global::Substrait.Protobuf.Type.Types.FP64();
            if (kindCase_ == KindOneofCase.Fp64) {
              subBuilder.MergeFrom(Fp64);
            }
            input.ReadMessage(subBuilder);
            Fp64 = subBuilder;
            break;
          }
          case 98: {
            global::Substrait.Protobuf.Type.Types.String subBuilder = new global::Substrait.Protobuf.Type.Types.String();
            if (kindCase_ == KindOneofCase.String) {
              subBuilder.MergeFrom(String);
            }
            input.ReadMessage(subBuilder);
            String = subBuilder;
            break;
          }
          case 106: {
            global::Substrait.Protobuf.Type.Types.Binary subBuilder = new global::Substrait.Protobuf.Type.Types.Binary();
            if (kindCase_ == KindOneofCase.Binary) {
              subBuilder.MergeFrom(Binary);
            }
            input.ReadMessage(subBuilder);
            Binary = subBuilder;
            break;
          }
          case 114: {
            global::Substrait.Protobuf.Type.Types.Timestamp subBuilder = new global::Substrait.Protobuf.Type.Types.Timestamp();
            if (kindCase_ == KindOneofCase.Timestamp) {
              subBuilder.MergeFrom(Timestamp);
            }
            input.ReadMessage(subBuilder);
            Timestamp = subBuilder;
            break;
          }
          case 130: {
            global::Substrait.Protobuf.Type.Types.Date subBuilder = new global::Substrait.Protobuf.Type.Types.Date();
            if (kindCase_ == KindOneofCase.Date) {
              subBuilder.MergeFrom(Date);
            }
            input.ReadMessage(subBuilder);
            Date = subBuilder;
            break;
          }
          case 138: {
            global::Substrait.Protobuf.Type.Types.Time subBuilder = new global::Substrait.Protobuf.Type.Types.Time();
            if (kindCase_ == KindOneofCase.Time) {
              subBuilder.MergeFrom(Time);
            }
            input.ReadMessage(subBuilder);
            Time = subBuilder;
            break;
          }
          case 154: {
            global::Substrait.Protobuf.Type.Types.IntervalYear subBuilder = new global::Substrait.Protobuf.Type.Types.IntervalYear();
            if (kindCase_ == KindOneofCase.IntervalYear) {
              subBuilder.MergeFrom(IntervalYear);
            }
            input.ReadMessage(subBuilder);
            IntervalYear = subBuilder;
            break;
          }
          case 162: {
            global::Substrait.Protobuf.Type.Types.IntervalDay subBuilder = new global::Substrait.Protobuf.Type.Types.IntervalDay();
            if (kindCase_ == KindOneofCase.IntervalDay) {
              subBuilder.MergeFrom(IntervalDay);
            }
            input.ReadMessage(subBuilder);
            IntervalDay = subBuilder;
            break;
          }
          case 170: {
            global::Substrait.Protobuf.DerivationExpression.Types.ExpressionFixedChar subBuilder = new global::Substrait.Protobuf.DerivationExpression.Types.ExpressionFixedChar();
            if (kindCase_ == KindOneofCase.FixedChar) {
              subBuilder.MergeFrom(FixedChar);
            }
            input.ReadMessage(subBuilder);
            FixedChar = subBuilder;
            break;
          }
          case 178: {
            global::Substrait.Protobuf.DerivationExpression.Types.ExpressionVarChar subBuilder = new global::Substrait.Protobuf.DerivationExpression.Types.ExpressionVarChar();
            if (kindCase_ == KindOneofCase.Varchar) {
              subBuilder.MergeFrom(Varchar);
            }
            input.ReadMessage(subBuilder);
            Varchar = subBuilder;
            break;
          }
          case 186: {
            global::Substrait.Protobuf.DerivationExpression.Types.ExpressionFixedBinary subBuilder = new global::Substrait.Protobuf.DerivationExpression.Types.ExpressionFixedBinary();
            if (kindCase_ == KindOneofCase.FixedBinary) {
              subBuilder.MergeFrom(FixedBinary);
            }
            input.ReadMessage(subBuilder);
            FixedBinary = subBuilder;
            break;
          }
          case 194: {
            global::Substrait.Protobuf.DerivationExpression.Types.ExpressionDecimal subBuilder = new global::Substrait.Protobuf.DerivationExpression.Types.ExpressionDecimal();
            if (kindCase_ == KindOneofCase.Decimal) {
              subBuilder.MergeFrom(Decimal);
            }
            input.ReadMessage(subBuilder);
            Decimal = subBuilder;
            break;
          }
          case 202: {
            global::Substrait.Protobuf.DerivationExpression.Types.ExpressionStruct subBuilder = new global::Substrait.Protobuf.DerivationExpression.Types.ExpressionStruct();
            if (kindCase_ == KindOneofCase.Struct) {
              subBuilder.MergeFrom(Struct);
            }
            input.ReadMessage(subBuilder);
            Struct = subBuilder;
            break;
          }
          case 218: {
            global::Substrait.Protobuf.DerivationExpression.Types.ExpressionList subBuilder = new global::Substrait.Protobuf.DerivationExpression.Types.ExpressionList();
            if (kindCase_ == KindOneofCase.List) {
              subBuilder.MergeFrom(List);
            }
            input.ReadMessage(subBuilder);
            List = subBuilder;
            break;
          }
          case 226: {
            global::Substrait.Protobuf.DerivationExpression.Types.ExpressionMap subBuilder = new global::Substrait.Protobuf.DerivationExpression.Types.ExpressionMap();
            if (kindCase_ == KindOneofCase.Map) {
              subBuilder.MergeFrom(Map);
            }
            input.ReadMessage(subBuilder);
            Map = subBuilder;
            break;
          }
          case 234: {
            global::Substrait.Protobuf.Type.Types.TimestampTZ subBuilder = new global::Substrait.Protobuf.Type.Types.TimestampTZ();
            if (kindCase_ == KindOneofCase.TimestampTz) {
              subBuilder.MergeFrom(TimestampTz);
            }
            input.ReadMessage(subBuilder);
            TimestampTz = subBuilder;
            break;
          }
          case 250: {
            global::Substrait.Protobuf.Extensions.Types.TypeId subBuilder = new global::Substrait.Protobuf.Extensions.Types.TypeId();
            if (kindCase_ == KindOneofCase.UserDefined) {
              subBuilder.MergeFrom(UserDefined);
            }
            input.ReadMessage(subBuilder);
            UserDefined = subBuilder;
            break;
          }
          case 258: {
            global::Substrait.Protobuf.Type.Types.UUID subBuilder = new global::Substrait.Protobuf.Type.Types.UUID();
            if (kindCase_ == KindOneofCase.Uuid) {
              subBuilder.MergeFrom(Uuid);
            }
            input.ReadMessage(subBuilder);
            Uuid = subBuilder;
            break;
          }
          case 266: {
            TypeParameterName = input.ReadString();
            break;
          }
          case 274: {
            IntegerParameterName = input.ReadString();
            break;
          }
          case 280: {
            IntegerLiteral = input.ReadInt32();
            break;
          }
          case 290: {
            global::Substrait.Protobuf.DerivationExpression.Types.UnaryOp subBuilder = new global::Substrait.Protobuf.DerivationExpression.Types.UnaryOp();
            if (kindCase_ == KindOneofCase.UnaryOp) {
              subBuilder.MergeFrom(UnaryOp);
            }
            input.ReadMessage(subBuilder);
            UnaryOp = subBuilder;
            break;
          }
          case 298: {
            global::Substrait.Protobuf.DerivationExpression.Types.BinaryOp subBuilder = new global::Substrait.Protobuf.DerivationExpression.Types.BinaryOp();
            if (kindCase_ == KindOneofCase.BinaryOp) {
              subBuilder.MergeFrom(BinaryOp);
            }
            input.ReadMessage(subBuilder);
            BinaryOp = subBuilder;
            break;
          }
          case 306: {
            global::Substrait.Protobuf.DerivationExpression.Types.IfElse subBuilder = new global::Substrait.Protobuf.DerivationExpression.Types.IfElse();
            if (kindCase_ == KindOneofCase.IfElse) {
              subBuilder.MergeFrom(IfElse);
            }
            input.ReadMessage(subBuilder);
            IfElse = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the DerivationExpression message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class ExpressionFixedChar : pb::IMessage<ExpressionFixedChar>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ExpressionFixedChar> _parser = new pb::MessageParser<ExpressionFixedChar>(() => new ExpressionFixedChar());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ExpressionFixedChar> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.DerivationExpression.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExpressionFixedChar() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExpressionFixedChar(ExpressionFixedChar other) : this() {
          length_ = other.length_ != null ? other.length_.Clone() : null;
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExpressionFixedChar Clone() {
          return new ExpressionFixedChar(this);
        }

        /// <summary>Field number for the "length" field.</summary>
        public const int LengthFieldNumber = 1;
        private global::Substrait.Protobuf.DerivationExpression length_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.DerivationExpression Length {
          get { return length_; }
          set {
            length_ = value;
          }
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 3;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ExpressionFixedChar);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ExpressionFixedChar other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Length, other.Length)) return false;
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (length_ != null) hash ^= Length.GetHashCode();
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (length_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Length);
          }
          if (variation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (length_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Length);
          }
          if (variation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (length_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Length);
          }
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ExpressionFixedChar other) {
          if (other == null) {
            return;
          }
          if (other.length_ != null) {
            if (length_ == null) {
              Length = new global::Substrait.Protobuf.DerivationExpression();
            }
            Length.MergeFrom(other.Length);
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (length_ == null) {
                  Length = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(Length);
                break;
              }
              case 18: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 24: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (length_ == null) {
                  Length = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(Length);
                break;
              }
              case 18: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 24: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class ExpressionVarChar : pb::IMessage<ExpressionVarChar>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ExpressionVarChar> _parser = new pb::MessageParser<ExpressionVarChar>(() => new ExpressionVarChar());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ExpressionVarChar> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.DerivationExpression.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExpressionVarChar() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExpressionVarChar(ExpressionVarChar other) : this() {
          length_ = other.length_ != null ? other.length_.Clone() : null;
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExpressionVarChar Clone() {
          return new ExpressionVarChar(this);
        }

        /// <summary>Field number for the "length" field.</summary>
        public const int LengthFieldNumber = 1;
        private global::Substrait.Protobuf.DerivationExpression length_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.DerivationExpression Length {
          get { return length_; }
          set {
            length_ = value;
          }
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 3;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ExpressionVarChar);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ExpressionVarChar other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Length, other.Length)) return false;
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (length_ != null) hash ^= Length.GetHashCode();
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (length_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Length);
          }
          if (variation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (length_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Length);
          }
          if (variation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (length_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Length);
          }
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ExpressionVarChar other) {
          if (other == null) {
            return;
          }
          if (other.length_ != null) {
            if (length_ == null) {
              Length = new global::Substrait.Protobuf.DerivationExpression();
            }
            Length.MergeFrom(other.Length);
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (length_ == null) {
                  Length = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(Length);
                break;
              }
              case 18: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 24: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (length_ == null) {
                  Length = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(Length);
                break;
              }
              case 18: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 24: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class ExpressionFixedBinary : pb::IMessage<ExpressionFixedBinary>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ExpressionFixedBinary> _parser = new pb::MessageParser<ExpressionFixedBinary>(() => new ExpressionFixedBinary());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ExpressionFixedBinary> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.DerivationExpression.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExpressionFixedBinary() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExpressionFixedBinary(ExpressionFixedBinary other) : this() {
          length_ = other.length_ != null ? other.length_.Clone() : null;
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExpressionFixedBinary Clone() {
          return new ExpressionFixedBinary(this);
        }

        /// <summary>Field number for the "length" field.</summary>
        public const int LengthFieldNumber = 1;
        private global::Substrait.Protobuf.DerivationExpression length_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.DerivationExpression Length {
          get { return length_; }
          set {
            length_ = value;
          }
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 3;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ExpressionFixedBinary);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ExpressionFixedBinary other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Length, other.Length)) return false;
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (length_ != null) hash ^= Length.GetHashCode();
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (length_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Length);
          }
          if (variation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (length_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Length);
          }
          if (variation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (length_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Length);
          }
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ExpressionFixedBinary other) {
          if (other == null) {
            return;
          }
          if (other.length_ != null) {
            if (length_ == null) {
              Length = new global::Substrait.Protobuf.DerivationExpression();
            }
            Length.MergeFrom(other.Length);
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (length_ == null) {
                  Length = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(Length);
                break;
              }
              case 18: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 24: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (length_ == null) {
                  Length = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(Length);
                break;
              }
              case 18: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 24: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class ExpressionDecimal : pb::IMessage<ExpressionDecimal>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ExpressionDecimal> _parser = new pb::MessageParser<ExpressionDecimal>(() => new ExpressionDecimal());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ExpressionDecimal> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.DerivationExpression.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExpressionDecimal() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExpressionDecimal(ExpressionDecimal other) : this() {
          scale_ = other.scale_ != null ? other.scale_.Clone() : null;
          precision_ = other.precision_ != null ? other.precision_.Clone() : null;
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExpressionDecimal Clone() {
          return new ExpressionDecimal(this);
        }

        /// <summary>Field number for the "scale" field.</summary>
        public const int ScaleFieldNumber = 1;
        private global::Substrait.Protobuf.DerivationExpression scale_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.DerivationExpression Scale {
          get { return scale_; }
          set {
            scale_ = value;
          }
        }

        /// <summary>Field number for the "precision" field.</summary>
        public const int PrecisionFieldNumber = 2;
        private global::Substrait.Protobuf.DerivationExpression precision_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.DerivationExpression Precision {
          get { return precision_; }
          set {
            precision_ = value;
          }
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 3;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 4;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ExpressionDecimal);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ExpressionDecimal other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Scale, other.Scale)) return false;
          if (!object.Equals(Precision, other.Precision)) return false;
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (scale_ != null) hash ^= Scale.GetHashCode();
          if (precision_ != null) hash ^= Precision.GetHashCode();
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (scale_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Scale);
          }
          if (precision_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Precision);
          }
          if (variation_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(32);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (scale_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Scale);
          }
          if (precision_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Precision);
          }
          if (variation_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(32);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (scale_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scale);
          }
          if (precision_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Precision);
          }
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ExpressionDecimal other) {
          if (other == null) {
            return;
          }
          if (other.scale_ != null) {
            if (scale_ == null) {
              Scale = new global::Substrait.Protobuf.DerivationExpression();
            }
            Scale.MergeFrom(other.Scale);
          }
          if (other.precision_ != null) {
            if (precision_ == null) {
              Precision = new global::Substrait.Protobuf.DerivationExpression();
            }
            Precision.MergeFrom(other.Precision);
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (scale_ == null) {
                  Scale = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(Scale);
                break;
              }
              case 18: {
                if (precision_ == null) {
                  Precision = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(Precision);
                break;
              }
              case 26: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 32: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (scale_ == null) {
                  Scale = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(Scale);
                break;
              }
              case 18: {
                if (precision_ == null) {
                  Precision = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(Precision);
                break;
              }
              case 26: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 32: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class ExpressionStruct : pb::IMessage<ExpressionStruct>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ExpressionStruct> _parser = new pb::MessageParser<ExpressionStruct>(() => new ExpressionStruct());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ExpressionStruct> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.DerivationExpression.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExpressionStruct() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExpressionStruct(ExpressionStruct other) : this() {
          types_ = other.types_.Clone();
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExpressionStruct Clone() {
          return new ExpressionStruct(this);
        }

        /// <summary>Field number for the "types" field.</summary>
        public const int Types_FieldNumber = 1;
        private static readonly pb::FieldCodec<global::Substrait.Protobuf.DerivationExpression> _repeated_types_codec
            = pb::FieldCodec.ForMessage(10, global::Substrait.Protobuf.DerivationExpression.Parser);
        private readonly pbc::RepeatedField<global::Substrait.Protobuf.DerivationExpression> types_ = new pbc::RepeatedField<global::Substrait.Protobuf.DerivationExpression>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Substrait.Protobuf.DerivationExpression> Types_ {
          get { return types_; }
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 3;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ExpressionStruct);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ExpressionStruct other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!types_.Equals(other.types_)) return false;
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= types_.GetHashCode();
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          types_.WriteTo(output, _repeated_types_codec);
          if (variation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          types_.WriteTo(ref output, _repeated_types_codec);
          if (variation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += types_.CalculateSize(_repeated_types_codec);
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ExpressionStruct other) {
          if (other == null) {
            return;
          }
          types_.Add(other.types_);
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                types_.AddEntriesFrom(input, _repeated_types_codec);
                break;
              }
              case 18: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 24: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                types_.AddEntriesFrom(ref input, _repeated_types_codec);
                break;
              }
              case 18: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 24: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class ExpressionNamedStruct : pb::IMessage<ExpressionNamedStruct>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ExpressionNamedStruct> _parser = new pb::MessageParser<ExpressionNamedStruct>(() => new ExpressionNamedStruct());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ExpressionNamedStruct> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.DerivationExpression.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExpressionNamedStruct() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExpressionNamedStruct(ExpressionNamedStruct other) : this() {
          names_ = other.names_.Clone();
          struct_ = other.struct_ != null ? other.struct_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExpressionNamedStruct Clone() {
          return new ExpressionNamedStruct(this);
        }

        /// <summary>Field number for the "names" field.</summary>
        public const int NamesFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_names_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> names_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Names {
          get { return names_; }
        }

        /// <summary>Field number for the "struct" field.</summary>
        public const int StructFieldNumber = 2;
        private global::Substrait.Protobuf.DerivationExpression.Types.ExpressionStruct struct_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.DerivationExpression.Types.ExpressionStruct Struct {
          get { return struct_; }
          set {
            struct_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ExpressionNamedStruct);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ExpressionNamedStruct other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!names_.Equals(other.names_)) return false;
          if (!object.Equals(Struct, other.Struct)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= names_.GetHashCode();
          if (struct_ != null) hash ^= Struct.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          names_.WriteTo(output, _repeated_names_codec);
          if (struct_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Struct);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          names_.WriteTo(ref output, _repeated_names_codec);
          if (struct_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Struct);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += names_.CalculateSize(_repeated_names_codec);
          if (struct_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Struct);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ExpressionNamedStruct other) {
          if (other == null) {
            return;
          }
          names_.Add(other.names_);
          if (other.struct_ != null) {
            if (struct_ == null) {
              Struct = new global::Substrait.Protobuf.DerivationExpression.Types.ExpressionStruct();
            }
            Struct.MergeFrom(other.Struct);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                names_.AddEntriesFrom(input, _repeated_names_codec);
                break;
              }
              case 18: {
                if (struct_ == null) {
                  Struct = new global::Substrait.Protobuf.DerivationExpression.Types.ExpressionStruct();
                }
                input.ReadMessage(Struct);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                names_.AddEntriesFrom(ref input, _repeated_names_codec);
                break;
              }
              case 18: {
                if (struct_ == null) {
                  Struct = new global::Substrait.Protobuf.DerivationExpression.Types.ExpressionStruct();
                }
                input.ReadMessage(Struct);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class ExpressionList : pb::IMessage<ExpressionList>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ExpressionList> _parser = new pb::MessageParser<ExpressionList>(() => new ExpressionList());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ExpressionList> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.DerivationExpression.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExpressionList() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExpressionList(ExpressionList other) : this() {
          type_ = other.type_ != null ? other.type_.Clone() : null;
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExpressionList Clone() {
          return new ExpressionList(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private global::Substrait.Protobuf.DerivationExpression type_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.DerivationExpression Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 2;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 3;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ExpressionList);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ExpressionList other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Type, other.Type)) return false;
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (type_ != null) hash ^= Type.GetHashCode();
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (type_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Type);
          }
          if (variation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (type_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Type);
          }
          if (variation_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (type_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Type);
          }
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ExpressionList other) {
          if (other == null) {
            return;
          }
          if (other.type_ != null) {
            if (type_ == null) {
              Type = new global::Substrait.Protobuf.DerivationExpression();
            }
            Type.MergeFrom(other.Type);
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (type_ == null) {
                  Type = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(Type);
                break;
              }
              case 18: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 24: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (type_ == null) {
                  Type = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(Type);
                break;
              }
              case 18: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 24: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class ExpressionMap : pb::IMessage<ExpressionMap>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<ExpressionMap> _parser = new pb::MessageParser<ExpressionMap>(() => new ExpressionMap());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ExpressionMap> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.DerivationExpression.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExpressionMap() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExpressionMap(ExpressionMap other) : this() {
          key_ = other.key_ != null ? other.key_.Clone() : null;
          value_ = other.value_ != null ? other.value_.Clone() : null;
          variation_ = other.variation_ != null ? other.variation_.Clone() : null;
          nullability_ = other.nullability_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ExpressionMap Clone() {
          return new ExpressionMap(this);
        }

        /// <summary>Field number for the "key" field.</summary>
        public const int KeyFieldNumber = 1;
        private global::Substrait.Protobuf.DerivationExpression key_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.DerivationExpression Key {
          get { return key_; }
          set {
            key_ = value;
          }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;
        private global::Substrait.Protobuf.DerivationExpression value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.DerivationExpression Value {
          get { return value_; }
          set {
            value_ = value;
          }
        }

        /// <summary>Field number for the "variation" field.</summary>
        public const int VariationFieldNumber = 3;
        private global::Substrait.Protobuf.Type.Types.Variation variation_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Variation Variation {
          get { return variation_; }
          set {
            variation_ = value;
          }
        }

        /// <summary>Field number for the "nullability" field.</summary>
        public const int NullabilityFieldNumber = 4;
        private global::Substrait.Protobuf.Type.Types.Nullability nullability_ = global::Substrait.Protobuf.Type.Types.Nullability.Nullable;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.Type.Types.Nullability Nullability {
          get { return nullability_; }
          set {
            nullability_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ExpressionMap);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ExpressionMap other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Key, other.Key)) return false;
          if (!object.Equals(Value, other.Value)) return false;
          if (!object.Equals(Variation, other.Variation)) return false;
          if (Nullability != other.Nullability) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (key_ != null) hash ^= Key.GetHashCode();
          if (value_ != null) hash ^= Value.GetHashCode();
          if (variation_ != null) hash ^= Variation.GetHashCode();
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) hash ^= Nullability.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (key_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Key);
          }
          if (value_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Value);
          }
          if (variation_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(32);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (key_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Key);
          }
          if (value_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Value);
          }
          if (variation_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            output.WriteRawTag(32);
            output.WriteEnum((int) Nullability);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (key_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
          }
          if (value_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
          }
          if (variation_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Variation);
          }
          if (Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Nullability);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ExpressionMap other) {
          if (other == null) {
            return;
          }
          if (other.key_ != null) {
            if (key_ == null) {
              Key = new global::Substrait.Protobuf.DerivationExpression();
            }
            Key.MergeFrom(other.Key);
          }
          if (other.value_ != null) {
            if (value_ == null) {
              Value = new global::Substrait.Protobuf.DerivationExpression();
            }
            Value.MergeFrom(other.Value);
          }
          if (other.variation_ != null) {
            if (variation_ == null) {
              Variation = new global::Substrait.Protobuf.Type.Types.Variation();
            }
            Variation.MergeFrom(other.Variation);
          }
          if (other.Nullability != global::Substrait.Protobuf.Type.Types.Nullability.Nullable) {
            Nullability = other.Nullability;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (key_ == null) {
                  Key = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(Key);
                break;
              }
              case 18: {
                if (value_ == null) {
                  Value = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(Value);
                break;
              }
              case 26: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 32: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (key_ == null) {
                  Key = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(Key);
                break;
              }
              case 18: {
                if (value_ == null) {
                  Value = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(Value);
                break;
              }
              case 26: {
                if (variation_ == null) {
                  Variation = new global::Substrait.Protobuf.Type.Types.Variation();
                }
                input.ReadMessage(Variation);
                break;
              }
              case 32: {
                Nullability = (global::Substrait.Protobuf.Type.Types.Nullability) input.ReadEnum();
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class IfElse : pb::IMessage<IfElse>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<IfElse> _parser = new pb::MessageParser<IfElse>(() => new IfElse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<IfElse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.DerivationExpression.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public IfElse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public IfElse(IfElse other) : this() {
          ifCondition_ = other.ifCondition_ != null ? other.ifCondition_.Clone() : null;
          ifReturn_ = other.ifReturn_ != null ? other.ifReturn_.Clone() : null;
          elseReturn_ = other.elseReturn_ != null ? other.elseReturn_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public IfElse Clone() {
          return new IfElse(this);
        }

        /// <summary>Field number for the "if_condition" field.</summary>
        public const int IfConditionFieldNumber = 1;
        private global::Substrait.Protobuf.DerivationExpression ifCondition_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.DerivationExpression IfCondition {
          get { return ifCondition_; }
          set {
            ifCondition_ = value;
          }
        }

        /// <summary>Field number for the "if_return" field.</summary>
        public const int IfReturnFieldNumber = 2;
        private global::Substrait.Protobuf.DerivationExpression ifReturn_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.DerivationExpression IfReturn {
          get { return ifReturn_; }
          set {
            ifReturn_ = value;
          }
        }

        /// <summary>Field number for the "else_return" field.</summary>
        public const int ElseReturnFieldNumber = 3;
        private global::Substrait.Protobuf.DerivationExpression elseReturn_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.DerivationExpression ElseReturn {
          get { return elseReturn_; }
          set {
            elseReturn_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as IfElse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(IfElse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(IfCondition, other.IfCondition)) return false;
          if (!object.Equals(IfReturn, other.IfReturn)) return false;
          if (!object.Equals(ElseReturn, other.ElseReturn)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (ifCondition_ != null) hash ^= IfCondition.GetHashCode();
          if (ifReturn_ != null) hash ^= IfReturn.GetHashCode();
          if (elseReturn_ != null) hash ^= ElseReturn.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (ifCondition_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(IfCondition);
          }
          if (ifReturn_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(IfReturn);
          }
          if (elseReturn_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(ElseReturn);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (ifCondition_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(IfCondition);
          }
          if (ifReturn_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(IfReturn);
          }
          if (elseReturn_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(ElseReturn);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (ifCondition_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(IfCondition);
          }
          if (ifReturn_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(IfReturn);
          }
          if (elseReturn_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ElseReturn);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(IfElse other) {
          if (other == null) {
            return;
          }
          if (other.ifCondition_ != null) {
            if (ifCondition_ == null) {
              IfCondition = new global::Substrait.Protobuf.DerivationExpression();
            }
            IfCondition.MergeFrom(other.IfCondition);
          }
          if (other.ifReturn_ != null) {
            if (ifReturn_ == null) {
              IfReturn = new global::Substrait.Protobuf.DerivationExpression();
            }
            IfReturn.MergeFrom(other.IfReturn);
          }
          if (other.elseReturn_ != null) {
            if (elseReturn_ == null) {
              ElseReturn = new global::Substrait.Protobuf.DerivationExpression();
            }
            ElseReturn.MergeFrom(other.ElseReturn);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (ifCondition_ == null) {
                  IfCondition = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(IfCondition);
                break;
              }
              case 18: {
                if (ifReturn_ == null) {
                  IfReturn = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(IfReturn);
                break;
              }
              case 26: {
                if (elseReturn_ == null) {
                  ElseReturn = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(ElseReturn);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (ifCondition_ == null) {
                  IfCondition = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(IfCondition);
                break;
              }
              case 18: {
                if (ifReturn_ == null) {
                  IfReturn = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(IfReturn);
                break;
              }
              case 26: {
                if (elseReturn_ == null) {
                  ElseReturn = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(ElseReturn);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class UnaryOp : pb::IMessage<UnaryOp>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<UnaryOp> _parser = new pb::MessageParser<UnaryOp>(() => new UnaryOp());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UnaryOp> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.DerivationExpression.Descriptor.NestedTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UnaryOp() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UnaryOp(UnaryOp other) : this() {
          opType_ = other.opType_;
          arg_ = other.arg_ != null ? other.arg_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UnaryOp Clone() {
          return new UnaryOp(this);
        }

        /// <summary>Field number for the "op_type" field.</summary>
        public const int OpTypeFieldNumber = 1;
        private global::Substrait.Protobuf.DerivationExpression.Types.UnaryOp.Types.OpType opType_ = global::Substrait.Protobuf.DerivationExpression.Types.UnaryOp.Types.OpType.Unknown;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.DerivationExpression.Types.UnaryOp.Types.OpType OpType {
          get { return opType_; }
          set {
            opType_ = value;
          }
        }

        /// <summary>Field number for the "arg" field.</summary>
        public const int ArgFieldNumber = 2;
        private global::Substrait.Protobuf.DerivationExpression arg_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.DerivationExpression Arg {
          get { return arg_; }
          set {
            arg_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UnaryOp);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UnaryOp other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OpType != other.OpType) return false;
          if (!object.Equals(Arg, other.Arg)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OpType != global::Substrait.Protobuf.DerivationExpression.Types.UnaryOp.Types.OpType.Unknown) hash ^= OpType.GetHashCode();
          if (arg_ != null) hash ^= Arg.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (OpType != global::Substrait.Protobuf.DerivationExpression.Types.UnaryOp.Types.OpType.Unknown) {
            output.WriteRawTag(8);
            output.WriteEnum((int) OpType);
          }
          if (arg_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Arg);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (OpType != global::Substrait.Protobuf.DerivationExpression.Types.UnaryOp.Types.OpType.Unknown) {
            output.WriteRawTag(8);
            output.WriteEnum((int) OpType);
          }
          if (arg_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Arg);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OpType != global::Substrait.Protobuf.DerivationExpression.Types.UnaryOp.Types.OpType.Unknown) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OpType);
          }
          if (arg_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Arg);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UnaryOp other) {
          if (other == null) {
            return;
          }
          if (other.OpType != global::Substrait.Protobuf.DerivationExpression.Types.UnaryOp.Types.OpType.Unknown) {
            OpType = other.OpType;
          }
          if (other.arg_ != null) {
            if (arg_ == null) {
              Arg = new global::Substrait.Protobuf.DerivationExpression();
            }
            Arg.MergeFrom(other.Arg);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OpType = (global::Substrait.Protobuf.DerivationExpression.Types.UnaryOp.Types.OpType) input.ReadEnum();
                break;
              }
              case 18: {
                if (arg_ == null) {
                  Arg = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(Arg);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                OpType = (global::Substrait.Protobuf.DerivationExpression.Types.UnaryOp.Types.OpType) input.ReadEnum();
                break;
              }
              case 18: {
                if (arg_ == null) {
                  Arg = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(Arg);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the UnaryOp message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum OpType {
            [pbr::OriginalName("UNKNOWN")] Unknown = 0,
            [pbr::OriginalName("BOOLEAN_NOT")] BooleanNot = 1,
          }

        }
        #endregion

      }

      public sealed partial class BinaryOp : pb::IMessage<BinaryOp>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<BinaryOp> _parser = new pb::MessageParser<BinaryOp>(() => new BinaryOp());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<BinaryOp> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Substrait.Protobuf.DerivationExpression.Descriptor.NestedTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BinaryOp() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BinaryOp(BinaryOp other) : this() {
          opType_ = other.opType_;
          arg1_ = other.arg1_ != null ? other.arg1_.Clone() : null;
          arg2_ = other.arg2_ != null ? other.arg2_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BinaryOp Clone() {
          return new BinaryOp(this);
        }

        /// <summary>Field number for the "op_type" field.</summary>
        public const int OpTypeFieldNumber = 1;
        private global::Substrait.Protobuf.DerivationExpression.Types.BinaryOp.Types.OpType opType_ = global::Substrait.Protobuf.DerivationExpression.Types.BinaryOp.Types.OpType.Unknown;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.DerivationExpression.Types.BinaryOp.Types.OpType OpType {
          get { return opType_; }
          set {
            opType_ = value;
          }
        }

        /// <summary>Field number for the "arg1" field.</summary>
        public const int Arg1FieldNumber = 2;
        private global::Substrait.Protobuf.DerivationExpression arg1_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.DerivationExpression Arg1 {
          get { return arg1_; }
          set {
            arg1_ = value;
          }
        }

        /// <summary>Field number for the "arg2" field.</summary>
        public const int Arg2FieldNumber = 3;
        private global::Substrait.Protobuf.DerivationExpression arg2_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Substrait.Protobuf.DerivationExpression Arg2 {
          get { return arg2_; }
          set {
            arg2_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as BinaryOp);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(BinaryOp other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (OpType != other.OpType) return false;
          if (!object.Equals(Arg1, other.Arg1)) return false;
          if (!object.Equals(Arg2, other.Arg2)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (OpType != global::Substrait.Protobuf.DerivationExpression.Types.BinaryOp.Types.OpType.Unknown) hash ^= OpType.GetHashCode();
          if (arg1_ != null) hash ^= Arg1.GetHashCode();
          if (arg2_ != null) hash ^= Arg2.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (OpType != global::Substrait.Protobuf.DerivationExpression.Types.BinaryOp.Types.OpType.Unknown) {
            output.WriteRawTag(8);
            output.WriteEnum((int) OpType);
          }
          if (arg1_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Arg1);
          }
          if (arg2_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Arg2);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (OpType != global::Substrait.Protobuf.DerivationExpression.Types.BinaryOp.Types.OpType.Unknown) {
            output.WriteRawTag(8);
            output.WriteEnum((int) OpType);
          }
          if (arg1_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Arg1);
          }
          if (arg2_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(Arg2);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (OpType != global::Substrait.Protobuf.DerivationExpression.Types.BinaryOp.Types.OpType.Unknown) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OpType);
          }
          if (arg1_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Arg1);
          }
          if (arg2_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Arg2);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(BinaryOp other) {
          if (other == null) {
            return;
          }
          if (other.OpType != global::Substrait.Protobuf.DerivationExpression.Types.BinaryOp.Types.OpType.Unknown) {
            OpType = other.OpType;
          }
          if (other.arg1_ != null) {
            if (arg1_ == null) {
              Arg1 = new global::Substrait.Protobuf.DerivationExpression();
            }
            Arg1.MergeFrom(other.Arg1);
          }
          if (other.arg2_ != null) {
            if (arg2_ == null) {
              Arg2 = new global::Substrait.Protobuf.DerivationExpression();
            }
            Arg2.MergeFrom(other.Arg2);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                OpType = (global::Substrait.Protobuf.DerivationExpression.Types.BinaryOp.Types.OpType) input.ReadEnum();
                break;
              }
              case 18: {
                if (arg1_ == null) {
                  Arg1 = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(Arg1);
                break;
              }
              case 26: {
                if (arg2_ == null) {
                  Arg2 = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(Arg2);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                OpType = (global::Substrait.Protobuf.DerivationExpression.Types.BinaryOp.Types.OpType) input.ReadEnum();
                break;
              }
              case 18: {
                if (arg1_ == null) {
                  Arg1 = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(Arg1);
                break;
              }
              case 26: {
                if (arg2_ == null) {
                  Arg2 = new global::Substrait.Protobuf.DerivationExpression();
                }
                input.ReadMessage(Arg2);
                break;
              }
            }
          }
        }
        #endif

        #region Nested types
        /// <summary>Container for nested types declared in the BinaryOp message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum OpType {
            [pbr::OriginalName("UNKNOWN")] Unknown = 0,
            [pbr::OriginalName("PLUS")] Plus = 1,
            [pbr::OriginalName("MINUS")] Minus = 2,
            [pbr::OriginalName("MULTIPLY")] Multiply = 3,
            [pbr::OriginalName("DIVIDE")] Divide = 4,
            [pbr::OriginalName("MIN")] Min = 5,
            [pbr::OriginalName("MAX")] Max = 6,
            [pbr::OriginalName("GREATER_THAN")] GreaterThan = 7,
            [pbr::OriginalName("LESS_THAN")] LessThan = 8,
            [pbr::OriginalName("AND")] And = 9,
            [pbr::OriginalName("OR")] Or = 10,
            [pbr::OriginalName("EQUALS")] Equals = 11,
            [pbr::OriginalName("COVERS")] Covers = 12,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
