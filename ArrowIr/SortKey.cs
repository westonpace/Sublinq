// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Datalinq.ArrowIr
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

/// An expression with an order
public struct SortKey : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static SortKey GetRootAsSortKey(ByteBuffer _bb) { return GetRootAsSortKey(_bb, new SortKey()); }
  public static SortKey GetRootAsSortKey(ByteBuffer _bb, SortKey obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SortKey __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public Datalinq.ArrowIr.Expression? Expression { get { int o = __p.__offset(4); return o != 0 ? (Datalinq.ArrowIr.Expression?)(new Datalinq.ArrowIr.Expression()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public Datalinq.ArrowIr.Ordering Ordering { get { int o = __p.__offset(6); return o != 0 ? (Datalinq.ArrowIr.Ordering)__p.bb.Get(o + __p.bb_pos) : Datalinq.ArrowIr.Ordering.ASCENDING_THEN_NULLS; } }

  public static Offset<Datalinq.ArrowIr.SortKey> CreateSortKey(FlatBufferBuilder builder,
      Offset<Datalinq.ArrowIr.Expression> expressionOffset = default(Offset<Datalinq.ArrowIr.Expression>),
      Datalinq.ArrowIr.Ordering ordering = Datalinq.ArrowIr.Ordering.ASCENDING_THEN_NULLS) {
    builder.StartTable(2);
    SortKey.AddExpression(builder, expressionOffset);
    SortKey.AddOrdering(builder, ordering);
    return SortKey.EndSortKey(builder);
  }

  public static void StartSortKey(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddExpression(FlatBufferBuilder builder, Offset<Datalinq.ArrowIr.Expression> expressionOffset) { builder.AddOffset(0, expressionOffset.Value, 0); }
  public static void AddOrdering(FlatBufferBuilder builder, Datalinq.ArrowIr.Ordering ordering) { builder.AddByte(1, (byte)ordering, 0); }
  public static Offset<Datalinq.ArrowIr.SortKey> EndSortKey(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    builder.Required(o, 4);  // expression
    return new Offset<Datalinq.ArrowIr.SortKey>(o);
  }
};


}
