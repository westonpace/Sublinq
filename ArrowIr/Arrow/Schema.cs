// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Datalinq.ArrowIr.Arrow
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

/// ----------------------------------------------------------------------
/// A Schema describes the columns in a row batch
public struct Schema : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static Schema GetRootAsSchema(ByteBuffer _bb) { return GetRootAsSchema(_bb, new Schema()); }
  public static Schema GetRootAsSchema(ByteBuffer _bb, Schema obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Schema __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// endianness of the buffer
  /// it is Little Endian by default
  /// if endianness doesn't match the underlying system then the vectors need to be converted
  public Datalinq.ArrowIr.Arrow.Endianness Endianness { get { int o = __p.__offset(4); return o != 0 ? (Datalinq.ArrowIr.Arrow.Endianness)__p.bb.GetShort(o + __p.bb_pos) : Datalinq.ArrowIr.Arrow.Endianness.Little; } }
  public Datalinq.ArrowIr.Arrow.Field? Fields(int j) { int o = __p.__offset(6); return o != 0 ? (Datalinq.ArrowIr.Arrow.Field?)(new Datalinq.ArrowIr.Arrow.Field()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int FieldsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public Datalinq.ArrowIr.Arrow.KeyValue? CustomMetadata(int j) { int o = __p.__offset(8); return o != 0 ? (Datalinq.ArrowIr.Arrow.KeyValue?)(new Datalinq.ArrowIr.Arrow.KeyValue()).__assign(__p.__indirect(__p.__vector(o) + j * 4), __p.bb) : null; }
  public int CustomMetadataLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  /// Features used in the stream/file.
  public Datalinq.ArrowIr.Arrow.Feature Features(int j) { int o = __p.__offset(10); return o != 0 ? (Datalinq.ArrowIr.Arrow.Feature)__p.bb.GetLong(__p.__vector(o) + j * 8) : (Datalinq.ArrowIr.Arrow.Feature)0; }
  public int FeaturesLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<Datalinq.ArrowIr.Arrow.Feature> GetFeaturesBytes() { return __p.__vector_as_span<Datalinq.ArrowIr.Arrow.Feature>(10, 8); }
#else
  public ArraySegment<byte>? GetFeaturesBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public Datalinq.ArrowIr.Arrow.Feature[] GetFeaturesArray() { int o = __p.__offset(10); if (o == 0) return null; int p = __p.__vector(o); int l = __p.__vector_len(o); Datalinq.ArrowIr.Arrow.Feature[] a = new Datalinq.ArrowIr.Arrow.Feature[l]; for (int i = 0; i < l; i++) { a[i] = (Datalinq.ArrowIr.Arrow.Feature)__p.bb.GetLong(p + i * 8); } return a; }

  public static Offset<Datalinq.ArrowIr.Arrow.Schema> CreateSchema(FlatBufferBuilder builder,
      Datalinq.ArrowIr.Arrow.Endianness endianness = Datalinq.ArrowIr.Arrow.Endianness.Little,
      VectorOffset fieldsOffset = default(VectorOffset),
      VectorOffset custom_metadataOffset = default(VectorOffset),
      VectorOffset featuresOffset = default(VectorOffset)) {
    builder.StartTable(4);
    Schema.AddFeatures(builder, featuresOffset);
    Schema.AddCustomMetadata(builder, custom_metadataOffset);
    Schema.AddFields(builder, fieldsOffset);
    Schema.AddEndianness(builder, endianness);
    return Schema.EndSchema(builder);
  }

  public static void StartSchema(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddEndianness(FlatBufferBuilder builder, Datalinq.ArrowIr.Arrow.Endianness endianness) { builder.AddShort(0, (short)endianness, 0); }
  public static void AddFields(FlatBufferBuilder builder, VectorOffset fieldsOffset) { builder.AddOffset(1, fieldsOffset.Value, 0); }
  public static VectorOffset CreateFieldsVector(FlatBufferBuilder builder, Offset<Datalinq.ArrowIr.Arrow.Field>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateFieldsVectorBlock(FlatBufferBuilder builder, Offset<Datalinq.ArrowIr.Arrow.Field>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartFieldsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddCustomMetadata(FlatBufferBuilder builder, VectorOffset customMetadataOffset) { builder.AddOffset(2, customMetadataOffset.Value, 0); }
  public static VectorOffset CreateCustomMetadataVector(FlatBufferBuilder builder, Offset<Datalinq.ArrowIr.Arrow.KeyValue>[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateCustomMetadataVectorBlock(FlatBufferBuilder builder, Offset<Datalinq.ArrowIr.Arrow.KeyValue>[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static void StartCustomMetadataVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddFeatures(FlatBufferBuilder builder, VectorOffset featuresOffset) { builder.AddOffset(3, featuresOffset.Value, 0); }
  public static VectorOffset CreateFeaturesVector(FlatBufferBuilder builder, Datalinq.ArrowIr.Arrow.Feature[] data) { builder.StartVector(8, data.Length, 8); for (int i = data.Length - 1; i >= 0; i--) builder.AddLong((long)data[i]); return builder.EndVector(); }
  public static VectorOffset CreateFeaturesVectorBlock(FlatBufferBuilder builder, Datalinq.ArrowIr.Arrow.Feature[] data) { builder.StartVector(8, data.Length, 8); builder.Add(data); return builder.EndVector(); }
  public static void StartFeaturesVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 8); }
  public static Offset<Datalinq.ArrowIr.Arrow.Schema> EndSchema(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Datalinq.ArrowIr.Arrow.Schema>(o);
  }
  public static void FinishSchemaBuffer(FlatBufferBuilder builder, Offset<Datalinq.ArrowIr.Arrow.Schema> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedSchemaBuffer(FlatBufferBuilder builder, Offset<Datalinq.ArrowIr.Arrow.Schema> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
