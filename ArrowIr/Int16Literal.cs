// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Datalinq.ArrowIr
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct Int16Literal : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static Int16Literal GetRootAsInt16Literal(ByteBuffer _bb) { return GetRootAsInt16Literal(_bb, new Int16Literal()); }
  public static Int16Literal GetRootAsInt16Literal(ByteBuffer _bb, Int16Literal obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Int16Literal __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public short Value { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetShort(o + __p.bb_pos) : (short)0; } }

  public static Offset<Datalinq.ArrowIr.Int16Literal> CreateInt16Literal(FlatBufferBuilder builder,
      short value = 0) {
    builder.StartTable(1);
    Int16Literal.AddValue(builder, value);
    return Int16Literal.EndInt16Literal(builder);
  }

  public static void StartInt16Literal(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddValue(FlatBufferBuilder builder, short value) { builder.AddShort(0, value, 0); }
  public static Offset<Datalinq.ArrowIr.Int16Literal> EndInt16Literal(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Datalinq.ArrowIr.Int16Literal>(o);
  }
};


}
