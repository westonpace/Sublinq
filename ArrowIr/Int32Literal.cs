// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Datalinq.ArrowIr
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct Int32Literal : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static Int32Literal GetRootAsInt32Literal(ByteBuffer _bb) { return GetRootAsInt32Literal(_bb, new Int32Literal()); }
  public static Int32Literal GetRootAsInt32Literal(ByteBuffer _bb, Int32Literal obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Int32Literal __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Value { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<Datalinq.ArrowIr.Int32Literal> CreateInt32Literal(FlatBufferBuilder builder,
      int value = 0) {
    builder.StartTable(1);
    Int32Literal.AddValue(builder, value);
    return Int32Literal.EndInt32Literal(builder);
  }

  public static void StartInt32Literal(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddValue(FlatBufferBuilder builder, int value) { builder.AddInt(0, value, 0); }
  public static Offset<Datalinq.ArrowIr.Int32Literal> EndInt32Literal(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Datalinq.ArrowIr.Int32Literal>(o);
  }
};


}
