// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SubLinq.ArrowIr
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct Float16Literal : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static Float16Literal GetRootAsFloat16Literal(ByteBuffer _bb) { return GetRootAsFloat16Literal(_bb, new Float16Literal()); }
  public static Float16Literal GetRootAsFloat16Literal(ByteBuffer _bb, Float16Literal obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Float16Literal __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public ushort Value { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetUshort(o + __p.bb_pos) : (ushort)0; } }

  public static Offset<SubLinq.ArrowIr.Float16Literal> CreateFloat16Literal(FlatBufferBuilder builder,
      ushort value = 0) {
    builder.StartTable(1);
    Float16Literal.AddValue(builder, value);
    return Float16Literal.EndFloat16Literal(builder);
  }

  public static void StartFloat16Literal(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddValue(FlatBufferBuilder builder, ushort value) { builder.AddUshort(0, value, 0); }
  public static Offset<SubLinq.ArrowIr.Float16Literal> EndFloat16Literal(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SubLinq.ArrowIr.Float16Literal>(o);
  }
};


}
